<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="262" onload="init(evt)" viewBox="0 0 1200 262" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="262" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="245.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="245.00"> </text><svg id="frames" x="10" width="1180" total_samples="51368502829"><g><title>[game] (103,493,306 samples, 0.20%)</title><rect x="0.0000%" y="181" width="0.2015%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="103493306"/><text x="0.2500%" y="191.50"></text></g><g><title>shiro::engine::move_gen::gen_moves (103,493,306 samples, 0.20%)</title><rect x="0.0000%" y="165" width="0.2015%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="103493306"/><text x="0.2500%" y="175.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::BitAnd&gt;::bitand (5,517,260 samples, 0.01%)</title><rect x="0.6006%" y="133" width="0.0107%" height="15" fill="rgb(221,193,54)" fg:x="308538068" fg:w="5517260"/><text x="0.8506%" y="143.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitAnd&gt;::bitand (5,517,260 samples, 0.01%)</title><rect x="0.6006%" y="117" width="0.0107%" height="15" fill="rgb(248,212,6)" fg:x="308538068" fg:w="5517260"/><text x="0.8506%" y="127.50"></text></g><g><title>core::cmp::PartialEq::ne (54,967,541 samples, 0.11%)</title><rect x="0.6114%" y="133" width="0.1070%" height="15" fill="rgb(208,68,35)" fg:x="314055328" fg:w="54967541"/><text x="0.8614%" y="143.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::cmp::PartialEq&lt;u64&gt;&gt;::eq (54,967,541 samples, 0.11%)</title><rect x="0.6114%" y="117" width="0.1070%" height="15" fill="rgb(232,128,0)" fg:x="314055328" fg:w="54967541"/><text x="0.8614%" y="127.50"></text></g><g><title>shiro::engine::core::bitboard::Bitboard::pop_rightmost (27,429,028 samples, 0.05%)</title><rect x="0.7184%" y="133" width="0.0534%" height="15" fill="rgb(207,160,47)" fg:x="369022869" fg:w="27429028"/><text x="0.9684%" y="143.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::add_move (76,999,357 samples, 0.15%)</title><rect x="0.7718%" y="133" width="0.1499%" height="15" fill="rgb(228,23,34)" fg:x="396451897" fg:w="76999357"/><text x="1.0218%" y="143.50"></text></g><g><title>shiro::engine::common::movelist::MoveList::emplace_bytes (76,999,357 samples, 0.15%)</title><rect x="0.7718%" y="117" width="0.1499%" height="15" fill="rgb(218,30,26)" fg:x="396451897" fg:w="76999357"/><text x="1.0218%" y="127.50"></text></g><g><title>core::ptr::write (10,965,077 samples, 0.02%)</title><rect x="0.9003%" y="101" width="0.0213%" height="15" fill="rgb(220,122,19)" fg:x="462486177" fg:w="10965077"/><text x="1.1503%" y="111.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_moves_dg (236,248,604 samples, 0.46%)</title><rect x="0.5366%" y="149" width="0.4599%" height="15" fill="rgb(250,228,42)" fg:x="275637280" fg:w="236248604"/><text x="0.7866%" y="159.50"></text></g><g><title>shiro::engine::move_gen::masks::pext_dg_lookup (38,434,630 samples, 0.07%)</title><rect x="0.9217%" y="133" width="0.0748%" height="15" fill="rgb(240,193,28)" fg:x="473451254" fg:w="38434630"/><text x="1.1717%" y="143.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (10,925,151 samples, 0.02%)</title><rect x="0.9752%" y="117" width="0.0213%" height="15" fill="rgb(216,20,37)" fg:x="500960733" fg:w="10925151"/><text x="1.2252%" y="127.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (10,925,151 samples, 0.02%)</title><rect x="0.9752%" y="101" width="0.0213%" height="15" fill="rgb(206,188,39)" fg:x="500960733" fg:w="10925151"/><text x="1.2252%" y="111.50"></text></g><g><title>core::slice::index::get_noubcheck (10,925,151 samples, 0.02%)</title><rect x="0.9752%" y="85" width="0.0213%" height="15" fill="rgb(217,207,13)" fg:x="500960733" fg:w="10925151"/><text x="1.2252%" y="95.50"></text></g><g><title>core::cmp::PartialEq::ne (126,554,727 samples, 0.25%)</title><rect x="1.0925%" y="133" width="0.2464%" height="15" fill="rgb(231,73,38)" fg:x="561221969" fg:w="126554727"/><text x="1.3425%" y="143.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::cmp::PartialEq&lt;u64&gt;&gt;::eq (126,554,727 samples, 0.25%)</title><rect x="1.0925%" y="117" width="0.2464%" height="15" fill="rgb(225,20,46)" fg:x="561221969" fg:w="126554727"/><text x="1.3425%" y="127.50"></text></g><g><title>shiro::engine::core::bitboard::Bitboard::pop_rightmost (83,028,140 samples, 0.16%)</title><rect x="1.3389%" y="133" width="0.1616%" height="15" fill="rgb(210,31,41)" fg:x="687776696" fg:w="83028140"/><text x="1.5889%" y="143.50"></text></g><g><title>core::num::&lt;impl u64&gt;::trailing_zeros (16,501,369 samples, 0.03%)</title><rect x="1.4684%" y="117" width="0.0321%" height="15" fill="rgb(221,200,47)" fg:x="754303467" fg:w="16501369"/><text x="1.7184%" y="127.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::add_move (197,522,369 samples, 0.38%)</title><rect x="1.5005%" y="133" width="0.3845%" height="15" fill="rgb(226,26,5)" fg:x="770804836" fg:w="197522369"/><text x="1.7505%" y="143.50"></text></g><g><title>shiro::engine::common::movelist::MoveList::emplace_bytes (197,522,369 samples, 0.38%)</title><rect x="1.5005%" y="117" width="0.3845%" height="15" fill="rgb(249,33,26)" fg:x="770804836" fg:w="197522369"/><text x="1.7505%" y="127.50"></text></g><g><title>core::ptr::write (10,968,845 samples, 0.02%)</title><rect x="1.8637%" y="101" width="0.0214%" height="15" fill="rgb(235,183,28)" fg:x="957358360" fg:w="10968845"/><text x="2.1137%" y="111.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_moves_hv (483,812,216 samples, 0.94%)</title><rect x="0.9965%" y="149" width="0.9418%" height="15" fill="rgb(221,5,38)" fg:x="511885884" fg:w="483812216"/><text x="1.2465%" y="159.50"></text></g><g><title>shiro::engine::move_gen::masks::pext_hv_lookup (27,370,895 samples, 0.05%)</title><rect x="1.8851%" y="133" width="0.0533%" height="15" fill="rgb(247,18,42)" fg:x="968327205" fg:w="27370895"/><text x="2.1351%" y="143.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (16,407,878 samples, 0.03%)</title><rect x="1.9064%" y="117" width="0.0319%" height="15" fill="rgb(241,131,45)" fg:x="979290222" fg:w="16407878"/><text x="2.1564%" y="127.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (16,407,878 samples, 0.03%)</title><rect x="1.9064%" y="101" width="0.0319%" height="15" fill="rgb(249,31,29)" fg:x="979290222" fg:w="16407878"/><text x="2.1564%" y="111.50"></text></g><g><title>core::slice::index::get_noubcheck (16,407,878 samples, 0.03%)</title><rect x="1.9064%" y="85" width="0.0319%" height="15" fill="rgb(225,111,53)" fg:x="979290222" fg:w="16407878"/><text x="2.1564%" y="95.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_moves_king_castle (33,041,753 samples, 0.06%)</title><rect x="1.9383%" y="149" width="0.0643%" height="15" fill="rgb(238,160,17)" fg:x="995698100" fg:w="33041753"/><text x="2.1883%" y="159.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::add_move (27,530,020 samples, 0.05%)</title><rect x="1.9491%" y="133" width="0.0536%" height="15" fill="rgb(214,148,48)" fg:x="1001209833" fg:w="27530020"/><text x="2.1991%" y="143.50"></text></g><g><title>shiro::engine::common::movelist::MoveList::emplace_bytes (27,530,020 samples, 0.05%)</title><rect x="1.9491%" y="117" width="0.0536%" height="15" fill="rgb(232,36,49)" fg:x="1001209833" fg:w="27530020"/><text x="2.1991%" y="127.50"></text></g><g><title>core::ptr::write (22,015,968 samples, 0.04%)</title><rect x="1.9598%" y="101" width="0.0429%" height="15" fill="rgb(209,103,24)" fg:x="1006723885" fg:w="22015968"/><text x="2.2098%" y="111.50"></text></g><g><title>core::cmp::PartialEq::ne (33,277,860 samples, 0.06%)</title><rect x="2.0455%" y="133" width="0.0648%" height="15" fill="rgb(229,88,8)" fg:x="1050719235" fg:w="33277860"/><text x="2.2955%" y="143.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::cmp::PartialEq&lt;u64&gt;&gt;::eq (33,277,860 samples, 0.06%)</title><rect x="2.0455%" y="117" width="0.0648%" height="15" fill="rgb(213,181,19)" fg:x="1050719235" fg:w="33277860"/><text x="2.2955%" y="127.50"></text></g><g><title>shiro::engine::core::bitboard::Bitboard::pop_rightmost (27,285,219 samples, 0.05%)</title><rect x="2.1102%" y="133" width="0.0531%" height="15" fill="rgb(254,191,54)" fg:x="1083997095" fg:w="27285219"/><text x="2.3602%" y="143.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_moves_king_normal (115,342,140 samples, 0.22%)</title><rect x="2.0027%" y="149" width="0.2245%" height="15" fill="rgb(241,83,37)" fg:x="1028739853" fg:w="115342140"/><text x="2.2527%" y="159.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::add_move (32,799,679 samples, 0.06%)</title><rect x="2.1634%" y="133" width="0.0639%" height="15" fill="rgb(233,36,39)" fg:x="1111282314" fg:w="32799679"/><text x="2.4134%" y="143.50"></text></g><g><title>shiro::engine::common::movelist::MoveList::emplace_bytes (32,799,679 samples, 0.06%)</title><rect x="2.1634%" y="117" width="0.0639%" height="15" fill="rgb(226,3,54)" fg:x="1111282314" fg:w="32799679"/><text x="2.4134%" y="127.50"></text></g><g><title>core::ptr::write (16,413,128 samples, 0.03%)</title><rect x="2.1953%" y="101" width="0.0320%" height="15" fill="rgb(245,192,40)" fg:x="1127668865" fg:w="16413128"/><text x="2.4453%" y="111.50"></text></g><g><title>core::cmp::PartialEq::ne (71,579,969 samples, 0.14%)</title><rect x="2.4183%" y="133" width="0.1393%" height="15" fill="rgb(238,167,29)" fg:x="1242236439" fg:w="71579969"/><text x="2.6683%" y="143.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::cmp::PartialEq&lt;u64&gt;&gt;::eq (71,579,969 samples, 0.14%)</title><rect x="2.4183%" y="117" width="0.1393%" height="15" fill="rgb(232,182,51)" fg:x="1242236439" fg:w="71579969"/><text x="2.6683%" y="127.50"></text></g><g><title>shiro::engine::core::bitboard::Bitboard::pop_rightmost (87,936,412 samples, 0.17%)</title><rect x="2.5576%" y="133" width="0.1712%" height="15" fill="rgb(231,60,39)" fg:x="1313816408" fg:w="87936412"/><text x="2.8076%" y="143.50"></text></g><g><title>core::num::&lt;impl u64&gt;::trailing_zeros (27,459,033 samples, 0.05%)</title><rect x="2.6754%" y="117" width="0.0535%" height="15" fill="rgb(208,69,12)" fg:x="1374293787" fg:w="27459033"/><text x="2.9254%" y="127.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::add_move (120,700,223 samples, 0.23%)</title><rect x="2.7288%" y="133" width="0.2350%" height="15" fill="rgb(235,93,37)" fg:x="1401752820" fg:w="120700223"/><text x="2.9788%" y="143.50"></text></g><g><title>shiro::engine::common::movelist::MoveList::emplace_bytes (120,700,223 samples, 0.23%)</title><rect x="2.7288%" y="117" width="0.2350%" height="15" fill="rgb(213,116,39)" fg:x="1401752820" fg:w="120700223"/><text x="2.9788%" y="127.50"></text></g><g><title>core::ptr::write (54,851,757 samples, 0.11%)</title><rect x="2.8570%" y="101" width="0.1068%" height="15" fill="rgb(222,207,29)" fg:x="1467601286" fg:w="54851757"/><text x="3.1070%" y="111.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_moves_knight (389,411,365 samples, 0.76%)</title><rect x="2.2272%" y="149" width="0.7581%" height="15" fill="rgb(206,96,30)" fg:x="1144081993" fg:w="389411365"/><text x="2.4772%" y="159.50"></text></g><g><title>shiro::engine::move_gen::masks::knight_lookup (11,040,315 samples, 0.02%)</title><rect x="2.9638%" y="133" width="0.0215%" height="15" fill="rgb(218,138,4)" fg:x="1522453043" fg:w="11040315"/><text x="3.2138%" y="143.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (11,040,315 samples, 0.02%)</title><rect x="2.9638%" y="117" width="0.0215%" height="15" fill="rgb(250,191,14)" fg:x="1522453043" fg:w="11040315"/><text x="3.2138%" y="127.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (11,040,315 samples, 0.02%)</title><rect x="2.9638%" y="101" width="0.0215%" height="15" fill="rgb(239,60,40)" fg:x="1522453043" fg:w="11040315"/><text x="3.2138%" y="111.50"></text></g><g><title>core::slice::index::get_noubcheck (11,040,315 samples, 0.02%)</title><rect x="2.9638%" y="85" width="0.0215%" height="15" fill="rgb(206,27,48)" fg:x="1522453043" fg:w="11040315"/><text x="3.2138%" y="95.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::BitAnd&gt;::bitand (10,968,228 samples, 0.02%)</title><rect x="3.0282%" y="133" width="0.0214%" height="15" fill="rgb(225,35,8)" fg:x="1555548531" fg:w="10968228"/><text x="3.2782%" y="143.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitAnd&gt;::bitand (10,968,228 samples, 0.02%)</title><rect x="3.0282%" y="117" width="0.0214%" height="15" fill="rgb(250,213,24)" fg:x="1555548531" fg:w="10968228"/><text x="3.2782%" y="127.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::BitXorAssign&gt;::bitxor_assign (10,915,725 samples, 0.02%)</title><rect x="3.0496%" y="133" width="0.0212%" height="15" fill="rgb(247,123,22)" fg:x="1566516759" fg:w="10915725"/><text x="3.2996%" y="143.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitXorAssign&gt;::bitxor_assign (10,915,725 samples, 0.02%)</title><rect x="3.0496%" y="117" width="0.0212%" height="15" fill="rgb(231,138,38)" fg:x="1566516759" fg:w="10915725"/><text x="3.2996%" y="127.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::Not&gt;::not (22,047,666 samples, 0.04%)</title><rect x="3.0708%" y="133" width="0.0429%" height="15" fill="rgb(231,145,46)" fg:x="1577432484" fg:w="22047666"/><text x="3.3208%" y="143.50"></text></g><g><title>&lt;u64 as core::ops::bit::Not&gt;::not (22,047,666 samples, 0.04%)</title><rect x="3.0708%" y="117" width="0.0429%" height="15" fill="rgb(251,118,11)" fg:x="1577432484" fg:w="22047666"/><text x="3.3208%" y="127.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::Shl&lt;__RhsT&gt;&gt;::shl (27,438,007 samples, 0.05%)</title><rect x="3.1137%" y="133" width="0.0534%" height="15" fill="rgb(217,147,25)" fg:x="1599480150" fg:w="27438007"/><text x="3.3637%" y="143.50"></text></g><g><title>&lt;u64 as core::ops::bit::Shl&lt;i32&gt;&gt;::shl (27,438,007 samples, 0.05%)</title><rect x="3.1137%" y="117" width="0.0534%" height="15" fill="rgb(247,81,37)" fg:x="1599480150" fg:w="27438007"/><text x="3.3637%" y="127.50"></text></g><g><title>core::cmp::PartialEq::ne (16,439,936 samples, 0.03%)</title><rect x="3.1672%" y="133" width="0.0320%" height="15" fill="rgb(209,12,38)" fg:x="1626918157" fg:w="16439936"/><text x="3.4172%" y="143.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::cmp::PartialEq&lt;u64&gt;&gt;::eq (16,439,936 samples, 0.03%)</title><rect x="3.1672%" y="117" width="0.0320%" height="15" fill="rgb(227,1,9)" fg:x="1626918157" fg:w="16439936"/><text x="3.4172%" y="127.50"></text></g><g><title>shiro::engine::core::bitboard::Bitboard::pop_rightmost (27,512,255 samples, 0.05%)</title><rect x="3.1992%" y="133" width="0.0536%" height="15" fill="rgb(248,47,43)" fg:x="1643358093" fg:w="27512255"/><text x="3.4492%" y="143.50"></text></g><g><title>core::num::&lt;impl u64&gt;::trailing_zeros (21,997,688 samples, 0.04%)</title><rect x="3.2099%" y="117" width="0.0428%" height="15" fill="rgb(221,10,30)" fg:x="1648872660" fg:w="21997688"/><text x="3.4599%" y="127.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::add_move (27,564,480 samples, 0.05%)</title><rect x="3.2527%" y="133" width="0.0537%" height="15" fill="rgb(210,229,1)" fg:x="1670870348" fg:w="27564480"/><text x="3.5027%" y="143.50"></text></g><g><title>shiro::engine::common::movelist::MoveList::emplace_bytes (27,564,480 samples, 0.05%)</title><rect x="3.2527%" y="117" width="0.0537%" height="15" fill="rgb(222,148,37)" fg:x="1670870348" fg:w="27564480"/><text x="3.5027%" y="127.50"></text></g><g><title>core::ptr::write (22,051,164 samples, 0.04%)</title><rect x="3.2634%" y="101" width="0.0429%" height="15" fill="rgb(234,67,33)" fg:x="1676383664" fg:w="22051164"/><text x="3.5134%" y="111.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_moves_pawn_captures (181,290,444 samples, 0.35%)</title><rect x="2.9853%" y="149" width="0.3529%" height="15" fill="rgb(247,98,35)" fg:x="1533493358" fg:w="181290444"/><text x="3.2353%" y="159.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::add_promotions (16,348,974 samples, 0.03%)</title><rect x="3.3064%" y="133" width="0.0318%" height="15" fill="rgb(247,138,52)" fg:x="1698434828" fg:w="16348974"/><text x="3.5564%" y="143.50"></text></g><g><title>shiro::engine::common::movelist::MoveList::emplace_bytes (16,348,974 samples, 0.03%)</title><rect x="3.3064%" y="117" width="0.0318%" height="15" fill="rgb(213,79,30)" fg:x="1698434828" fg:w="16348974"/><text x="3.5564%" y="127.50"></text></g><g><title>core::ptr::write (16,348,974 samples, 0.03%)</title><rect x="3.3064%" y="101" width="0.0318%" height="15" fill="rgb(246,177,23)" fg:x="1698434828" fg:w="16348974"/><text x="3.5564%" y="111.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::BitAnd&gt;::bitand (10,869,343 samples, 0.02%)</title><rect x="3.4023%" y="133" width="0.0212%" height="15" fill="rgb(230,62,27)" fg:x="1747699971" fg:w="10869343"/><text x="3.6523%" y="143.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitAnd&gt;::bitand (10,869,343 samples, 0.02%)</title><rect x="3.4023%" y="117" width="0.0212%" height="15" fill="rgb(216,154,8)" fg:x="1747699971" fg:w="10869343"/><text x="3.6523%" y="127.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::BitAndAssign&gt;::bitand_assign (5,457,581 samples, 0.01%)</title><rect x="3.4234%" y="133" width="0.0106%" height="15" fill="rgb(244,35,45)" fg:x="1758569314" fg:w="5457581"/><text x="3.6734%" y="143.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitAndAssign&gt;::bitand_assign (5,457,581 samples, 0.01%)</title><rect x="3.4234%" y="117" width="0.0106%" height="15" fill="rgb(251,115,12)" fg:x="1758569314" fg:w="5457581"/><text x="3.6734%" y="127.50"></text></g><g><title>shiro::engine::common::constants::rank_from_pos (10,921,528 samples, 0.02%)</title><rect x="3.4341%" y="133" width="0.0213%" height="15" fill="rgb(240,54,50)" fg:x="1764026895" fg:w="10921528"/><text x="3.6841%" y="143.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::Shr&lt;__RhsT&gt;&gt;::shr (10,921,528 samples, 0.02%)</title><rect x="3.4341%" y="117" width="0.0213%" height="15" fill="rgb(233,84,52)" fg:x="1764026895" fg:w="10921528"/><text x="3.6841%" y="127.50"></text></g><g><title>&lt;u64 as core::ops::bit::Shr&lt;usize&gt;&gt;::shr (10,921,528 samples, 0.02%)</title><rect x="3.4341%" y="101" width="0.0213%" height="15" fill="rgb(207,117,47)" fg:x="1764026895" fg:w="10921528"/><text x="3.6841%" y="111.50"></text></g><g><title>shiro::engine::core::bitboard::Bitboard::pop_rightmost (10,986,152 samples, 0.02%)</title><rect x="3.4553%" y="133" width="0.0214%" height="15" fill="rgb(249,43,39)" fg:x="1774948423" fg:w="10986152"/><text x="3.7053%" y="143.50"></text></g><g><title>shiro::engine::core::bitboard::Bitboard::unbounded_shl (10,922,917 samples, 0.02%)</title><rect x="3.4767%" y="133" width="0.0213%" height="15" fill="rgb(209,38,44)" fg:x="1785934575" fg:w="10922917"/><text x="3.7267%" y="143.50"></text></g><g><title>core::num::&lt;impl u64&gt;::unbounded_shl (10,922,917 samples, 0.02%)</title><rect x="3.4767%" y="117" width="0.0213%" height="15" fill="rgb(236,212,23)" fg:x="1785934575" fg:w="10922917"/><text x="3.7267%" y="127.50"></text></g><g><title>core::num::&lt;impl u64&gt;::unchecked_shl (10,922,917 samples, 0.02%)</title><rect x="3.4767%" y="101" width="0.0213%" height="15" fill="rgb(242,79,21)" fg:x="1785934575" fg:w="10922917"/><text x="3.7267%" y="111.50"></text></g><g><title>shiro::engine::core::bitboard::Bitboard::unbounded_shr (5,494,837 samples, 0.01%)</title><rect x="3.4980%" y="133" width="0.0107%" height="15" fill="rgb(211,96,35)" fg:x="1796857492" fg:w="5494837"/><text x="3.7480%" y="143.50"></text></g><g><title>core::num::&lt;impl u64&gt;::unbounded_shr (5,494,837 samples, 0.01%)</title><rect x="3.4980%" y="117" width="0.0107%" height="15" fill="rgb(253,215,40)" fg:x="1796857492" fg:w="5494837"/><text x="3.7480%" y="127.50"></text></g><g><title>core::num::&lt;impl u64&gt;::unchecked_shr (5,494,837 samples, 0.01%)</title><rect x="3.4980%" y="101" width="0.0107%" height="15" fill="rgb(211,81,21)" fg:x="1796857492" fg:w="5494837"/><text x="3.7480%" y="111.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::add_move (16,536,258 samples, 0.03%)</title><rect x="3.5087%" y="133" width="0.0322%" height="15" fill="rgb(208,190,38)" fg:x="1802352329" fg:w="16536258"/><text x="3.7587%" y="143.50"></text></g><g><title>shiro::engine::common::movelist::MoveList::emplace_bytes (16,536,258 samples, 0.03%)</title><rect x="3.5087%" y="117" width="0.0322%" height="15" fill="rgb(235,213,38)" fg:x="1802352329" fg:w="16536258"/><text x="3.7587%" y="127.50"></text></g><g><title>core::ptr::write (16,536,258 samples, 0.03%)</title><rect x="3.5087%" y="101" width="0.0322%" height="15" fill="rgb(237,122,38)" fg:x="1802352329" fg:w="16536258"/><text x="3.7587%" y="111.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_all_moves (1,753,545,972 samples, 3.41%)</title><rect x="0.2016%" y="165" width="3.4137%" height="15" fill="rgb(244,218,35)" fg:x="103555844" fg:w="1753545972"/><text x="0.4516%" y="175.50">shi..</text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_moves_pawn_pushes (142,318,014 samples, 0.28%)</title><rect x="3.3382%" y="149" width="0.2771%" height="15" fill="rgb(240,68,47)" fg:x="1714783802" fg:w="142318014"/><text x="3.5882%" y="159.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::add_promotions (38,213,229 samples, 0.07%)</title><rect x="3.5409%" y="133" width="0.0744%" height="15" fill="rgb(210,16,53)" fg:x="1818888587" fg:w="38213229"/><text x="3.7909%" y="143.50"></text></g><g><title>shiro::engine::common::movelist::MoveList::emplace_bytes (27,310,853 samples, 0.05%)</title><rect x="3.5621%" y="117" width="0.0532%" height="15" fill="rgb(235,124,12)" fg:x="1829790963" fg:w="27310853"/><text x="3.8121%" y="127.50"></text></g><g><title>core::ptr::write (27,310,853 samples, 0.05%)</title><rect x="3.5621%" y="101" width="0.0532%" height="15" fill="rgb(224,169,11)" fg:x="1829790963" fg:w="27310853"/><text x="3.8121%" y="111.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::BitAnd&gt;::bitand (16,399,271 samples, 0.03%)</title><rect x="11.6410%" y="117" width="0.0319%" height="15" fill="rgb(250,166,2)" fg:x="5979822619" fg:w="16399271"/><text x="11.8910%" y="127.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitAnd&gt;::bitand (16,399,271 samples, 0.03%)</title><rect x="11.6410%" y="101" width="0.0319%" height="15" fill="rgb(242,216,29)" fg:x="5979822619" fg:w="16399271"/><text x="11.8910%" y="111.50"></text></g><g><title>core::cmp::PartialEq::ne (32,849,061 samples, 0.06%)</title><rect x="11.6730%" y="117" width="0.0639%" height="15" fill="rgb(230,116,27)" fg:x="5996221890" fg:w="32849061"/><text x="11.9230%" y="127.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::cmp::PartialEq&lt;u64&gt;&gt;::eq (32,849,061 samples, 0.06%)</title><rect x="11.6730%" y="101" width="0.0639%" height="15" fill="rgb(228,99,48)" fg:x="5996221890" fg:w="32849061"/><text x="11.9230%" y="111.50"></text></g><g><title>shiro::engine::core::bitboard::Bitboard::pop_rightmost (5,512,325 samples, 0.01%)</title><rect x="11.7369%" y="117" width="0.0107%" height="15" fill="rgb(253,11,6)" fg:x="6029070951" fg:w="5512325"/><text x="11.9869%" y="127.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::add_move (5,515,567 samples, 0.01%)</title><rect x="11.7476%" y="117" width="0.0107%" height="15" fill="rgb(247,143,39)" fg:x="6034583276" fg:w="5515567"/><text x="11.9976%" y="127.50"></text></g><g><title>shiro::engine::common::movelist::MoveList::emplace_bytes (5,515,567 samples, 0.01%)</title><rect x="11.7476%" y="101" width="0.0107%" height="15" fill="rgb(236,97,10)" fg:x="6034583276" fg:w="5515567"/><text x="11.9976%" y="111.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_moves_dg (87,753,006 samples, 0.17%)</title><rect x="11.5983%" y="133" width="0.1708%" height="15" fill="rgb(233,208,19)" fg:x="5957850915" fg:w="87753006"/><text x="11.8483%" y="143.50"></text></g><g><title>shiro::engine::move_gen::masks::pext_dg_lookup (5,505,078 samples, 0.01%)</title><rect x="11.7584%" y="117" width="0.0107%" height="15" fill="rgb(216,164,2)" fg:x="6040098843" fg:w="5505078"/><text x="12.0084%" y="127.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (5,505,078 samples, 0.01%)</title><rect x="11.7584%" y="101" width="0.0107%" height="15" fill="rgb(220,129,5)" fg:x="6040098843" fg:w="5505078"/><text x="12.0084%" y="111.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (5,505,078 samples, 0.01%)</title><rect x="11.7584%" y="85" width="0.0107%" height="15" fill="rgb(242,17,10)" fg:x="6040098843" fg:w="5505078"/><text x="12.0084%" y="95.50"></text></g><g><title>core::slice::index::get_noubcheck (5,505,078 samples, 0.01%)</title><rect x="11.7584%" y="69" width="0.0107%" height="15" fill="rgb(242,107,0)" fg:x="6040098843" fg:w="5505078"/><text x="12.0084%" y="79.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::BitAnd&gt;::bitand (5,525,289 samples, 0.01%)</title><rect x="11.7691%" y="117" width="0.0108%" height="15" fill="rgb(251,28,31)" fg:x="6045603921" fg:w="5525289"/><text x="12.0191%" y="127.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitAnd&gt;::bitand (5,525,289 samples, 0.01%)</title><rect x="11.7691%" y="101" width="0.0108%" height="15" fill="rgb(233,223,10)" fg:x="6045603921" fg:w="5525289"/><text x="12.0191%" y="111.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_moves_enpassant (11,005,774 samples, 0.02%)</title><rect x="11.7691%" y="133" width="0.0214%" height="15" fill="rgb(215,21,27)" fg:x="6045603921" fg:w="11005774"/><text x="12.0191%" y="143.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::Shl&lt;__RhsT&gt;&gt;::shl (5,480,485 samples, 0.01%)</title><rect x="11.7798%" y="117" width="0.0107%" height="15" fill="rgb(232,23,21)" fg:x="6051129210" fg:w="5480485"/><text x="12.0298%" y="127.50"></text></g><g><title>&lt;u64 as core::ops::bit::Shl&lt;i32&gt;&gt;::shl (5,480,485 samples, 0.01%)</title><rect x="11.7798%" y="101" width="0.0107%" height="15" fill="rgb(244,5,23)" fg:x="6051129210" fg:w="5480485"/><text x="12.0298%" y="111.50"></text></g><g><title>core::cmp::PartialEq::ne (427,822,842 samples, 0.83%)</title><rect x="11.9188%" y="117" width="0.8329%" height="15" fill="rgb(226,81,46)" fg:x="6122529164" fg:w="427822842"/><text x="12.1688%" y="127.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::cmp::PartialEq&lt;u64&gt;&gt;::eq (427,822,842 samples, 0.83%)</title><rect x="11.9188%" y="101" width="0.8329%" height="15" fill="rgb(247,70,30)" fg:x="6122529164" fg:w="427822842"/><text x="12.1688%" y="111.50"></text></g><g><title>[unknown] (5,456,710 samples, 0.01%)</title><rect x="12.7411%" y="85" width="0.0106%" height="15" fill="rgb(212,68,19)" fg:x="6544895296" fg:w="5456710"/><text x="12.9911%" y="95.50"></text></g><g><title>shiro::engine::core::bitboard::Bitboard::pop_rightmost (230,917,383 samples, 0.45%)</title><rect x="12.7517%" y="117" width="0.4495%" height="15" fill="rgb(240,187,13)" fg:x="6550352006" fg:w="230917383"/><text x="13.0017%" y="127.50"></text></g><g><title>core::num::&lt;impl u64&gt;::trailing_zeros (10,986,352 samples, 0.02%)</title><rect x="13.1798%" y="101" width="0.0214%" height="15" fill="rgb(223,113,26)" fg:x="6770283037" fg:w="10986352"/><text x="13.4298%" y="111.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::add_move (826,989,651 samples, 1.61%)</title><rect x="13.2012%" y="117" width="1.6099%" height="15" fill="rgb(206,192,2)" fg:x="6781269389" fg:w="826989651"/><text x="13.4512%" y="127.50"></text></g><g><title>shiro::engine::common::movelist::MoveList::emplace_bytes (826,989,651 samples, 1.61%)</title><rect x="13.2012%" y="101" width="1.6099%" height="15" fill="rgb(241,108,4)" fg:x="6781269389" fg:w="826989651"/><text x="13.4512%" y="111.50"></text></g><g><title>core::ptr::write (250,422,229 samples, 0.49%)</title><rect x="14.3236%" y="85" width="0.4875%" height="15" fill="rgb(247,173,49)" fg:x="7357836811" fg:w="250422229"/><text x="14.5736%" y="95.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_moves_hv (1,644,808,354 samples, 3.20%)</title><rect x="11.7905%" y="133" width="3.2020%" height="15" fill="rgb(224,114,35)" fg:x="6056609695" fg:w="1644808354"/><text x="12.0405%" y="143.50">shi..</text></g><g><title>shiro::engine::move_gen::masks::pext_hv_lookup (93,159,009 samples, 0.18%)</title><rect x="14.8111%" y="117" width="0.1814%" height="15" fill="rgb(245,159,27)" fg:x="7608259040" fg:w="93159009"/><text x="15.0611%" y="127.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (54,863,419 samples, 0.11%)</title><rect x="14.8857%" y="101" width="0.1068%" height="15" fill="rgb(245,172,44)" fg:x="7646554630" fg:w="54863419"/><text x="15.1357%" y="111.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (54,863,419 samples, 0.11%)</title><rect x="14.8857%" y="85" width="0.1068%" height="15" fill="rgb(236,23,11)" fg:x="7646554630" fg:w="54863419"/><text x="15.1357%" y="95.50"></text></g><g><title>core::slice::index::get_noubcheck (54,863,419 samples, 0.11%)</title><rect x="14.8857%" y="69" width="0.1068%" height="15" fill="rgb(205,117,38)" fg:x="7646554630" fg:w="54863419"/><text x="15.1357%" y="79.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::BitOr&gt;::bitor (10,993,884 samples, 0.02%)</title><rect x="15.0032%" y="117" width="0.0214%" height="15" fill="rgb(237,72,25)" fg:x="7706934147" fg:w="10993884"/><text x="15.2532%" y="127.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitOr&gt;::bitor (10,993,884 samples, 0.02%)</title><rect x="15.0032%" y="101" width="0.0214%" height="15" fill="rgb(244,70,9)" fg:x="7706934147" fg:w="10993884"/><text x="15.2532%" y="111.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_moves_king_castle (60,432,056 samples, 0.12%)</title><rect x="14.9925%" y="133" width="0.1176%" height="15" fill="rgb(217,125,39)" fg:x="7701418049" fg:w="60432056"/><text x="15.2425%" y="143.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::add_move (43,922,074 samples, 0.09%)</title><rect x="15.0246%" y="117" width="0.0855%" height="15" fill="rgb(235,36,10)" fg:x="7717928031" fg:w="43922074"/><text x="15.2746%" y="127.50"></text></g><g><title>shiro::engine::common::movelist::MoveList::emplace_bytes (38,426,108 samples, 0.07%)</title><rect x="15.0353%" y="101" width="0.0748%" height="15" fill="rgb(251,123,47)" fg:x="7723423997" fg:w="38426108"/><text x="15.2853%" y="111.50"></text></g><g><title>core::ptr::write (38,426,108 samples, 0.07%)</title><rect x="15.0353%" y="85" width="0.0748%" height="15" fill="rgb(221,13,13)" fg:x="7723423997" fg:w="38426108"/><text x="15.2853%" y="95.50"></text></g><g><title>core::cmp::PartialEq::ne (10,976,396 samples, 0.02%)</title><rect x="15.1318%" y="117" width="0.0214%" height="15" fill="rgb(238,131,9)" fg:x="7772960990" fg:w="10976396"/><text x="15.3818%" y="127.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::cmp::PartialEq&lt;u64&gt;&gt;::eq (10,976,396 samples, 0.02%)</title><rect x="15.1318%" y="101" width="0.0214%" height="15" fill="rgb(211,50,8)" fg:x="7772960990" fg:w="10976396"/><text x="15.3818%" y="111.50"></text></g><g><title>shiro::engine::core::bitboard::Bitboard::pop_rightmost (5,474,892 samples, 0.01%)</title><rect x="15.1531%" y="117" width="0.0107%" height="15" fill="rgb(245,182,24)" fg:x="7783937386" fg:w="5474892"/><text x="15.4031%" y="127.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_moves_king_normal (33,027,328 samples, 0.06%)</title><rect x="15.1101%" y="133" width="0.0643%" height="15" fill="rgb(242,14,37)" fg:x="7761850105" fg:w="33027328"/><text x="15.3601%" y="143.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::add_move (5,465,155 samples, 0.01%)</title><rect x="15.1638%" y="117" width="0.0106%" height="15" fill="rgb(246,228,12)" fg:x="7789412278" fg:w="5465155"/><text x="15.4138%" y="127.50"></text></g><g><title>shiro::engine::common::movelist::MoveList::emplace_bytes (5,465,155 samples, 0.01%)</title><rect x="15.1638%" y="101" width="0.0106%" height="15" fill="rgb(213,55,15)" fg:x="7789412278" fg:w="5465155"/><text x="15.4138%" y="111.50"></text></g><g><title>core::cmp::PartialEq::ne (10,952,433 samples, 0.02%)</title><rect x="15.2494%" y="117" width="0.0213%" height="15" fill="rgb(209,9,3)" fg:x="7833387263" fg:w="10952433"/><text x="15.4994%" y="127.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::cmp::PartialEq&lt;u64&gt;&gt;::eq (10,952,433 samples, 0.02%)</title><rect x="15.2494%" y="101" width="0.0213%" height="15" fill="rgb(230,59,30)" fg:x="7833387263" fg:w="10952433"/><text x="15.4994%" y="111.50"></text></g><g><title>shiro::engine::core::bitboard::Bitboard::pop_rightmost (5,513,637 samples, 0.01%)</title><rect x="15.2707%" y="117" width="0.0107%" height="15" fill="rgb(209,121,21)" fg:x="7844339696" fg:w="5513637"/><text x="15.5207%" y="127.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_moves_knight (76,392,287 samples, 0.15%)</title><rect x="15.1744%" y="133" width="0.1487%" height="15" fill="rgb(220,109,13)" fg:x="7794877433" fg:w="76392287"/><text x="15.4244%" y="143.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::add_move (21,416,387 samples, 0.04%)</title><rect x="15.2815%" y="117" width="0.0417%" height="15" fill="rgb(232,18,1)" fg:x="7849853333" fg:w="21416387"/><text x="15.5315%" y="127.50"></text></g><g><title>shiro::engine::common::movelist::MoveList::emplace_bytes (21,416,387 samples, 0.04%)</title><rect x="15.2815%" y="101" width="0.0417%" height="15" fill="rgb(215,41,42)" fg:x="7849853333" fg:w="21416387"/><text x="15.5315%" y="111.50"></text></g><g><title>core::ptr::write (15,907,931 samples, 0.03%)</title><rect x="15.2922%" y="85" width="0.0310%" height="15" fill="rgb(224,123,36)" fg:x="7855361789" fg:w="15907931"/><text x="15.5422%" y="95.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::BitAnd&gt;::bitand (16,500,613 samples, 0.03%)</title><rect x="15.3764%" y="117" width="0.0321%" height="15" fill="rgb(240,125,3)" fg:x="7898631516" fg:w="16500613"/><text x="15.6264%" y="127.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitAnd&gt;::bitand (16,500,613 samples, 0.03%)</title><rect x="15.3764%" y="101" width="0.0321%" height="15" fill="rgb(205,98,50)" fg:x="7898631516" fg:w="16500613"/><text x="15.6264%" y="111.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::Shl&lt;__RhsT&gt;&gt;::shl (5,450,145 samples, 0.01%)</title><rect x="15.4085%" y="117" width="0.0106%" height="15" fill="rgb(205,185,37)" fg:x="7915132129" fg:w="5450145"/><text x="15.6585%" y="127.50"></text></g><g><title>&lt;u64 as core::ops::bit::Shl&lt;i32&gt;&gt;::shl (5,450,145 samples, 0.01%)</title><rect x="15.4085%" y="101" width="0.0106%" height="15" fill="rgb(238,207,15)" fg:x="7915132129" fg:w="5450145"/><text x="15.6585%" y="111.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::Shr&lt;__RhsT&gt;&gt;::shr (10,937,860 samples, 0.02%)</title><rect x="15.4191%" y="117" width="0.0213%" height="15" fill="rgb(213,199,42)" fg:x="7920582274" fg:w="10937860"/><text x="15.6691%" y="127.50"></text></g><g><title>&lt;u64 as core::ops::bit::Shr&lt;i32&gt;&gt;::shr (10,937,860 samples, 0.02%)</title><rect x="15.4191%" y="101" width="0.0213%" height="15" fill="rgb(235,201,11)" fg:x="7920582274" fg:w="10937860"/><text x="15.6691%" y="111.50"></text></g><g><title>core::cmp::PartialEq::ne (11,008,176 samples, 0.02%)</title><rect x="15.4404%" y="117" width="0.0214%" height="15" fill="rgb(207,46,11)" fg:x="7931520134" fg:w="11008176"/><text x="15.6904%" y="127.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::cmp::PartialEq&lt;u64&gt;&gt;::eq (11,008,176 samples, 0.02%)</title><rect x="15.4404%" y="101" width="0.0214%" height="15" fill="rgb(241,35,35)" fg:x="7931520134" fg:w="11008176"/><text x="15.6904%" y="111.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_moves_pawn_captures (76,767,757 samples, 0.15%)</title><rect x="15.3231%" y="133" width="0.1494%" height="15" fill="rgb(243,32,47)" fg:x="7871269720" fg:w="76767757"/><text x="15.5731%" y="143.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::add_move (5,509,167 samples, 0.01%)</title><rect x="15.4619%" y="117" width="0.0107%" height="15" fill="rgb(247,202,23)" fg:x="7942528310" fg:w="5509167"/><text x="15.7119%" y="127.50"></text></g><g><title>shiro::engine::common::movelist::MoveList::emplace_bytes (5,509,167 samples, 0.01%)</title><rect x="15.4619%" y="101" width="0.0107%" height="15" fill="rgb(219,102,11)" fg:x="7942528310" fg:w="5509167"/><text x="15.7119%" y="111.50"></text></g><g><title>core::ptr::write (5,509,167 samples, 0.01%)</title><rect x="15.4619%" y="85" width="0.0107%" height="15" fill="rgb(243,110,44)" fg:x="7942528310" fg:w="5509167"/><text x="15.7119%" y="95.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::BitAnd&gt;::bitand (11,013,972 samples, 0.02%)</title><rect x="15.5261%" y="117" width="0.0214%" height="15" fill="rgb(222,74,54)" fg:x="7975545347" fg:w="11013972"/><text x="15.7761%" y="127.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitAnd&gt;::bitand (11,013,972 samples, 0.02%)</title><rect x="15.5261%" y="101" width="0.0214%" height="15" fill="rgb(216,99,12)" fg:x="7975545347" fg:w="11013972"/><text x="15.7761%" y="111.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::BitAndAssign&gt;::bitand_assign (10,911,364 samples, 0.02%)</title><rect x="15.5476%" y="117" width="0.0212%" height="15" fill="rgb(226,22,26)" fg:x="7986559319" fg:w="10911364"/><text x="15.7976%" y="127.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitAndAssign&gt;::bitand_assign (10,911,364 samples, 0.02%)</title><rect x="15.5476%" y="101" width="0.0212%" height="15" fill="rgb(217,163,10)" fg:x="7986559319" fg:w="10911364"/><text x="15.7976%" y="111.50"></text></g><g><title>shiro::engine::common::constants::rank_from_pos (5,538,535 samples, 0.01%)</title><rect x="15.5688%" y="117" width="0.0108%" height="15" fill="rgb(213,25,53)" fg:x="7997470683" fg:w="5538535"/><text x="15.8188%" y="127.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::Shr&lt;__RhsT&gt;&gt;::shr (5,538,535 samples, 0.01%)</title><rect x="15.5688%" y="101" width="0.0108%" height="15" fill="rgb(252,105,26)" fg:x="7997470683" fg:w="5538535"/><text x="15.8188%" y="111.50"></text></g><g><title>&lt;u64 as core::ops::bit::Shr&lt;usize&gt;&gt;::shr (5,538,535 samples, 0.01%)</title><rect x="15.5688%" y="85" width="0.0108%" height="15" fill="rgb(220,39,43)" fg:x="7997470683" fg:w="5538535"/><text x="15.8188%" y="95.50"></text></g><g><title>shiro::engine::core::bitboard::Bitboard::unbounded_shl (5,468,768 samples, 0.01%)</title><rect x="15.5796%" y="117" width="0.0106%" height="15" fill="rgb(229,68,48)" fg:x="8003009218" fg:w="5468768"/><text x="15.8296%" y="127.50"></text></g><g><title>core::num::&lt;impl u64&gt;::unbounded_shl (5,468,768 samples, 0.01%)</title><rect x="15.5796%" y="101" width="0.0106%" height="15" fill="rgb(252,8,32)" fg:x="8003009218" fg:w="5468768"/><text x="15.8296%" y="111.50"></text></g><g><title>core::num::&lt;impl u64&gt;::unchecked_shl (5,468,768 samples, 0.01%)</title><rect x="15.5796%" y="85" width="0.0106%" height="15" fill="rgb(223,20,43)" fg:x="8003009218" fg:w="5468768"/><text x="15.8296%" y="95.50"></text></g><g><title>shiro::engine::core::bitboard::Bitboard::unbounded_shr (5,519,738 samples, 0.01%)</title><rect x="15.5902%" y="117" width="0.0107%" height="15" fill="rgb(229,81,49)" fg:x="8008477986" fg:w="5519738"/><text x="15.8402%" y="127.50"></text></g><g><title>core::num::&lt;impl u64&gt;::unbounded_shr (5,519,738 samples, 0.01%)</title><rect x="15.5902%" y="101" width="0.0107%" height="15" fill="rgb(236,28,36)" fg:x="8008477986" fg:w="5519738"/><text x="15.8402%" y="111.50"></text></g><g><title>core::num::&lt;impl u64&gt;::unchecked_shr (5,519,738 samples, 0.01%)</title><rect x="15.5902%" y="85" width="0.0107%" height="15" fill="rgb(249,185,26)" fg:x="8008477986" fg:w="5519738"/><text x="15.8402%" y="95.50"></text></g><g><title>[unknown] (7,921,472,377 samples, 15.42%)</title><rect x="0.2016%" y="181" width="15.4209%" height="15" fill="rgb(249,174,33)" fg:x="103555844" fg:w="7921472377"/><text x="0.4516%" y="191.50">[unknown]</text></g><g><title>shiro::engine::move_gen::gen_moves (6,167,926,405 samples, 12.01%)</title><rect x="3.6153%" y="165" width="12.0072%" height="15" fill="rgb(233,201,37)" fg:x="1857101816" fg:w="6167926405"/><text x="3.8653%" y="175.50">shiro::engine::mov..</text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_all_moves (2,072,689,554 samples, 4.03%)</title><rect x="11.5875%" y="149" width="4.0349%" height="15" fill="rgb(221,78,26)" fg:x="5952338667" fg:w="2072689554"/><text x="11.8375%" y="159.50">shir..</text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_moves_pawn_pushes (76,990,744 samples, 0.15%)</title><rect x="15.4726%" y="133" width="0.1499%" height="15" fill="rgb(250,127,30)" fg:x="7948037477" fg:w="76990744"/><text x="15.7226%" y="143.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::add_move (11,030,497 samples, 0.02%)</title><rect x="15.6010%" y="117" width="0.0215%" height="15" fill="rgb(230,49,44)" fg:x="8013997724" fg:w="11030497"/><text x="15.8510%" y="127.50"></text></g><g><title>shiro::engine::common::movelist::MoveList::emplace_bytes (11,030,497 samples, 0.02%)</title><rect x="15.6010%" y="101" width="0.0215%" height="15" fill="rgb(229,67,23)" fg:x="8013997724" fg:w="11030497"/><text x="15.8510%" y="111.50"></text></g><g><title>core::ptr::write (5,512,151 samples, 0.01%)</title><rect x="15.6117%" y="85" width="0.0107%" height="15" fill="rgb(249,83,47)" fg:x="8019516070" fg:w="5512151"/><text x="15.8617%" y="95.50"></text></g><g><title>core::core_arch::x86_64::bmi2::_pext_u64 (775,264,385 samples, 1.51%)</title><rect x="15.6225%" y="181" width="1.5092%" height="15" fill="rgb(215,43,3)" fg:x="8025028221" fg:w="775264385"/><text x="15.8725%" y="191.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::BitAnd&gt;::bitand (120,305,690 samples, 0.23%)</title><rect x="18.3877%" y="149" width="0.2342%" height="15" fill="rgb(238,154,13)" fg:x="9445498230" fg:w="120305690"/><text x="18.6377%" y="159.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitAnd&gt;::bitand (120,305,690 samples, 0.23%)</title><rect x="18.3877%" y="133" width="0.2342%" height="15" fill="rgb(219,56,2)" fg:x="9445498230" fg:w="120305690"/><text x="18.6377%" y="143.50"></text></g><g><title>core::cmp::PartialEq::ne (277,881,394 samples, 0.54%)</title><rect x="18.6219%" y="149" width="0.5410%" height="15" fill="rgb(233,0,4)" fg:x="9565803920" fg:w="277881394"/><text x="18.8719%" y="159.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::cmp::PartialEq&lt;u64&gt;&gt;::eq (277,881,394 samples, 0.54%)</title><rect x="18.6219%" y="133" width="0.5410%" height="15" fill="rgb(235,30,7)" fg:x="9565803920" fg:w="277881394"/><text x="18.8719%" y="143.50"></text></g><g><title>shiro::engine::core::bitboard::Bitboard::pop_rightmost (48,909,449 samples, 0.10%)</title><rect x="19.1629%" y="149" width="0.0952%" height="15" fill="rgb(250,79,13)" fg:x="9843685314" fg:w="48909449"/><text x="19.4129%" y="159.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::add_move (240,931,853 samples, 0.47%)</title><rect x="19.2581%" y="149" width="0.4690%" height="15" fill="rgb(211,146,34)" fg:x="9892594763" fg:w="240931853"/><text x="19.5081%" y="159.50"></text></g><g><title>shiro::engine::common::movelist::MoveList::emplace_bytes (240,931,853 samples, 0.47%)</title><rect x="19.2581%" y="133" width="0.4690%" height="15" fill="rgb(228,22,38)" fg:x="9892594763" fg:w="240931853"/><text x="19.5081%" y="143.50"></text></g><g><title>core::ptr::write (82,221,281 samples, 0.16%)</title><rect x="19.5671%" y="117" width="0.1601%" height="15" fill="rgb(235,168,5)" fg:x="10051305335" fg:w="82221281"/><text x="19.8171%" y="127.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_moves_dg (989,643,738 samples, 1.93%)</title><rect x="17.9931%" y="165" width="1.9266%" height="15" fill="rgb(221,155,16)" fg:x="9242778067" fg:w="989643738"/><text x="18.2431%" y="175.50">s..</text></g><g><title>shiro::engine::move_gen::masks::pext_dg_lookup (98,895,189 samples, 0.19%)</title><rect x="19.7271%" y="149" width="0.1925%" height="15" fill="rgb(215,215,53)" fg:x="10133526616" fg:w="98895189"/><text x="19.9771%" y="159.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (38,353,876 samples, 0.07%)</title><rect x="19.8450%" y="133" width="0.0747%" height="15" fill="rgb(223,4,10)" fg:x="10194067929" fg:w="38353876"/><text x="20.0950%" y="143.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (38,353,876 samples, 0.07%)</title><rect x="19.8450%" y="117" width="0.0747%" height="15" fill="rgb(234,103,6)" fg:x="10194067929" fg:w="38353876"/><text x="20.0950%" y="127.50"></text></g><g><title>core::slice::index::get_noubcheck (38,353,876 samples, 0.07%)</title><rect x="19.8450%" y="101" width="0.0747%" height="15" fill="rgb(227,97,0)" fg:x="10194067929" fg:w="38353876"/><text x="20.0950%" y="111.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::BitAnd&gt;::bitand (49,141,590 samples, 0.10%)</title><rect x="21.0367%" y="149" width="0.0957%" height="15" fill="rgb(234,150,53)" fg:x="10806227026" fg:w="49141590"/><text x="21.2867%" y="159.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitAnd&gt;::bitand (49,141,590 samples, 0.10%)</title><rect x="21.0367%" y="133" width="0.0957%" height="15" fill="rgb(228,201,54)" fg:x="10806227026" fg:w="49141590"/><text x="21.2867%" y="143.50"></text></g><g><title>core::cmp::PartialEq::ne (2,792,361,509 samples, 5.44%)</title><rect x="21.1323%" y="149" width="5.4359%" height="15" fill="rgb(222,22,37)" fg:x="10855368616" fg:w="2792361509"/><text x="21.3823%" y="159.50">core::c..</text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::cmp::PartialEq&lt;u64&gt;&gt;::eq (2,792,361,509 samples, 5.44%)</title><rect x="21.1323%" y="133" width="5.4359%" height="15" fill="rgb(237,53,32)" fg:x="10855368616" fg:w="2792361509"/><text x="21.3823%" y="143.50">&lt;shiro:..</text></g><g><title>shiro::engine::core::bitboard::Bitboard::pop_rightmost (898,004,396 samples, 1.75%)</title><rect x="26.5683%" y="149" width="1.7482%" height="15" fill="rgb(233,25,53)" fg:x="13647730125" fg:w="898004396"/><text x="26.8183%" y="159.50"></text></g><g><title>core::num::&lt;impl u64&gt;::trailing_zeros (99,646,036 samples, 0.19%)</title><rect x="28.1225%" y="133" width="0.1940%" height="15" fill="rgb(210,40,34)" fg:x="14446088485" fg:w="99646036"/><text x="28.3725%" y="143.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::add_move (5,143,167,089 samples, 10.01%)</title><rect x="28.3164%" y="149" width="10.0123%" height="15" fill="rgb(241,220,44)" fg:x="14545734521" fg:w="5143167089"/><text x="28.5664%" y="159.50">shiro::engine:..</text></g><g><title>shiro::engine::common::movelist::MoveList::emplace_bytes (5,143,167,089 samples, 10.01%)</title><rect x="28.3164%" y="133" width="10.0123%" height="15" fill="rgb(235,28,35)" fg:x="14545734521" fg:w="5143167089"/><text x="28.5664%" y="143.50">shiro::engine:..</text></g><g><title>core::ptr::write (758,573,748 samples, 1.48%)</title><rect x="36.8520%" y="117" width="1.4767%" height="15" fill="rgb(210,56,17)" fg:x="18930327862" fg:w="758573748"/><text x="37.1020%" y="127.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_moves_hv (10,025,506,187 samples, 19.52%)</title><rect x="19.9196%" y="165" width="19.5168%" height="15" fill="rgb(224,130,29)" fg:x="10232421805" fg:w="10025506187"/><text x="20.1696%" y="175.50">shiro::engine::move_gen::MoveGe..</text></g><g><title>shiro::engine::move_gen::masks::pext_hv_lookup (569,026,382 samples, 1.11%)</title><rect x="38.3287%" y="149" width="1.1077%" height="15" fill="rgb(235,212,8)" fg:x="19688901610" fg:w="569026382"/><text x="38.5787%" y="159.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (249,577,684 samples, 0.49%)</title><rect x="38.9506%" y="133" width="0.4859%" height="15" fill="rgb(223,33,50)" fg:x="20008350308" fg:w="249577684"/><text x="39.2006%" y="143.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (249,577,684 samples, 0.49%)</title><rect x="38.9506%" y="117" width="0.4859%" height="15" fill="rgb(219,149,13)" fg:x="20008350308" fg:w="249577684"/><text x="39.2006%" y="127.50"></text></g><g><title>core::slice::index::get_noubcheck (249,577,684 samples, 0.49%)</title><rect x="38.9506%" y="101" width="0.4859%" height="15" fill="rgb(250,156,29)" fg:x="20008350308" fg:w="249577684"/><text x="39.2006%" y="111.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_moves_king_castle (16,448,046 samples, 0.03%)</title><rect x="39.4365%" y="165" width="0.0320%" height="15" fill="rgb(216,193,19)" fg:x="20257927992" fg:w="16448046"/><text x="39.6865%" y="175.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::add_move (16,448,046 samples, 0.03%)</title><rect x="39.4365%" y="149" width="0.0320%" height="15" fill="rgb(216,135,14)" fg:x="20257927992" fg:w="16448046"/><text x="39.6865%" y="159.50"></text></g><g><title>shiro::engine::common::movelist::MoveList::emplace_bytes (16,448,046 samples, 0.03%)</title><rect x="39.4365%" y="133" width="0.0320%" height="15" fill="rgb(241,47,5)" fg:x="20257927992" fg:w="16448046"/><text x="39.6865%" y="143.50"></text></g><g><title>core::ptr::write (16,448,046 samples, 0.03%)</title><rect x="39.4365%" y="117" width="0.0320%" height="15" fill="rgb(233,42,35)" fg:x="20257927992" fg:w="16448046"/><text x="39.6865%" y="127.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::BitAnd&gt;::bitand (21,980,315 samples, 0.04%)</title><rect x="39.6927%" y="149" width="0.0428%" height="15" fill="rgb(231,13,6)" fg:x="20389534078" fg:w="21980315"/><text x="39.9427%" y="159.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitAnd&gt;::bitand (21,980,315 samples, 0.04%)</title><rect x="39.6927%" y="133" width="0.0428%" height="15" fill="rgb(207,181,40)" fg:x="20389534078" fg:w="21980315"/><text x="39.9427%" y="143.50"></text></g><g><title>core::cmp::PartialEq::ne (164,604,794 samples, 0.32%)</title><rect x="39.7355%" y="149" width="0.3204%" height="15" fill="rgb(254,173,49)" fg:x="20411514393" fg:w="164604794"/><text x="39.9855%" y="159.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::cmp::PartialEq&lt;u64&gt;&gt;::eq (164,604,794 samples, 0.32%)</title><rect x="39.7355%" y="133" width="0.3204%" height="15" fill="rgb(221,1,38)" fg:x="20411514393" fg:w="164604794"/><text x="39.9855%" y="143.50"></text></g><g><title>shiro::engine::core::bitboard::Bitboard::pop_rightmost (218,391,249 samples, 0.43%)</title><rect x="40.0559%" y="149" width="0.4251%" height="15" fill="rgb(206,124,46)" fg:x="20576119187" fg:w="218391249"/><text x="40.3059%" y="159.50"></text></g><g><title>core::num::&lt;impl u64&gt;::trailing_zeros (10,913,961 samples, 0.02%)</title><rect x="40.4598%" y="133" width="0.0212%" height="15" fill="rgb(249,21,11)" fg:x="20783596475" fg:w="10913961"/><text x="40.7098%" y="143.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_moves_king_normal (804,798,868 samples, 1.57%)</title><rect x="39.4685%" y="165" width="1.5667%" height="15" fill="rgb(222,201,40)" fg:x="20274376038" fg:w="804798868"/><text x="39.7185%" y="175.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::add_move (284,664,470 samples, 0.55%)</title><rect x="40.4811%" y="149" width="0.5542%" height="15" fill="rgb(235,61,29)" fg:x="20794510436" fg:w="284664470"/><text x="40.7311%" y="159.50"></text></g><g><title>shiro::engine::common::movelist::MoveList::emplace_bytes (284,664,470 samples, 0.55%)</title><rect x="40.4811%" y="133" width="0.5542%" height="15" fill="rgb(219,207,3)" fg:x="20794510436" fg:w="284664470"/><text x="40.7311%" y="143.50"></text></g><g><title>core::ptr::write (87,883,117 samples, 0.17%)</title><rect x="40.8641%" y="117" width="0.1711%" height="15" fill="rgb(222,56,46)" fg:x="20991291789" fg:w="87883117"/><text x="41.1141%" y="127.50"></text></g><g><title>core::cmp::PartialEq::ne (109,329,620 samples, 0.21%)</title><rect x="41.2801%" y="149" width="0.2128%" height="15" fill="rgb(239,76,54)" fg:x="21204983270" fg:w="109329620"/><text x="41.5301%" y="159.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::cmp::PartialEq&lt;u64&gt;&gt;::eq (109,329,620 samples, 0.21%)</title><rect x="41.2801%" y="133" width="0.2128%" height="15" fill="rgb(231,124,27)" fg:x="21204983270" fg:w="109329620"/><text x="41.5301%" y="143.50"></text></g><g><title>shiro::engine::core::bitboard::Bitboard::pop_rightmost (82,083,395 samples, 0.16%)</title><rect x="41.4930%" y="149" width="0.1598%" height="15" fill="rgb(249,195,6)" fg:x="21314312890" fg:w="82083395"/><text x="41.7430%" y="159.50"></text></g><g><title>core::num::&lt;impl u64&gt;::trailing_zeros (5,461,804 samples, 0.01%)</title><rect x="41.6421%" y="133" width="0.0106%" height="15" fill="rgb(237,174,47)" fg:x="21390934481" fg:w="5461804"/><text x="41.8921%" y="143.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::add_move (218,691,206 samples, 0.43%)</title><rect x="41.6528%" y="149" width="0.4257%" height="15" fill="rgb(206,201,31)" fg:x="21396396285" fg:w="218691206"/><text x="41.9028%" y="159.50"></text></g><g><title>shiro::engine::common::movelist::MoveList::emplace_bytes (218,691,206 samples, 0.43%)</title><rect x="41.6528%" y="133" width="0.4257%" height="15" fill="rgb(231,57,52)" fg:x="21396396285" fg:w="218691206"/><text x="41.9028%" y="143.50"></text></g><g><title>core::ptr::write (87,427,609 samples, 0.17%)</title><rect x="41.9083%" y="117" width="0.1702%" height="15" fill="rgb(248,177,22)" fg:x="21527659882" fg:w="87427609"/><text x="42.1583%" y="127.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_moves_knight (546,860,432 samples, 1.06%)</title><rect x="41.0352%" y="165" width="1.0646%" height="15" fill="rgb(215,211,37)" fg:x="21079174906" fg:w="546860432"/><text x="41.2852%" y="175.50"></text></g><g><title>shiro::engine::move_gen::masks::knight_lookup (10,947,847 samples, 0.02%)</title><rect x="42.0785%" y="149" width="0.0213%" height="15" fill="rgb(241,128,51)" fg:x="21615087491" fg:w="10947847"/><text x="42.3285%" y="159.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (10,947,847 samples, 0.02%)</title><rect x="42.0785%" y="133" width="0.0213%" height="15" fill="rgb(227,165,31)" fg:x="21615087491" fg:w="10947847"/><text x="42.3285%" y="143.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (10,947,847 samples, 0.02%)</title><rect x="42.0785%" y="117" width="0.0213%" height="15" fill="rgb(228,167,24)" fg:x="21615087491" fg:w="10947847"/><text x="42.3285%" y="127.50"></text></g><g><title>core::slice::index::get_noubcheck (10,947,847 samples, 0.02%)</title><rect x="42.0785%" y="101" width="0.0213%" height="15" fill="rgb(228,143,12)" fg:x="21615087491" fg:w="10947847"/><text x="42.3285%" y="111.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::BitAnd&gt;::bitand (125,999,663 samples, 0.25%)</title><rect x="42.1986%" y="149" width="0.2453%" height="15" fill="rgb(249,149,8)" fg:x="21676773856" fg:w="125999663"/><text x="42.4486%" y="159.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitAnd&gt;::bitand (125,999,663 samples, 0.25%)</title><rect x="42.1986%" y="133" width="0.2453%" height="15" fill="rgb(243,35,44)" fg:x="21676773856" fg:w="125999663"/><text x="42.4486%" y="143.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::BitOr&gt;::bitor (5,522,408 samples, 0.01%)</title><rect x="42.4439%" y="149" width="0.0108%" height="15" fill="rgb(246,89,9)" fg:x="21802773519" fg:w="5522408"/><text x="42.6939%" y="159.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitOr&gt;::bitor (5,522,408 samples, 0.01%)</title><rect x="42.4439%" y="133" width="0.0108%" height="15" fill="rgb(233,213,13)" fg:x="21802773519" fg:w="5522408"/><text x="42.6939%" y="143.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::BitXorAssign&gt;::bitxor_assign (10,976,497 samples, 0.02%)</title><rect x="42.4546%" y="149" width="0.0214%" height="15" fill="rgb(233,141,41)" fg:x="21808295927" fg:w="10976497"/><text x="42.7046%" y="159.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitXorAssign&gt;::bitxor_assign (10,976,497 samples, 0.02%)</title><rect x="42.4546%" y="133" width="0.0214%" height="15" fill="rgb(239,167,4)" fg:x="21808295927" fg:w="10976497"/><text x="42.7046%" y="143.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::Not&gt;::not (71,597,927 samples, 0.14%)</title><rect x="42.4760%" y="149" width="0.1394%" height="15" fill="rgb(209,217,16)" fg:x="21819272424" fg:w="71597927"/><text x="42.7260%" y="159.50"></text></g><g><title>&lt;u64 as core::ops::bit::Not&gt;::not (71,597,927 samples, 0.14%)</title><rect x="42.4760%" y="133" width="0.1394%" height="15" fill="rgb(219,88,35)" fg:x="21819272424" fg:w="71597927"/><text x="42.7260%" y="143.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::Shl&lt;__RhsT&gt;&gt;::shl (43,686,422 samples, 0.09%)</title><rect x="42.6154%" y="149" width="0.0850%" height="15" fill="rgb(220,193,23)" fg:x="21890870351" fg:w="43686422"/><text x="42.8654%" y="159.50"></text></g><g><title>&lt;u64 as core::ops::bit::Shl&lt;i32&gt;&gt;::shl (43,686,422 samples, 0.09%)</title><rect x="42.6154%" y="133" width="0.0850%" height="15" fill="rgb(230,90,52)" fg:x="21890870351" fg:w="43686422"/><text x="42.8654%" y="143.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::Shr&lt;__RhsT&gt;&gt;::shr (65,601,462 samples, 0.13%)</title><rect x="42.7004%" y="149" width="0.1277%" height="15" fill="rgb(252,106,19)" fg:x="21934556773" fg:w="65601462"/><text x="42.9504%" y="159.50"></text></g><g><title>&lt;u64 as core::ops::bit::Shr&lt;i32&gt;&gt;::shr (65,601,462 samples, 0.13%)</title><rect x="42.7004%" y="133" width="0.1277%" height="15" fill="rgb(206,74,20)" fg:x="21934556773" fg:w="65601462"/><text x="42.9504%" y="143.50"></text></g><g><title>core::cmp::PartialEq::ne (49,234,865 samples, 0.10%)</title><rect x="42.8281%" y="149" width="0.0958%" height="15" fill="rgb(230,138,44)" fg:x="22000158235" fg:w="49234865"/><text x="43.0781%" y="159.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::cmp::PartialEq&lt;u64&gt;&gt;::eq (49,234,865 samples, 0.10%)</title><rect x="42.8281%" y="133" width="0.0958%" height="15" fill="rgb(235,182,43)" fg:x="22000158235" fg:w="49234865"/><text x="43.0781%" y="143.50"></text></g><g><title>shiro::engine::core::bitboard::Bitboard::pop_rightmost (5,410,708 samples, 0.01%)</title><rect x="42.9240%" y="149" width="0.0105%" height="15" fill="rgb(242,16,51)" fg:x="22049393100" fg:w="5410708"/><text x="43.1740%" y="159.50"></text></g><g><title>core::num::&lt;impl u64&gt;::trailing_zeros (5,410,708 samples, 0.01%)</title><rect x="42.9240%" y="133" width="0.0105%" height="15" fill="rgb(248,9,4)" fg:x="22049393100" fg:w="5410708"/><text x="43.1740%" y="143.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_moves_pawn_captures (445,131,250 samples, 0.87%)</title><rect x="42.0998%" y="165" width="0.8665%" height="15" fill="rgb(210,31,22)" fg:x="21626035338" fg:w="445131250"/><text x="42.3498%" y="175.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::add_promotions (16,362,780 samples, 0.03%)</title><rect x="42.9345%" y="149" width="0.0319%" height="15" fill="rgb(239,54,39)" fg:x="22054803808" fg:w="16362780"/><text x="43.1845%" y="159.50"></text></g><g><title>shiro::engine::common::movelist::MoveList::emplace_bytes (10,918,566 samples, 0.02%)</title><rect x="42.9451%" y="133" width="0.0213%" height="15" fill="rgb(230,99,41)" fg:x="22060248022" fg:w="10918566"/><text x="43.1951%" y="143.50"></text></g><g><title>core::ptr::write (5,453,503 samples, 0.01%)</title><rect x="42.9557%" y="117" width="0.0106%" height="15" fill="rgb(253,106,12)" fg:x="22065713085" fg:w="5453503"/><text x="43.2057%" y="127.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::BitAnd&gt;::bitand (131,212,001 samples, 0.26%)</title><rect x="43.3129%" y="149" width="0.2554%" height="15" fill="rgb(213,46,41)" fg:x="22249208399" fg:w="131212001"/><text x="43.5629%" y="159.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitAnd&gt;::bitand (131,212,001 samples, 0.26%)</title><rect x="43.3129%" y="133" width="0.2554%" height="15" fill="rgb(215,133,35)" fg:x="22249208399" fg:w="131212001"/><text x="43.5629%" y="143.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::BitAndAssign&gt;::bitand_assign (93,055,557 samples, 0.18%)</title><rect x="43.5684%" y="149" width="0.1812%" height="15" fill="rgb(213,28,5)" fg:x="22380420400" fg:w="93055557"/><text x="43.8184%" y="159.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitAndAssign&gt;::bitand_assign (93,055,557 samples, 0.18%)</title><rect x="43.5684%" y="133" width="0.1812%" height="15" fill="rgb(215,77,49)" fg:x="22380420400" fg:w="93055557"/><text x="43.8184%" y="143.50"></text></g><g><title>core::cmp::PartialEq::ne (27,418,131 samples, 0.05%)</title><rect x="43.7495%" y="149" width="0.0534%" height="15" fill="rgb(248,100,22)" fg:x="22473475957" fg:w="27418131"/><text x="43.9995%" y="159.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::cmp::PartialEq&lt;u64&gt;&gt;::eq (27,418,131 samples, 0.05%)</title><rect x="43.7495%" y="133" width="0.0534%" height="15" fill="rgb(208,67,9)" fg:x="22473475957" fg:w="27418131"/><text x="43.9995%" y="143.50"></text></g><g><title>shiro::engine::common::constants::rank_from_pos (16,403,119 samples, 0.03%)</title><rect x="43.8029%" y="149" width="0.0319%" height="15" fill="rgb(219,133,21)" fg:x="22500894088" fg:w="16403119"/><text x="44.0529%" y="159.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::Shr&lt;__RhsT&gt;&gt;::shr (16,403,119 samples, 0.03%)</title><rect x="43.8029%" y="133" width="0.0319%" height="15" fill="rgb(246,46,29)" fg:x="22500894088" fg:w="16403119"/><text x="44.0529%" y="143.50"></text></g><g><title>&lt;u64 as core::ops::bit::Shr&lt;usize&gt;&gt;::shr (16,403,119 samples, 0.03%)</title><rect x="43.8029%" y="117" width="0.0319%" height="15" fill="rgb(246,185,52)" fg:x="22500894088" fg:w="16403119"/><text x="44.0529%" y="127.50"></text></g><g><title>shiro::engine::core::bitboard::Bitboard::pop_rightmost (22,074,669 samples, 0.04%)</title><rect x="43.8348%" y="149" width="0.0430%" height="15" fill="rgb(252,136,11)" fg:x="22517297207" fg:w="22074669"/><text x="44.0848%" y="159.50"></text></g><g><title>core::num::&lt;impl u64&gt;::trailing_zeros (11,038,577 samples, 0.02%)</title><rect x="43.8563%" y="133" width="0.0215%" height="15" fill="rgb(219,138,53)" fg:x="22528333299" fg:w="11038577"/><text x="44.1063%" y="143.50"></text></g><g><title>shiro::engine::core::bitboard::Bitboard::unbounded_shl (87,293,270 samples, 0.17%)</title><rect x="43.8778%" y="149" width="0.1699%" height="15" fill="rgb(211,51,23)" fg:x="22539371876" fg:w="87293270"/><text x="44.1278%" y="159.50"></text></g><g><title>core::num::&lt;impl u64&gt;::unbounded_shl (87,293,270 samples, 0.17%)</title><rect x="43.8778%" y="133" width="0.1699%" height="15" fill="rgb(247,221,28)" fg:x="22539371876" fg:w="87293270"/><text x="44.1278%" y="143.50"></text></g><g><title>core::num::&lt;impl u64&gt;::unchecked_shl (87,293,270 samples, 0.17%)</title><rect x="43.8778%" y="117" width="0.1699%" height="15" fill="rgb(251,222,45)" fg:x="22539371876" fg:w="87293270"/><text x="44.1278%" y="127.50"></text></g><g><title>shiro::engine::core::bitboard::Bitboard::unbounded_shr (43,489,599 samples, 0.08%)</title><rect x="44.0477%" y="149" width="0.0847%" height="15" fill="rgb(217,162,53)" fg:x="22626665146" fg:w="43489599"/><text x="44.2977%" y="159.50"></text></g><g><title>core::num::&lt;impl u64&gt;::unbounded_shr (43,489,599 samples, 0.08%)</title><rect x="44.0477%" y="133" width="0.0847%" height="15" fill="rgb(229,93,14)" fg:x="22626665146" fg:w="43489599"/><text x="44.2977%" y="143.50"></text></g><g><title>core::num::&lt;impl u64&gt;::unchecked_shr (43,489,599 samples, 0.08%)</title><rect x="44.0477%" y="117" width="0.0847%" height="15" fill="rgb(209,67,49)" fg:x="22626665146" fg:w="43489599"/><text x="44.2977%" y="127.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::add_move (33,044,448 samples, 0.06%)</title><rect x="44.1324%" y="149" width="0.0643%" height="15" fill="rgb(213,87,29)" fg:x="22670154745" fg:w="33044448"/><text x="44.3824%" y="159.50"></text></g><g><title>shiro::engine::common::movelist::MoveList::emplace_bytes (33,044,448 samples, 0.06%)</title><rect x="44.1324%" y="133" width="0.0643%" height="15" fill="rgb(205,151,52)" fg:x="22670154745" fg:w="33044448"/><text x="44.3824%" y="143.50"></text></g><g><title>core::ptr::write (27,523,405 samples, 0.05%)</title><rect x="44.1432%" y="117" width="0.0536%" height="15" fill="rgb(253,215,39)" fg:x="22675675788" fg:w="27523405"/><text x="44.3932%" y="127.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_all_moves (13,962,951,794 samples, 27.18%)</title><rect x="17.1317%" y="181" width="27.1819%" height="15" fill="rgb(221,220,41)" fg:x="8800292606" fg:w="13962951794"/><text x="17.3817%" y="191.50">shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_..</text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_moves_pawn_pushes (692,077,812 samples, 1.35%)</title><rect x="42.9663%" y="165" width="1.3473%" height="15" fill="rgb(218,133,21)" fg:x="22071166588" fg:w="692077812"/><text x="43.2163%" y="175.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::add_promotions (60,045,207 samples, 0.12%)</title><rect x="44.1967%" y="149" width="0.1169%" height="15" fill="rgb(221,193,43)" fg:x="22703199193" fg:w="60045207"/><text x="44.4467%" y="159.50"></text></g><g><title>shiro::engine::common::movelist::MoveList::emplace_bytes (43,664,822 samples, 0.09%)</title><rect x="44.2286%" y="133" width="0.0850%" height="15" fill="rgb(240,128,52)" fg:x="22719579578" fg:w="43664822"/><text x="44.4786%" y="143.50"></text></g><g><title>core::ptr::write (38,209,261 samples, 0.07%)</title><rect x="44.2392%" y="117" width="0.0744%" height="15" fill="rgb(253,114,12)" fg:x="22725035139" fg:w="38209261"/><text x="44.4892%" y="127.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::BitAnd&gt;::bitand (95,791,625 samples, 0.19%)</title><rect x="47.2341%" y="165" width="0.1865%" height="15" fill="rgb(215,223,47)" fg:x="24263450909" fg:w="95791625"/><text x="47.4841%" y="175.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitAnd&gt;::bitand (95,791,625 samples, 0.19%)</title><rect x="47.2341%" y="149" width="0.1865%" height="15" fill="rgb(248,225,23)" fg:x="24263450909" fg:w="95791625"/><text x="47.4841%" y="159.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::BitOr&gt;::bitor (247,720,359 samples, 0.48%)</title><rect x="47.4206%" y="165" width="0.4822%" height="15" fill="rgb(250,108,0)" fg:x="24359242534" fg:w="247720359"/><text x="47.6706%" y="175.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitOr&gt;::bitor (247,720,359 samples, 0.48%)</title><rect x="47.4206%" y="149" width="0.4822%" height="15" fill="rgb(228,208,7)" fg:x="24359242534" fg:w="247720359"/><text x="47.6706%" y="159.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::Not&gt;::not (11,502,206 samples, 0.02%)</title><rect x="47.9028%" y="165" width="0.0224%" height="15" fill="rgb(244,45,10)" fg:x="24606962893" fg:w="11502206"/><text x="48.1528%" y="175.50"></text></g><g><title>&lt;u64 as core::ops::bit::Not&gt;::not (11,502,206 samples, 0.02%)</title><rect x="47.9028%" y="149" width="0.0224%" height="15" fill="rgb(207,125,25)" fg:x="24606962893" fg:w="11502206"/><text x="48.1528%" y="159.50"></text></g><g><title>[unknown] (5,519,767 samples, 0.01%)</title><rect x="47.9252%" y="165" width="0.0107%" height="15" fill="rgb(210,195,18)" fg:x="24618465099" fg:w="5519767"/><text x="48.1752%" y="175.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::BitAnd&gt;::bitand (21,587,432 samples, 0.04%)</title><rect x="48.2439%" y="149" width="0.0420%" height="15" fill="rgb(249,80,12)" fg:x="24782190797" fg:w="21587432"/><text x="48.4939%" y="159.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitAnd&gt;::bitand (21,587,432 samples, 0.04%)</title><rect x="48.2439%" y="133" width="0.0420%" height="15" fill="rgb(221,65,9)" fg:x="24782190797" fg:w="21587432"/><text x="48.4939%" y="143.50"></text></g><g><title>[unknown] (5,502,908 samples, 0.01%)</title><rect x="48.2753%" y="117" width="0.0107%" height="15" fill="rgb(235,49,36)" fg:x="24798275321" fg:w="5502908"/><text x="48.5253%" y="127.50"></text></g><g><title>[unknown] (5,502,908 samples, 0.01%)</title><rect x="48.2753%" y="101" width="0.0107%" height="15" fill="rgb(225,32,20)" fg:x="24798275321" fg:w="5502908"/><text x="48.5253%" y="111.50"></text></g><g><title>[unknown] (5,502,908 samples, 0.01%)</title><rect x="48.2753%" y="85" width="0.0107%" height="15" fill="rgb(215,141,46)" fg:x="24798275321" fg:w="5502908"/><text x="48.5253%" y="95.50"></text></g><g><title>[unknown] (5,502,908 samples, 0.01%)</title><rect x="48.2753%" y="69" width="0.0107%" height="15" fill="rgb(250,160,47)" fg:x="24798275321" fg:w="5502908"/><text x="48.5253%" y="79.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::BitOr&gt;::bitor (63,024,831 samples, 0.12%)</title><rect x="48.2860%" y="149" width="0.1227%" height="15" fill="rgb(216,222,40)" fg:x="24803778229" fg:w="63024831"/><text x="48.5360%" y="159.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitOr&gt;::bitor (63,024,831 samples, 0.12%)</title><rect x="48.2860%" y="133" width="0.1227%" height="15" fill="rgb(234,217,39)" fg:x="24803778229" fg:w="63024831"/><text x="48.5360%" y="143.50"></text></g><g><title>[unknown] (5,483,603 samples, 0.01%)</title><rect x="48.3980%" y="117" width="0.0107%" height="15" fill="rgb(207,178,40)" fg:x="24861319457" fg:w="5483603"/><text x="48.6480%" y="127.50"></text></g><g><title>[unknown] (5,483,603 samples, 0.01%)</title><rect x="48.3980%" y="101" width="0.0107%" height="15" fill="rgb(221,136,13)" fg:x="24861319457" fg:w="5483603"/><text x="48.6480%" y="111.50"></text></g><g><title>[unknown] (5,483,603 samples, 0.01%)</title><rect x="48.3980%" y="85" width="0.0107%" height="15" fill="rgb(249,199,10)" fg:x="24861319457" fg:w="5483603"/><text x="48.6480%" y="95.50"></text></g><g><title>[unknown] (5,483,603 samples, 0.01%)</title><rect x="48.3980%" y="69" width="0.0107%" height="15" fill="rgb(249,222,13)" fg:x="24861319457" fg:w="5483603"/><text x="48.6480%" y="79.50"></text></g><g><title>[unknown] (5,483,603 samples, 0.01%)</title><rect x="48.3980%" y="53" width="0.0107%" height="15" fill="rgb(244,185,38)" fg:x="24861319457" fg:w="5483603"/><text x="48.6480%" y="63.50"></text></g><g><title>[unknown] (5,483,603 samples, 0.01%)</title><rect x="48.3980%" y="37" width="0.0107%" height="15" fill="rgb(236,202,9)" fg:x="24861319457" fg:w="5483603"/><text x="48.6480%" y="47.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::BitOrAssign&gt;::bitor_assign (5,466,338 samples, 0.01%)</title><rect x="48.4087%" y="149" width="0.0106%" height="15" fill="rgb(250,229,37)" fg:x="24866803060" fg:w="5466338"/><text x="48.6587%" y="159.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitOrAssign&gt;::bitor_assign (5,466,338 samples, 0.01%)</title><rect x="48.4087%" y="133" width="0.0106%" height="15" fill="rgb(206,174,23)" fg:x="24866803060" fg:w="5466338"/><text x="48.6587%" y="143.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::Not&gt;::not (27,311,139 samples, 0.05%)</title><rect x="48.4193%" y="149" width="0.0532%" height="15" fill="rgb(211,33,43)" fg:x="24872269398" fg:w="27311139"/><text x="48.6693%" y="159.50"></text></g><g><title>&lt;u64 as core::ops::bit::Not&gt;::not (27,311,139 samples, 0.05%)</title><rect x="48.4193%" y="133" width="0.0532%" height="15" fill="rgb(245,58,50)" fg:x="24872269398" fg:w="27311139"/><text x="48.6693%" y="143.50"></text></g><g><title>core::cmp::PartialEq::ne (71,168,699 samples, 0.14%)</title><rect x="48.4725%" y="149" width="0.1385%" height="15" fill="rgb(244,68,36)" fg:x="24899580538" fg:w="71168699"/><text x="48.7225%" y="159.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::cmp::PartialEq&lt;u64&gt;&gt;::eq (71,168,699 samples, 0.14%)</title><rect x="48.4725%" y="133" width="0.1385%" height="15" fill="rgb(232,229,15)" fg:x="24899580538" fg:w="71168699"/><text x="48.7225%" y="143.50"></text></g><g><title>core::num::&lt;impl u64&gt;::count_ones (50,014,031 samples, 0.10%)</title><rect x="48.6110%" y="149" width="0.0974%" height="15" fill="rgb(254,30,23)" fg:x="24970749237" fg:w="50014031"/><text x="48.8610%" y="159.50"></text></g><g><title>shiro::engine::core::bitboard::Bitboard::pop_rightmost (21,944,298 samples, 0.04%)</title><rect x="48.7084%" y="149" width="0.0427%" height="15" fill="rgb(235,160,14)" fg:x="25020763268" fg:w="21944298"/><text x="48.9584%" y="159.50"></text></g><g><title>shiro::engine::core::bitboard::Bitboard::set (10,862,010 samples, 0.02%)</title><rect x="48.7511%" y="149" width="0.0211%" height="15" fill="rgb(212,155,44)" fg:x="25042707566" fg:w="10862010"/><text x="49.0011%" y="159.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_check_and_pin_masks (440,479,011 samples, 0.86%)</title><rect x="47.9360%" y="165" width="0.8575%" height="15" fill="rgb(226,2,50)" fg:x="24623984866" fg:w="440479011"/><text x="48.1860%" y="175.50"></text></g><g><title>shiro::engine::core::bitboard::Bitboard::unbounded_shr (10,894,301 samples, 0.02%)</title><rect x="48.7722%" y="149" width="0.0212%" height="15" fill="rgb(234,177,6)" fg:x="25053569576" fg:w="10894301"/><text x="49.0222%" y="159.50"></text></g><g><title>core::num::&lt;impl u64&gt;::unbounded_shr (10,894,301 samples, 0.02%)</title><rect x="48.7722%" y="133" width="0.0212%" height="15" fill="rgb(217,24,9)" fg:x="25053569576" fg:w="10894301"/><text x="49.0222%" y="143.50"></text></g><g><title>core::num::&lt;impl u64&gt;::unchecked_shr (10,894,301 samples, 0.02%)</title><rect x="48.7722%" y="117" width="0.0212%" height="15" fill="rgb(220,13,46)" fg:x="25053569576" fg:w="10894301"/><text x="49.0222%" y="127.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::BitOrAssign&gt;::bitor_assign (65,746,965 samples, 0.13%)</title><rect x="48.8160%" y="149" width="0.1280%" height="15" fill="rgb(239,221,27)" fg:x="25076027388" fg:w="65746965"/><text x="49.0660%" y="159.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitOrAssign&gt;::bitor_assign (65,746,965 samples, 0.13%)</title><rect x="48.8160%" y="133" width="0.1280%" height="15" fill="rgb(222,198,25)" fg:x="25076027388" fg:w="65746965"/><text x="49.0660%" y="143.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::BitXor&gt;::bitxor (5,524,464 samples, 0.01%)</title><rect x="48.9440%" y="149" width="0.0108%" height="15" fill="rgb(211,99,13)" fg:x="25141774353" fg:w="5524464"/><text x="49.1940%" y="159.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitXor&gt;::bitxor (5,524,464 samples, 0.01%)</title><rect x="48.9440%" y="133" width="0.0108%" height="15" fill="rgb(232,111,31)" fg:x="25141774353" fg:w="5524464"/><text x="49.1940%" y="143.50"></text></g><g><title>core::cmp::PartialEq::ne (644,516,328 samples, 1.25%)</title><rect x="48.9547%" y="149" width="1.2547%" height="15" fill="rgb(245,82,37)" fg:x="25147298817" fg:w="644516328"/><text x="49.2047%" y="159.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::cmp::PartialEq&lt;u64&gt;&gt;::eq (644,516,328 samples, 1.25%)</title><rect x="48.9547%" y="133" width="1.2547%" height="15" fill="rgb(227,149,46)" fg:x="25147298817" fg:w="644516328"/><text x="49.2047%" y="143.50"></text></g><g><title>shiro::engine::core::bitboard::Bitboard::pop_rightmost (32,810,970 samples, 0.06%)</title><rect x="50.2094%" y="149" width="0.0639%" height="15" fill="rgb(218,36,50)" fg:x="25791815145" fg:w="32810970"/><text x="50.4594%" y="159.50"></text></g><g><title>core::num::&lt;impl u64&gt;::trailing_zeros (10,953,392 samples, 0.02%)</title><rect x="50.2519%" y="133" width="0.0213%" height="15" fill="rgb(226,80,48)" fg:x="25813672723" fg:w="10953392"/><text x="50.5019%" y="143.50"></text></g><g><title>shiro::engine::core::bitboard::Bitboard::unbounded_shl (18,985,329 samples, 0.04%)</title><rect x="50.2733%" y="149" width="0.0370%" height="15" fill="rgb(238,224,15)" fg:x="25824626115" fg:w="18985329"/><text x="50.5233%" y="159.50"></text></g><g><title>core::num::&lt;impl u64&gt;::unbounded_shl (18,985,329 samples, 0.04%)</title><rect x="50.2733%" y="133" width="0.0370%" height="15" fill="rgb(241,136,10)" fg:x="25824626115" fg:w="18985329"/><text x="50.5233%" y="143.50"></text></g><g><title>core::num::&lt;impl u64&gt;::unchecked_shl (18,985,329 samples, 0.04%)</title><rect x="50.2733%" y="117" width="0.0370%" height="15" fill="rgb(208,32,45)" fg:x="25824626115" fg:w="18985329"/><text x="50.5233%" y="127.50"></text></g><g><title>shiro::engine::move_gen::masks::king_lookup (49,035,593 samples, 0.10%)</title><rect x="50.3102%" y="149" width="0.0955%" height="15" fill="rgb(207,135,9)" fg:x="25843611444" fg:w="49035593"/><text x="50.5602%" y="159.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (49,035,593 samples, 0.10%)</title><rect x="50.3102%" y="133" width="0.0955%" height="15" fill="rgb(206,86,44)" fg:x="25843611444" fg:w="49035593"/><text x="50.5602%" y="143.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (49,035,593 samples, 0.10%)</title><rect x="50.3102%" y="117" width="0.0955%" height="15" fill="rgb(245,177,15)" fg:x="25843611444" fg:w="49035593"/><text x="50.5602%" y="127.50"></text></g><g><title>core::slice::index::get_noubcheck (49,035,593 samples, 0.10%)</title><rect x="50.3102%" y="101" width="0.0955%" height="15" fill="rgb(206,64,50)" fg:x="25843611444" fg:w="49035593"/><text x="50.5602%" y="111.50"></text></g><g><title>shiro::engine::move_gen::masks::pext_dg_lookup (27,455,131 samples, 0.05%)</title><rect x="50.4057%" y="149" width="0.0534%" height="15" fill="rgb(234,36,40)" fg:x="25892647037" fg:w="27455131"/><text x="50.6557%" y="159.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (27,455,131 samples, 0.05%)</title><rect x="50.4057%" y="133" width="0.0534%" height="15" fill="rgb(213,64,8)" fg:x="25892647037" fg:w="27455131"/><text x="50.6557%" y="143.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (27,455,131 samples, 0.05%)</title><rect x="50.4057%" y="117" width="0.0534%" height="15" fill="rgb(210,75,36)" fg:x="25892647037" fg:w="27455131"/><text x="50.6557%" y="127.50"></text></g><g><title>core::slice::index::get_noubcheck (27,455,131 samples, 0.05%)</title><rect x="50.4057%" y="101" width="0.0534%" height="15" fill="rgb(229,88,21)" fg:x="25892647037" fg:w="27455131"/><text x="50.6557%" y="111.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::new (3,227,824,800 samples, 6.28%)</title><rect x="44.3136%" y="181" width="6.2837%" height="15" fill="rgb(252,204,47)" fg:x="22763244400" fg:w="3227824800"/><text x="44.5636%" y="191.50">shiro::e..</text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_seen_by_enemy (926,605,323 samples, 1.80%)</title><rect x="48.7934%" y="165" width="1.8038%" height="15" fill="rgb(208,77,27)" fg:x="25064463877" fg:w="926605323"/><text x="49.0434%" y="175.50">s..</text></g><g><title>shiro::engine::move_gen::masks::pext_hv_lookup (70,967,032 samples, 0.14%)</title><rect x="50.4591%" y="149" width="0.1382%" height="15" fill="rgb(221,76,26)" fg:x="25920102168" fg:w="70967032"/><text x="50.7091%" y="159.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (70,967,032 samples, 0.14%)</title><rect x="50.4591%" y="133" width="0.1382%" height="15" fill="rgb(225,139,18)" fg:x="25920102168" fg:w="70967032"/><text x="50.7091%" y="143.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (70,967,032 samples, 0.14%)</title><rect x="50.4591%" y="117" width="0.1382%" height="15" fill="rgb(230,137,11)" fg:x="25920102168" fg:w="70967032"/><text x="50.7091%" y="127.50"></text></g><g><title>core::slice::index::get_noubcheck (70,967,032 samples, 0.14%)</title><rect x="50.4591%" y="101" width="0.1382%" height="15" fill="rgb(212,28,1)" fg:x="25920102168" fg:w="70967032"/><text x="50.7091%" y="111.50"></text></g><g><title>core::cmp::PartialEq::ne (12,502,027 samples, 0.02%)</title><rect x="51.3408%" y="133" width="0.0243%" height="15" fill="rgb(248,164,17)" fg:x="26373008871" fg:w="12502027"/><text x="51.5908%" y="143.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::cmp::PartialEq&lt;u64&gt;&gt;::eq (12,502,027 samples, 0.02%)</title><rect x="51.3408%" y="117" width="0.0243%" height="15" fill="rgb(222,171,42)" fg:x="26373008871" fg:w="12502027"/><text x="51.5908%" y="127.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_moves_hv (39,917,049 samples, 0.08%)</title><rect x="51.3408%" y="149" width="0.0777%" height="15" fill="rgb(243,84,45)" fg:x="26373008871" fg:w="39917049"/><text x="51.5908%" y="159.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::add_move (27,415,022 samples, 0.05%)</title><rect x="51.3652%" y="133" width="0.0534%" height="15" fill="rgb(252,49,23)" fg:x="26385510898" fg:w="27415022"/><text x="51.6152%" y="143.50"></text></g><g><title>shiro::engine::common::movelist::MoveList::emplace_bytes (27,415,022 samples, 0.05%)</title><rect x="51.3652%" y="117" width="0.0534%" height="15" fill="rgb(215,19,7)" fg:x="26385510898" fg:w="27415022"/><text x="51.6152%" y="127.50"></text></g><g><title>core::ptr::write (16,415,533 samples, 0.03%)</title><rect x="51.3866%" y="101" width="0.0320%" height="15" fill="rgb(238,81,41)" fg:x="26396510387" fg:w="16415533"/><text x="51.6366%" y="111.50"></text></g><g><title>shiro::engine::move_gen::gen_moves (427,299,107 samples, 0.83%)</title><rect x="50.5973%" y="181" width="0.8318%" height="15" fill="rgb(210,199,37)" fg:x="25991069200" fg:w="427299107"/><text x="50.8473%" y="191.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_all_moves (45,359,436 samples, 0.09%)</title><rect x="51.3408%" y="165" width="0.0883%" height="15" fill="rgb(244,192,49)" fg:x="26373008871" fg:w="45359436"/><text x="51.5908%" y="175.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_moves_king_castle (5,442,387 samples, 0.01%)</title><rect x="51.4185%" y="149" width="0.0106%" height="15" fill="rgb(226,211,11)" fg:x="26412925920" fg:w="5442387"/><text x="51.6685%" y="159.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::add_move (5,442,387 samples, 0.01%)</title><rect x="51.4185%" y="133" width="0.0106%" height="15" fill="rgb(236,162,54)" fg:x="26412925920" fg:w="5442387"/><text x="51.6685%" y="143.50"></text></g><g><title>shiro::engine::common::movelist::MoveList::emplace_bytes (5,442,387 samples, 0.01%)</title><rect x="51.4185%" y="117" width="0.0106%" height="15" fill="rgb(220,229,9)" fg:x="26412925920" fg:w="5442387"/><text x="51.6685%" y="127.50"></text></g><g><title>core::ptr::write (5,442,387 samples, 0.01%)</title><rect x="51.4185%" y="101" width="0.0106%" height="15" fill="rgb(250,87,22)" fg:x="26412925920" fg:w="5442387"/><text x="51.6685%" y="111.50"></text></g><g><title>&lt;shiro::engine::core::BoardState as core::clone::Clone&gt;::clone (2,209,533,866 samples, 4.30%)</title><rect x="74.5448%" y="165" width="4.3013%" height="15" fill="rgb(239,43,17)" fg:x="38292537233" fg:w="2209533866"/><text x="74.7948%" y="175.50">&lt;shir..</text></g><g><title>[libc.so.6] (2,209,533,866 samples, 4.30%)</title><rect x="74.5448%" y="149" width="4.3013%" height="15" fill="rgb(231,177,25)" fg:x="38292537233" fg:w="2209533866"/><text x="74.7948%" y="159.50">[libc..</text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::BitAndAssign&gt;::bitand_assign (104,266,581 samples, 0.20%)</title><rect x="78.8461%" y="165" width="0.2030%" height="15" fill="rgb(219,179,1)" fg:x="40502071099" fg:w="104266581"/><text x="79.0961%" y="175.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitAndAssign&gt;::bitand_assign (104,266,581 samples, 0.20%)</title><rect x="78.8461%" y="149" width="0.2030%" height="15" fill="rgb(238,219,53)" fg:x="40502071099" fg:w="104266581"/><text x="79.0961%" y="159.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::BitOrAssign&gt;::bitor_assign (1,498,243,834 samples, 2.92%)</title><rect x="79.0491%" y="165" width="2.9167%" height="15" fill="rgb(232,167,36)" fg:x="40606337680" fg:w="1498243834"/><text x="79.2991%" y="175.50">&lt;s..</text></g><g><title>&lt;u64 as core::ops::bit::BitOrAssign&gt;::bitor_assign (1,498,243,834 samples, 2.92%)</title><rect x="79.0491%" y="149" width="2.9167%" height="15" fill="rgb(244,19,51)" fg:x="40606337680" fg:w="1498243834"/><text x="79.2991%" y="159.50">&lt;u..</text></g><g><title>[libc.so.6] (7,821,124,969 samples, 15.23%)</title><rect x="81.9658%" y="165" width="15.2255%" height="15" fill="rgb(224,6,22)" fg:x="42104581514" fg:w="7821124969"/><text x="82.2158%" y="175.50">[libc.so.6]</text></g><g><title>shiro::engine::common::chess_move::Move::start (70,714,909 samples, 0.14%)</title><rect x="97.1913%" y="165" width="0.1377%" height="15" fill="rgb(224,145,5)" fg:x="49925706510" fg:w="70714909"/><text x="97.4413%" y="175.50"></text></g><g><title>shiro::engine::common::chess_move::Move::start_or_err (70,714,909 samples, 0.14%)</title><rect x="97.1913%" y="149" width="0.1377%" height="15" fill="rgb(234,130,49)" fg:x="49925706510" fg:w="70714909"/><text x="97.4413%" y="159.50"></text></g><g><title>modular_bitfield::private::proc::read_specifier (70,714,909 samples, 0.14%)</title><rect x="97.1913%" y="133" width="0.1377%" height="15" fill="rgb(254,6,2)" fg:x="49925706510" fg:w="70714909"/><text x="97.4413%" y="143.50"></text></g><g><title>&lt;modular_bitfield::private::push_pop::PushBuffer&lt;u8&gt; as modular_bitfield::private::traits::PushBits&gt;::push_bits (70,714,909 samples, 0.14%)</title><rect x="97.1913%" y="117" width="0.1377%" height="15" fill="rgb(208,96,46)" fg:x="49925706510" fg:w="70714909"/><text x="97.4413%" y="127.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::expect (16,465,569 samples, 0.03%)</title><rect x="97.3607%" y="133" width="0.0321%" height="15" fill="rgb(239,3,39)" fg:x="50012709439" fg:w="16465569"/><text x="97.6107%" y="143.50"></text></g><g><title>&lt;shiro::engine::core::PieceType as modular_bitfield::Specifier&gt;::from_bytes (10,772,890 samples, 0.02%)</title><rect x="97.3927%" y="117" width="0.0210%" height="15" fill="rgb(233,210,1)" fg:x="50029175008" fg:w="10772890"/><text x="97.6427%" y="127.50"></text></g><g><title>shiro::engine::core::BoardState::get_peice_bb_mut (54,411,299 samples, 0.11%)</title><rect x="97.3289%" y="165" width="0.1059%" height="15" fill="rgb(244,137,37)" fg:x="49996421419" fg:w="54411299"/><text x="97.5789%" y="175.50"></text></g><g><title>shiro::engine::core::Piece::ptype (38,123,279 samples, 0.07%)</title><rect x="97.3607%" y="149" width="0.0742%" height="15" fill="rgb(240,136,2)" fg:x="50012709439" fg:w="38123279"/><text x="97.6107%" y="159.50"></text></g><g><title>shiro::engine::core::Piece::ptype_or_err (21,657,710 samples, 0.04%)</title><rect x="97.3927%" y="133" width="0.0422%" height="15" fill="rgb(239,18,37)" fg:x="50029175008" fg:w="21657710"/><text x="97.6427%" y="143.50"></text></g><g><title>modular_bitfield::private::proc::read_specifier (10,884,820 samples, 0.02%)</title><rect x="97.4137%" y="117" width="0.0212%" height="15" fill="rgb(218,185,22)" fg:x="50039947898" fg:w="10884820"/><text x="97.6637%" y="127.50"></text></g><g><title>&lt;modular_bitfield::private::push_pop::PushBuffer&lt;u8&gt; as modular_bitfield::private::traits::PushBits&gt;::push_bits (10,884,820 samples, 0.02%)</title><rect x="97.4137%" y="101" width="0.0212%" height="15" fill="rgb(225,218,4)" fg:x="50039947898" fg:w="10884820"/><text x="97.6637%" y="111.50"></text></g><g><title>shiro::engine::core::Flags::set_has_ep (49,594,002 samples, 0.10%)</title><rect x="97.4349%" y="165" width="0.0965%" height="15" fill="rgb(230,182,32)" fg:x="50050832718" fg:w="49594002"/><text x="97.6849%" y="175.50"></text></g><g><title>shiro::engine::core::Flags::set_has_ep_checked (49,594,002 samples, 0.10%)</title><rect x="97.4349%" y="149" width="0.0965%" height="15" fill="rgb(242,56,43)" fg:x="50050832718" fg:w="49594002"/><text x="97.6849%" y="159.50"></text></g><g><title>modular_bitfield::private::proc::write_specifier (49,594,002 samples, 0.10%)</title><rect x="97.4349%" y="133" width="0.0965%" height="15" fill="rgb(233,99,24)" fg:x="50050832718" fg:w="49594002"/><text x="97.6849%" y="143.50"></text></g><g><title>shiro::engine::core::Flags::turn (76,579,811 samples, 0.15%)</title><rect x="97.5314%" y="165" width="0.1491%" height="15" fill="rgb(234,209,42)" fg:x="50100426720" fg:w="76579811"/><text x="97.7814%" y="175.50"></text></g><g><title>shiro::engine::core::Flags::turn_or_err (76,579,811 samples, 0.15%)</title><rect x="97.5314%" y="149" width="0.1491%" height="15" fill="rgb(227,7,12)" fg:x="50100426720" fg:w="76579811"/><text x="97.7814%" y="159.50"></text></g><g><title>modular_bitfield::private::proc::read_specifier (76,579,811 samples, 0.15%)</title><rect x="97.5314%" y="133" width="0.1491%" height="15" fill="rgb(245,203,43)" fg:x="50100426720" fg:w="76579811"/><text x="97.7814%" y="143.50"></text></g><g><title>&lt;modular_bitfield::private::push_pop::PushBuffer&lt;u8&gt; as modular_bitfield::private::traits::PushBits&gt;::push_bits (76,579,811 samples, 0.15%)</title><rect x="97.5314%" y="117" width="0.1491%" height="15" fill="rgb(238,205,33)" fg:x="50100426720" fg:w="76579811"/><text x="97.7814%" y="127.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::expect (16,420,198 samples, 0.03%)</title><rect x="97.6805%" y="149" width="0.0320%" height="15" fill="rgb(231,56,7)" fg:x="50177006531" fg:w="16420198"/><text x="97.9305%" y="159.50"></text></g><g><title>shiro::engine::core::Piece::ptype (87,084,841 samples, 0.17%)</title><rect x="97.6805%" y="165" width="0.1695%" height="15" fill="rgb(244,186,29)" fg:x="50177006531" fg:w="87084841"/><text x="97.9305%" y="175.50"></text></g><g><title>shiro::engine::core::Piece::ptype_or_err (70,664,643 samples, 0.14%)</title><rect x="97.7125%" y="149" width="0.1376%" height="15" fill="rgb(234,111,31)" fg:x="50193426729" fg:w="70664643"/><text x="97.9625%" y="159.50"></text></g><g><title>modular_bitfield::private::proc::read_specifier (70,664,643 samples, 0.14%)</title><rect x="97.7125%" y="133" width="0.1376%" height="15" fill="rgb(241,149,10)" fg:x="50193426729" fg:w="70664643"/><text x="97.9625%" y="143.50"></text></g><g><title>&lt;modular_bitfield::private::push_pop::PushBuffer&lt;u8&gt; as modular_bitfield::private::traits::PushBits&gt;::push_bits (70,664,643 samples, 0.14%)</title><rect x="97.7125%" y="117" width="0.1376%" height="15" fill="rgb(249,206,44)" fg:x="50193426729" fg:w="70664643"/><text x="97.9625%" y="127.50"></text></g><g><title>shiro::engine::perft::make_move (23,856,649,103 samples, 46.44%)</title><rect x="51.4291%" y="181" width="46.4422%" height="15" fill="rgb(251,153,30)" fg:x="26418368307" fg:w="23856649103"/><text x="51.6791%" y="191.50">shiro::engine::perft::make_move</text></g><g><title>shiro::engine::core::Piece::with_color (10,926,038 samples, 0.02%)</title><rect x="97.8500%" y="165" width="0.0213%" height="15" fill="rgb(239,152,38)" fg:x="50264091372" fg:w="10926038"/><text x="98.1000%" y="175.50"></text></g><g><title>shiro::engine::core::Piece::set_color (10,926,038 samples, 0.02%)</title><rect x="97.8500%" y="149" width="0.0213%" height="15" fill="rgb(249,139,47)" fg:x="50264091372" fg:w="10926038"/><text x="98.1000%" y="159.50"></text></g><g><title>shiro::engine::core::Piece::set_color_checked (10,926,038 samples, 0.02%)</title><rect x="97.8500%" y="133" width="0.0213%" height="15" fill="rgb(244,64,35)" fg:x="50264091372" fg:w="10926038"/><text x="98.1000%" y="143.50"></text></g><g><title>modular_bitfield::private::proc::write_specifier (10,926,038 samples, 0.02%)</title><rect x="97.8500%" y="117" width="0.0213%" height="15" fill="rgb(216,46,15)" fg:x="50264091372" fg:w="10926038"/><text x="98.1000%" y="127.50"></text></g><g><title>shiro::engine::common::movelist::MoveList::get (32,853,012 samples, 0.06%)</title><rect x="99.5851%" y="149" width="0.0640%" height="15" fill="rgb(250,74,19)" fg:x="51155362033" fg:w="32853012"/><text x="99.8351%" y="159.50"></text></g><g><title>&lt;shiro::engine::common::movelist::MoveListIter as core::iter::traits::iterator::Iterator&gt;::next (311,043,946 samples, 0.61%)</title><rect x="99.0754%" y="165" width="0.6055%" height="15" fill="rgb(249,42,33)" fg:x="50893575133" fg:w="311043946"/><text x="99.3254%" y="175.50"></text></g><g><title>shiro::engine::common::movelist::MoveList::len (16,404,034 samples, 0.03%)</title><rect x="99.6490%" y="149" width="0.0319%" height="15" fill="rgb(242,149,17)" fg:x="51188215045" fg:w="16404034"/><text x="99.8990%" y="159.50"></text></g><g><title>shiro::engine::common::movelist::MoveList::new (142,052,965 samples, 0.28%)</title><rect x="99.6810%" y="165" width="0.2765%" height="15" fill="rgb(244,29,21)" fg:x="51204619079" fg:w="142052965"/><text x="99.9310%" y="175.50"></text></g><g><title>[libc.so.6] (142,052,965 samples, 0.28%)</title><rect x="99.6810%" y="149" width="0.2765%" height="15" fill="rgb(220,130,37)" fg:x="51204619079" fg:w="142052965"/><text x="99.9310%" y="159.50"></text></g><g><title>all (51,368,502,829 samples, 100%)</title><rect x="0.0000%" y="213" width="100.0000%" height="15" fill="rgb(211,67,2)" fg:x="0" fg:w="51368502829"/><text x="0.2500%" y="223.50"></text></g><g><title>game (51,368,502,829 samples, 100.00%)</title><rect x="0.0000%" y="197" width="100.0000%" height="15" fill="rgb(235,68,52)" fg:x="0" fg:w="51368502829"/><text x="0.2500%" y="207.50">game</text></g><g><title>shiro::engine::perft::perft_simple (1,093,485,419 samples, 2.13%)</title><rect x="97.8713%" y="181" width="2.1287%" height="15" fill="rgb(246,142,3)" fg:x="50275017410" fg:w="1093485419"/><text x="98.1213%" y="191.50">s..</text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_all_moves (21,830,785 samples, 0.04%)</title><rect x="99.9575%" y="165" width="0.0425%" height="15" fill="rgb(241,25,7)" fg:x="51346672044" fg:w="21830785"/><text x="100.2075%" y="175.50"></text></g></svg></svg>