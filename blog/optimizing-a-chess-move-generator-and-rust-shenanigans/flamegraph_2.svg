<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="246" onload="init(evt)" viewBox="0 0 1200 246" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="246" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="229.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="229.00"> </text><svg id="frames" x="10" width="1180" total_samples="67763725675"><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::BitAnd&gt;::bitand (95,199,495 samples, 0.14%)</title><rect x="0.5077%" y="101" width="0.1405%" height="15" fill="rgb(227,0,7)" fg:x="344045501" fg:w="95199495"/><text x="0.7577%" y="111.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitAnd&gt;::bitand (95,199,495 samples, 0.14%)</title><rect x="0.5077%" y="85" width="0.1405%" height="15" fill="rgb(217,0,24)" fg:x="344045501" fg:w="95199495"/><text x="0.7577%" y="95.50"></text></g><g><title>arrayvec::arrayvec::ArrayVec&lt;T,_&gt;::push_unchecked (49,952,275 samples, 0.07%)</title><rect x="0.6482%" y="101" width="0.0737%" height="15" fill="rgb(221,193,54)" fg:x="439244996" fg:w="49952275"/><text x="0.8982%" y="111.50"></text></g><g><title>arrayvec::arrayvec_impl::ArrayVecImpl::push_unchecked (49,952,275 samples, 0.07%)</title><rect x="0.6482%" y="85" width="0.0737%" height="15" fill="rgb(248,212,6)" fg:x="439244996" fg:w="49952275"/><text x="0.8982%" y="95.50"></text></g><g><title>core::ptr::write (16,646,408 samples, 0.02%)</title><rect x="0.6974%" y="69" width="0.0246%" height="15" fill="rgb(208,68,35)" fg:x="472550863" fg:w="16646408"/><text x="0.9474%" y="79.50"></text></g><g><title>core::cmp::PartialEq::ne (83,268,244 samples, 0.12%)</title><rect x="0.7219%" y="101" width="0.1229%" height="15" fill="rgb(232,128,0)" fg:x="489197271" fg:w="83268244"/><text x="0.9719%" y="111.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::cmp::PartialEq&lt;u64&gt;&gt;::eq (83,268,244 samples, 0.12%)</title><rect x="0.7219%" y="85" width="0.1229%" height="15" fill="rgb(207,160,47)" fg:x="489197271" fg:w="83268244"/><text x="0.9719%" y="95.50"></text></g><g><title>shiro::engine::common::chess_move::Move::with_target (116,493,105 samples, 0.17%)</title><rect x="0.8448%" y="101" width="0.1719%" height="15" fill="rgb(228,23,34)" fg:x="572465515" fg:w="116493105"/><text x="1.0948%" y="111.50"></text></g><g><title>shiro::engine::common::chess_move::Move::set_target (116,493,105 samples, 0.17%)</title><rect x="0.8448%" y="85" width="0.1719%" height="15" fill="rgb(218,30,26)" fg:x="572465515" fg:w="116493105"/><text x="1.0948%" y="95.50"></text></g><g><title>shiro::engine::common::chess_move::Move::set_target_checked (116,493,105 samples, 0.17%)</title><rect x="0.8448%" y="69" width="0.1719%" height="15" fill="rgb(220,122,19)" fg:x="572465515" fg:w="116493105"/><text x="1.0948%" y="79.50"></text></g><g><title>modular_bitfield::private::proc::write_specifier (116,493,105 samples, 0.17%)</title><rect x="0.8448%" y="53" width="0.1719%" height="15" fill="rgb(250,228,42)" fg:x="572465515" fg:w="116493105"/><text x="1.0948%" y="63.50"></text></g><g><title>shiro::engine::core::bitboard::Bitboard::leading_zeros (11,095,835 samples, 0.02%)</title><rect x="1.0167%" y="101" width="0.0164%" height="15" fill="rgb(240,193,28)" fg:x="688958620" fg:w="11095835"/><text x="1.2667%" y="111.50"></text></g><g><title>core::num::&lt;impl u64&gt;::leading_zeros (11,095,835 samples, 0.02%)</title><rect x="1.0167%" y="85" width="0.0164%" height="15" fill="rgb(216,20,37)" fg:x="688958620" fg:w="11095835"/><text x="1.2667%" y="95.50"></text></g><g><title>shiro::engine::core::bitboard::Bitboard::pop_leftmost (88,741,804 samples, 0.13%)</title><rect x="1.0331%" y="101" width="0.1310%" height="15" fill="rgb(206,188,39)" fg:x="700054455" fg:w="88741804"/><text x="1.2831%" y="111.50"></text></g><g><title>core::num::&lt;impl u64&gt;::leading_zeros (16,640,356 samples, 0.02%)</title><rect x="1.1395%" y="85" width="0.0246%" height="15" fill="rgb(217,207,13)" fg:x="772155903" fg:w="16640356"/><text x="1.3895%" y="95.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_moves_dg (589,371,727 samples, 0.87%)</title><rect x="0.3352%" y="117" width="0.8697%" height="15" fill="rgb(231,73,38)" fg:x="227168254" fg:w="589371727"/><text x="0.5852%" y="127.50"></text></g><g><title>shiro::engine::move_gen::masks::pext_dg_lookup (27,743,722 samples, 0.04%)</title><rect x="1.1640%" y="101" width="0.0409%" height="15" fill="rgb(225,20,46)" fg:x="788796259" fg:w="27743722"/><text x="1.4140%" y="111.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::BitAnd&gt;::bitand (16,641,677 samples, 0.02%)</title><rect x="1.8531%" y="101" width="0.0246%" height="15" fill="rgb(210,31,41)" fg:x="1255759305" fg:w="16641677"/><text x="2.1031%" y="111.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitAnd&gt;::bitand (16,641,677 samples, 0.02%)</title><rect x="1.8531%" y="85" width="0.0246%" height="15" fill="rgb(221,200,47)" fg:x="1255759305" fg:w="16641677"/><text x="2.1031%" y="95.50"></text></g><g><title>arrayvec::arrayvec::ArrayVec&lt;T,_&gt;::push_unchecked (1,190,506,146 samples, 1.76%)</title><rect x="1.8777%" y="101" width="1.7568%" height="15" fill="rgb(226,26,5)" fg:x="1272400982" fg:w="1190506146"/><text x="2.1277%" y="111.50"></text></g><g><title>arrayvec::arrayvec_impl::ArrayVecImpl::push_unchecked (1,190,506,146 samples, 1.76%)</title><rect x="1.8777%" y="85" width="1.7568%" height="15" fill="rgb(249,33,26)" fg:x="1272400982" fg:w="1190506146"/><text x="2.1277%" y="95.50"></text></g><g><title>core::ptr::write (862,627,561 samples, 1.27%)</title><rect x="2.3616%" y="69" width="1.2730%" height="15" fill="rgb(235,183,28)" fg:x="1600279567" fg:w="862627561"/><text x="2.6116%" y="79.50"></text></g><g><title>core::cmp::PartialEq::ne (813,594,258 samples, 1.20%)</title><rect x="3.6346%" y="101" width="1.2006%" height="15" fill="rgb(221,5,38)" fg:x="2462907128" fg:w="813594258"/><text x="3.8846%" y="111.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::cmp::PartialEq&lt;u64&gt;&gt;::eq (813,594,258 samples, 1.20%)</title><rect x="3.6346%" y="85" width="1.2006%" height="15" fill="rgb(247,18,42)" fg:x="2462907128" fg:w="813594258"/><text x="3.8846%" y="95.50"></text></g><g><title>shiro::engine::common::chess_move::Move::with_target (1,329,817,235 samples, 1.96%)</title><rect x="4.8352%" y="101" width="1.9624%" height="15" fill="rgb(241,131,45)" fg:x="3276501386" fg:w="1329817235"/><text x="5.0852%" y="111.50">s..</text></g><g><title>shiro::engine::common::chess_move::Move::set_target (1,329,817,235 samples, 1.96%)</title><rect x="4.8352%" y="85" width="1.9624%" height="15" fill="rgb(249,31,29)" fg:x="3276501386" fg:w="1329817235"/><text x="5.0852%" y="95.50">s..</text></g><g><title>shiro::engine::common::chess_move::Move::set_target_checked (1,329,817,235 samples, 1.96%)</title><rect x="4.8352%" y="69" width="1.9624%" height="15" fill="rgb(225,111,53)" fg:x="3276501386" fg:w="1329817235"/><text x="5.0852%" y="79.50">s..</text></g><g><title>modular_bitfield::private::proc::write_specifier (1,329,817,235 samples, 1.96%)</title><rect x="4.8352%" y="53" width="1.9624%" height="15" fill="rgb(238,160,17)" fg:x="3276501386" fg:w="1329817235"/><text x="5.0852%" y="63.50">m..</text></g><g><title>shiro::engine::core::bitboard::Bitboard::leading_zeros (177,954,879 samples, 0.26%)</title><rect x="6.7976%" y="101" width="0.2626%" height="15" fill="rgb(214,148,48)" fg:x="4606318621" fg:w="177954879"/><text x="7.0476%" y="111.50"></text></g><g><title>core::num::&lt;impl u64&gt;::leading_zeros (177,954,879 samples, 0.26%)</title><rect x="6.7976%" y="85" width="0.2626%" height="15" fill="rgb(232,36,49)" fg:x="4606318621" fg:w="177954879"/><text x="7.0476%" y="95.50"></text></g><g><title>shiro::engine::core::bitboard::Bitboard::pop_leftmost (3,604,060,308 samples, 5.32%)</title><rect x="7.0602%" y="101" width="5.3186%" height="15" fill="rgb(209,103,24)" fg:x="4784273500" fg:w="3604060308"/><text x="7.3102%" y="111.50">shiro::..</text></g><g><title>core::num::&lt;impl u64&gt;::leading_zeros (195,163,883 samples, 0.29%)</title><rect x="12.0908%" y="85" width="0.2880%" height="15" fill="rgb(229,88,8)" fg:x="8193169925" fg:w="195163883"/><text x="12.3408%" y="95.50"></text></g><g><title>shiro::engine::core::bitboard::Bitboard::toggle (11,114,111 samples, 0.02%)</title><rect x="12.3788%" y="101" width="0.0164%" height="15" fill="rgb(213,181,19)" fg:x="8388333808" fg:w="11114111"/><text x="12.6288%" y="111.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_moves_hv (7,694,117,085 samples, 11.35%)</title><rect x="1.2132%" y="117" width="11.3543%" height="15" fill="rgb(254,191,54)" fg:x="822097164" fg:w="7694117085"/><text x="1.4632%" y="127.50">shiro::engine::mo..</text></g><g><title>shiro::engine::move_gen::masks::pext_hv_lookup (116,766,330 samples, 0.17%)</title><rect x="12.3952%" y="101" width="0.1723%" height="15" fill="rgb(241,83,37)" fg:x="8399447919" fg:w="116766330"/><text x="12.6452%" y="111.50"></text></g><g><title>core::cmp::PartialEq::ne (171,052,468 samples, 0.25%)</title><rect x="12.8462%" y="101" width="0.2524%" height="15" fill="rgb(233,36,39)" fg:x="8705040366" fg:w="171052468"/><text x="13.0962%" y="111.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::cmp::PartialEq&lt;u64&gt;&gt;::eq (171,052,468 samples, 0.25%)</title><rect x="12.8462%" y="85" width="0.2524%" height="15" fill="rgb(226,3,54)" fg:x="8705040366" fg:w="171052468"/><text x="13.0962%" y="95.50"></text></g><g><title>shiro::engine::common::chess_move::Move::with_target (540,669,036 samples, 0.80%)</title><rect x="13.0986%" y="101" width="0.7979%" height="15" fill="rgb(245,192,40)" fg:x="8876092834" fg:w="540669036"/><text x="13.3486%" y="111.50"></text></g><g><title>shiro::engine::common::chess_move::Move::set_target (540,669,036 samples, 0.80%)</title><rect x="13.0986%" y="85" width="0.7979%" height="15" fill="rgb(238,167,29)" fg:x="8876092834" fg:w="540669036"/><text x="13.3486%" y="95.50"></text></g><g><title>shiro::engine::common::chess_move::Move::set_target_checked (540,669,036 samples, 0.80%)</title><rect x="13.0986%" y="69" width="0.7979%" height="15" fill="rgb(232,182,51)" fg:x="8876092834" fg:w="540669036"/><text x="13.3486%" y="79.50"></text></g><g><title>modular_bitfield::private::proc::write_specifier (540,669,036 samples, 0.80%)</title><rect x="13.0986%" y="53" width="0.7979%" height="15" fill="rgb(231,60,39)" fg:x="8876092834" fg:w="540669036"/><text x="13.3486%" y="63.50"></text></g><g><title>shiro::engine::core::bitboard::Bitboard::pop_leftmost (316,523,805 samples, 0.47%)</title><rect x="13.8965%" y="101" width="0.4671%" height="15" fill="rgb(208,69,12)" fg:x="9416761870" fg:w="316523805"/><text x="14.1465%" y="111.50"></text></g><g><title>core::num::&lt;impl u64&gt;::leading_zeros (199,871,636 samples, 0.29%)</title><rect x="14.0686%" y="85" width="0.2950%" height="15" fill="rgb(235,93,37)" fg:x="9533414039" fg:w="199871636"/><text x="14.3186%" y="95.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::BitOrAssign&gt;::bitor_assign (27,736,998 samples, 0.04%)</title><rect x="14.3800%" y="85" width="0.0409%" height="15" fill="rgb(213,116,39)" fg:x="9744398784" fg:w="27736998"/><text x="14.6300%" y="95.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitOrAssign&gt;::bitor_assign (27,736,998 samples, 0.04%)</title><rect x="14.3800%" y="69" width="0.0409%" height="15" fill="rgb(222,207,29)" fg:x="9744398784" fg:w="27736998"/><text x="14.6300%" y="79.50"></text></g><g><title>core::cmp::PartialEq::ne (128,157,339 samples, 0.19%)</title><rect x="14.4209%" y="85" width="0.1891%" height="15" fill="rgb(206,96,30)" fg:x="9772135782" fg:w="128157339"/><text x="14.6709%" y="95.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::cmp::PartialEq&lt;u64&gt;&gt;::eq (128,157,339 samples, 0.19%)</title><rect x="14.4209%" y="69" width="0.1891%" height="15" fill="rgb(218,138,4)" fg:x="9772135782" fg:w="128157339"/><text x="14.6709%" y="79.50"></text></g><g><title>shiro::engine::core::bitboard::Bitboard::leading_zeros (33,384,478 samples, 0.05%)</title><rect x="14.6100%" y="85" width="0.0493%" height="15" fill="rgb(250,191,14)" fg:x="9900293121" fg:w="33384478"/><text x="14.8600%" y="95.50"></text></g><g><title>core::num::&lt;impl u64&gt;::leading_zeros (33,384,478 samples, 0.05%)</title><rect x="14.6100%" y="69" width="0.0493%" height="15" fill="rgb(239,60,40)" fg:x="9900293121" fg:w="33384478"/><text x="14.8600%" y="79.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_moves_king_normal (1,514,017,259 samples, 2.23%)</title><rect x="12.5675%" y="117" width="2.2343%" height="15" fill="rgb(206,27,48)" fg:x="8516214249" fg:w="1514017259"/><text x="12.8175%" y="127.50">s..</text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_seen_by_enemy (296,945,833 samples, 0.44%)</title><rect x="14.3636%" y="101" width="0.4382%" height="15" fill="rgb(225,35,8)" fg:x="9733285675" fg:w="296945833"/><text x="14.6136%" y="111.50"></text></g><g><title>shiro::engine::move_gen::masks::pext_hv_lookup (85,467,547 samples, 0.13%)</title><rect x="14.6756%" y="85" width="0.1261%" height="15" fill="rgb(250,213,24)" fg:x="9944763961" fg:w="85467547"/><text x="14.9256%" y="95.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::BitAnd&gt;::bitand (83,388,856 samples, 0.12%)</title><rect x="15.0150%" y="101" width="0.1231%" height="15" fill="rgb(247,123,22)" fg:x="10174742399" fg:w="83388856"/><text x="15.2650%" y="111.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitAnd&gt;::bitand (83,388,856 samples, 0.12%)</title><rect x="15.0150%" y="85" width="0.1231%" height="15" fill="rgb(231,138,38)" fg:x="10174742399" fg:w="83388856"/><text x="15.2650%" y="95.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::BitOr&gt;::bitor (55,464,769 samples, 0.08%)</title><rect x="15.1381%" y="101" width="0.0819%" height="15" fill="rgb(231,145,46)" fg:x="10258131255" fg:w="55464769"/><text x="15.3881%" y="111.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitOr&gt;::bitor (55,464,769 samples, 0.08%)</title><rect x="15.1381%" y="85" width="0.0819%" height="15" fill="rgb(251,118,11)" fg:x="10258131255" fg:w="55464769"/><text x="15.3881%" y="95.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::Not&gt;::not (16,667,717 samples, 0.02%)</title><rect x="15.2199%" y="101" width="0.0246%" height="15" fill="rgb(217,147,25)" fg:x="10313596024" fg:w="16667717"/><text x="15.4699%" y="111.50"></text></g><g><title>&lt;u64 as core::ops::bit::Not&gt;::not (16,667,717 samples, 0.02%)</title><rect x="15.2199%" y="85" width="0.0246%" height="15" fill="rgb(247,81,37)" fg:x="10313596024" fg:w="16667717"/><text x="15.4699%" y="95.50"></text></g><g><title>arrayvec::arrayvec::ArrayVec&lt;T,_&gt;::push_unchecked (44,376,373 samples, 0.07%)</title><rect x="15.2445%" y="101" width="0.0655%" height="15" fill="rgb(209,12,38)" fg:x="10330263741" fg:w="44376373"/><text x="15.4945%" y="111.50"></text></g><g><title>arrayvec::arrayvec_impl::ArrayVecImpl::push_unchecked (44,376,373 samples, 0.07%)</title><rect x="15.2445%" y="85" width="0.0655%" height="15" fill="rgb(227,1,9)" fg:x="10330263741" fg:w="44376373"/><text x="15.4945%" y="95.50"></text></g><g><title>core::cmp::PartialEq::ne (44,344,393 samples, 0.07%)</title><rect x="15.3100%" y="101" width="0.0654%" height="15" fill="rgb(248,47,43)" fg:x="10374640114" fg:w="44344393"/><text x="15.5600%" y="111.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::cmp::PartialEq&lt;u64&gt;&gt;::eq (44,344,393 samples, 0.07%)</title><rect x="15.3100%" y="85" width="0.0654%" height="15" fill="rgb(221,10,30)" fg:x="10374640114" fg:w="44344393"/><text x="15.5600%" y="95.50"></text></g><g><title>shiro::engine::common::chess_move::Move::with_target (106,115,584 samples, 0.16%)</title><rect x="15.3755%" y="101" width="0.1566%" height="15" fill="rgb(210,229,1)" fg:x="10418984507" fg:w="106115584"/><text x="15.6255%" y="111.50"></text></g><g><title>shiro::engine::common::chess_move::Move::set_target (106,115,584 samples, 0.16%)</title><rect x="15.3755%" y="85" width="0.1566%" height="15" fill="rgb(222,148,37)" fg:x="10418984507" fg:w="106115584"/><text x="15.6255%" y="95.50"></text></g><g><title>shiro::engine::common::chess_move::Move::set_target_checked (106,115,584 samples, 0.16%)</title><rect x="15.3755%" y="69" width="0.1566%" height="15" fill="rgb(234,67,33)" fg:x="10418984507" fg:w="106115584"/><text x="15.6255%" y="79.50"></text></g><g><title>modular_bitfield::private::proc::write_specifier (106,115,584 samples, 0.16%)</title><rect x="15.3755%" y="53" width="0.1566%" height="15" fill="rgb(247,98,35)" fg:x="10418984507" fg:w="106115584"/><text x="15.6255%" y="63.50"></text></g><g><title>shiro::engine::core::bitboard::Bitboard::leading_zeros (16,660,162 samples, 0.02%)</title><rect x="15.5321%" y="101" width="0.0246%" height="15" fill="rgb(247,138,52)" fg:x="10525100091" fg:w="16660162"/><text x="15.7821%" y="111.50"></text></g><g><title>core::num::&lt;impl u64&gt;::leading_zeros (16,660,162 samples, 0.02%)</title><rect x="15.5321%" y="85" width="0.0246%" height="15" fill="rgb(213,79,30)" fg:x="10525100091" fg:w="16660162"/><text x="15.7821%" y="95.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_moves_knight (555,912,494 samples, 0.82%)</title><rect x="14.8018%" y="117" width="0.8204%" height="15" fill="rgb(246,177,23)" fg:x="10030231508" fg:w="555912494"/><text x="15.0518%" y="127.50"></text></g><g><title>shiro::engine::core::bitboard::Bitboard::pop_leftmost (44,383,749 samples, 0.07%)</title><rect x="15.5566%" y="101" width="0.0655%" height="15" fill="rgb(230,62,27)" fg:x="10541760253" fg:w="44383749"/><text x="15.8066%" y="111.50"></text></g><g><title>core::num::&lt;impl u64&gt;::leading_zeros (22,187,550 samples, 0.03%)</title><rect x="15.5894%" y="85" width="0.0327%" height="15" fill="rgb(216,154,8)" fg:x="10563956452" fg:w="22187550"/><text x="15.8394%" y="95.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_moves_pawn_captures (22,199,648 samples, 0.03%)</title><rect x="15.6221%" y="117" width="0.0328%" height="15" fill="rgb(244,35,45)" fg:x="10586144002" fg:w="22199648"/><text x="15.8721%" y="127.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::BitAnd&gt;::bitand (22,230,146 samples, 0.03%)</title><rect x="15.6880%" y="101" width="0.0328%" height="15" fill="rgb(251,115,12)" fg:x="10630742689" fg:w="22230146"/><text x="15.9380%" y="111.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitAnd&gt;::bitand (22,230,146 samples, 0.03%)</title><rect x="15.6880%" y="85" width="0.0328%" height="15" fill="rgb(240,54,50)" fg:x="10630742689" fg:w="22230146"/><text x="15.9380%" y="95.50"></text></g><g><title>shiro::engine::common::chess_move::Move::with_start (11,104,179 samples, 0.02%)</title><rect x="15.7371%" y="101" width="0.0164%" height="15" fill="rgb(233,84,52)" fg:x="10664051628" fg:w="11104179"/><text x="15.9871%" y="111.50"></text></g><g><title>shiro::engine::common::chess_move::Move::set_start (11,104,179 samples, 0.02%)</title><rect x="15.7371%" y="85" width="0.0164%" height="15" fill="rgb(207,117,47)" fg:x="10664051628" fg:w="11104179"/><text x="15.9871%" y="95.50"></text></g><g><title>shiro::engine::common::chess_move::Move::set_start_checked (11,104,179 samples, 0.02%)</title><rect x="15.7371%" y="69" width="0.0164%" height="15" fill="rgb(249,43,39)" fg:x="10664051628" fg:w="11104179"/><text x="15.9871%" y="79.50"></text></g><g><title>shiro::engine::common::constants::rank_from_pos (16,665,937 samples, 0.02%)</title><rect x="15.7617%" y="101" width="0.0246%" height="15" fill="rgb(209,38,44)" fg:x="10680700448" fg:w="16665937"/><text x="16.0117%" y="111.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_all_moves (10,702,825,298 samples, 15.79%)</title><rect x="0.0083%" y="133" width="15.7943%" height="15" fill="rgb(236,212,23)" fg:x="5627767" fg:w="10702825298"/><text x="0.2583%" y="143.50">shiro::engine::move_gen:..</text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_moves_pawn_pushes (100,109,415 samples, 0.15%)</title><rect x="15.6549%" y="117" width="0.1477%" height="15" fill="rgb(242,79,21)" fg:x="10608343650" fg:w="100109415"/><text x="15.9049%" y="127.50"></text></g><g><title>[unknown] (10,749,967,806 samples, 15.86%)</title><rect x="0.0001%" y="149" width="15.8639%" height="15" fill="rgb(211,96,35)" fg:x="76052" fg:w="10749967806"/><text x="0.2501%" y="159.50">[unknown]</text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_seen_by_enemy (41,590,793 samples, 0.06%)</title><rect x="15.8026%" y="133" width="0.0614%" height="15" fill="rgb(253,215,40)" fg:x="10708453065" fg:w="41590793"/><text x="16.0526%" y="143.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::BitAnd&gt;::bitand (33,304,477 samples, 0.05%)</title><rect x="16.2655%" y="117" width="0.0491%" height="15" fill="rgb(211,81,21)" fg:x="11022104307" fg:w="33304477"/><text x="16.5155%" y="127.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitAnd&gt;::bitand (33,304,477 samples, 0.05%)</title><rect x="16.2655%" y="101" width="0.0491%" height="15" fill="rgb(208,190,38)" fg:x="11022104307" fg:w="33304477"/><text x="16.5155%" y="111.50"></text></g><g><title>core::cmp::PartialEq::ne (44,421,171 samples, 0.07%)</title><rect x="16.3146%" y="117" width="0.0656%" height="15" fill="rgb(235,213,38)" fg:x="11055408784" fg:w="44421171"/><text x="16.5646%" y="127.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::cmp::PartialEq&lt;u64&gt;&gt;::eq (44,421,171 samples, 0.07%)</title><rect x="16.3146%" y="101" width="0.0656%" height="15" fill="rgb(237,122,38)" fg:x="11055408784" fg:w="44421171"/><text x="16.5646%" y="111.50"></text></g><g><title>shiro::engine::common::chess_move::Move::with_target (49,786,804 samples, 0.07%)</title><rect x="16.3802%" y="117" width="0.0735%" height="15" fill="rgb(244,218,35)" fg:x="11099829955" fg:w="49786804"/><text x="16.6302%" y="127.50"></text></g><g><title>shiro::engine::common::chess_move::Move::set_target (49,786,804 samples, 0.07%)</title><rect x="16.3802%" y="101" width="0.0735%" height="15" fill="rgb(240,68,47)" fg:x="11099829955" fg:w="49786804"/><text x="16.6302%" y="111.50"></text></g><g><title>shiro::engine::common::chess_move::Move::set_target_checked (49,786,804 samples, 0.07%)</title><rect x="16.3802%" y="85" width="0.0735%" height="15" fill="rgb(210,16,53)" fg:x="11099829955" fg:w="49786804"/><text x="16.6302%" y="95.50"></text></g><g><title>modular_bitfield::private::proc::write_specifier (49,786,804 samples, 0.07%)</title><rect x="16.3802%" y="69" width="0.0735%" height="15" fill="rgb(235,124,12)" fg:x="11099829955" fg:w="49786804"/><text x="16.6302%" y="79.50"></text></g><g><title>shiro::engine::core::bitboard::Bitboard::leading_zeros (11,063,188 samples, 0.02%)</title><rect x="16.4537%" y="117" width="0.0163%" height="15" fill="rgb(224,169,11)" fg:x="11149616759" fg:w="11063188"/><text x="16.7037%" y="127.50"></text></g><g><title>core::num::&lt;impl u64&gt;::leading_zeros (11,063,188 samples, 0.02%)</title><rect x="16.4537%" y="101" width="0.0163%" height="15" fill="rgb(250,166,2)" fg:x="11149616759" fg:w="11063188"/><text x="16.7037%" y="111.50"></text></g><g><title>shiro::engine::core::bitboard::Bitboard::pop_leftmost (55,562,842 samples, 0.08%)</title><rect x="16.4700%" y="117" width="0.0820%" height="15" fill="rgb(242,216,29)" fg:x="11160679947" fg:w="55562842"/><text x="16.7200%" y="127.50"></text></g><g><title>core::num::&lt;impl u64&gt;::leading_zeros (22,315,060 samples, 0.03%)</title><rect x="16.5191%" y="101" width="0.0329%" height="15" fill="rgb(230,116,27)" fg:x="11193927729" fg:w="22315060"/><text x="16.7691%" y="111.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_moves_dg (288,282,322 samples, 0.43%)</title><rect x="16.1755%" y="133" width="0.4254%" height="15" fill="rgb(228,99,48)" fg:x="10961152549" fg:w="288282322"/><text x="16.4255%" y="143.50"></text></g><g><title>shiro::engine::move_gen::masks::pext_dg_lookup (27,646,499 samples, 0.04%)</title><rect x="16.5602%" y="117" width="0.0408%" height="15" fill="rgb(253,11,6)" fg:x="11221788372" fg:w="27646499"/><text x="16.8102%" y="127.50"></text></g><g><title>arrayvec::arrayvec::ArrayVec&lt;T,_&gt;::push_unchecked (139,022,580 samples, 0.21%)</title><rect x="17.0888%" y="117" width="0.2052%" height="15" fill="rgb(247,143,39)" fg:x="11580038013" fg:w="139022580"/><text x="17.3388%" y="127.50"></text></g><g><title>arrayvec::arrayvec_impl::ArrayVecImpl::push_unchecked (139,022,580 samples, 0.21%)</title><rect x="17.0888%" y="101" width="0.2052%" height="15" fill="rgb(236,97,10)" fg:x="11580038013" fg:w="139022580"/><text x="17.3388%" y="111.50"></text></g><g><title>core::ptr::write (11,137,522 samples, 0.02%)</title><rect x="17.2776%" y="85" width="0.0164%" height="15" fill="rgb(233,208,19)" fg:x="11707923071" fg:w="11137522"/><text x="17.5276%" y="95.50"></text></g><g><title>core::cmp::PartialEq::ne (558,808,221 samples, 0.82%)</title><rect x="17.2940%" y="117" width="0.8246%" height="15" fill="rgb(216,164,2)" fg:x="11719060593" fg:w="558808221"/><text x="17.5440%" y="127.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::cmp::PartialEq&lt;u64&gt;&gt;::eq (558,808,221 samples, 0.82%)</title><rect x="17.2940%" y="101" width="0.8246%" height="15" fill="rgb(220,129,5)" fg:x="11719060593" fg:w="558808221"/><text x="17.5440%" y="111.50"></text></g><g><title>shiro::engine::common::chess_move::Move::with_target (1,257,187,293 samples, 1.86%)</title><rect x="18.1186%" y="117" width="1.8553%" height="15" fill="rgb(242,17,10)" fg:x="12277868814" fg:w="1257187293"/><text x="18.3686%" y="127.50">s..</text></g><g><title>shiro::engine::common::chess_move::Move::set_target (1,257,187,293 samples, 1.86%)</title><rect x="18.1186%" y="101" width="1.8553%" height="15" fill="rgb(242,107,0)" fg:x="12277868814" fg:w="1257187293"/><text x="18.3686%" y="111.50">s..</text></g><g><title>shiro::engine::common::chess_move::Move::set_target_checked (1,257,187,293 samples, 1.86%)</title><rect x="18.1186%" y="85" width="1.8553%" height="15" fill="rgb(251,28,31)" fg:x="12277868814" fg:w="1257187293"/><text x="18.3686%" y="95.50">s..</text></g><g><title>modular_bitfield::private::proc::write_specifier (1,257,187,293 samples, 1.86%)</title><rect x="18.1186%" y="69" width="1.8553%" height="15" fill="rgb(233,223,10)" fg:x="12277868814" fg:w="1257187293"/><text x="18.3686%" y="79.50">m..</text></g><g><title>shiro::engine::core::bitboard::Bitboard::leading_zeros (38,826,947 samples, 0.06%)</title><rect x="19.9739%" y="117" width="0.0573%" height="15" fill="rgb(215,21,27)" fg:x="13535056107" fg:w="38826947"/><text x="20.2239%" y="127.50"></text></g><g><title>core::num::&lt;impl u64&gt;::leading_zeros (38,826,947 samples, 0.06%)</title><rect x="19.9739%" y="101" width="0.0573%" height="15" fill="rgb(232,23,21)" fg:x="13535056107" fg:w="38826947"/><text x="20.2239%" y="111.50"></text></g><g><title>shiro::engine::core::bitboard::Bitboard::pop_leftmost (533,898,792 samples, 0.79%)</title><rect x="20.0312%" y="117" width="0.7879%" height="15" fill="rgb(244,5,23)" fg:x="13573883054" fg:w="533898792"/><text x="20.2812%" y="127.50"></text></g><g><title>core::num::&lt;impl u64&gt;::leading_zeros (255,825,677 samples, 0.38%)</title><rect x="20.4416%" y="101" width="0.3775%" height="15" fill="rgb(226,81,46)" fg:x="13851956169" fg:w="255825677"/><text x="20.6916%" y="111.50"></text></g><g><title>shiro::engine::core::bitboard::Bitboard::toggle (16,676,652 samples, 0.02%)</title><rect x="20.8191%" y="117" width="0.0246%" height="15" fill="rgb(247,70,30)" fg:x="14107781846" fg:w="16676652"/><text x="21.0691%" y="127.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_moves_hv (2,997,272,548 samples, 4.42%)</title><rect x="16.6010%" y="133" width="4.4231%" height="15" fill="rgb(212,68,19)" fg:x="11249434871" fg:w="2997272548"/><text x="16.8510%" y="143.50">shiro..</text></g><g><title>shiro::engine::move_gen::masks::pext_hv_lookup (122,248,921 samples, 0.18%)</title><rect x="20.8437%" y="117" width="0.1804%" height="15" fill="rgb(240,187,13)" fg:x="14124458498" fg:w="122248921"/><text x="21.0937%" y="127.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::Shr&lt;__RhsT&gt;&gt;::shr (16,673,647 samples, 0.02%)</title><rect x="21.1143%" y="117" width="0.0246%" height="15" fill="rgb(223,113,26)" fg:x="14307846379" fg:w="16673647"/><text x="21.3643%" y="127.50"></text></g><g><title>&lt;u64 as core::ops::bit::Shr&lt;i32&gt;&gt;::shr (16,673,647 samples, 0.02%)</title><rect x="21.1143%" y="101" width="0.0246%" height="15" fill="rgb(206,192,2)" fg:x="14307846379" fg:w="16673647"/><text x="21.3643%" y="111.50"></text></g><g><title>arrayvec::arrayvec::ArrayVec&lt;T,_&gt;::push_unchecked (11,113,843 samples, 0.02%)</title><rect x="21.1389%" y="117" width="0.0164%" height="15" fill="rgb(241,108,4)" fg:x="14324520026" fg:w="11113843"/><text x="21.3889%" y="127.50"></text></g><g><title>arrayvec::arrayvec_impl::ArrayVecImpl::push_unchecked (11,113,843 samples, 0.02%)</title><rect x="21.1389%" y="101" width="0.0164%" height="15" fill="rgb(247,173,49)" fg:x="14324520026" fg:w="11113843"/><text x="21.3889%" y="111.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::cmp::PartialEq&lt;u64&gt;&gt;::eq (11,055,523 samples, 0.02%)</title><rect x="21.1553%" y="101" width="0.0163%" height="15" fill="rgb(224,114,35)" fg:x="14335633869" fg:w="11055523"/><text x="21.4053%" y="111.50"></text></g><g><title>core::cmp::PartialEq::ne (44,439,525 samples, 0.07%)</title><rect x="21.1553%" y="117" width="0.0656%" height="15" fill="rgb(245,159,27)" fg:x="14335633869" fg:w="44439525"/><text x="21.4053%" y="127.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::cmp::PartialEq&gt;::eq (33,384,002 samples, 0.05%)</title><rect x="21.1716%" y="101" width="0.0493%" height="15" fill="rgb(245,172,44)" fg:x="14346689392" fg:w="33384002"/><text x="21.4216%" y="111.50"></text></g><g><title>shiro::engine::common::chess_move::Move::with_start (11,148,811 samples, 0.02%)</title><rect x="21.2209%" y="117" width="0.0165%" height="15" fill="rgb(236,23,11)" fg:x="14380073394" fg:w="11148811"/><text x="21.4709%" y="127.50"></text></g><g><title>shiro::engine::common::chess_move::Move::set_start (11,148,811 samples, 0.02%)</title><rect x="21.2209%" y="101" width="0.0165%" height="15" fill="rgb(205,117,38)" fg:x="14380073394" fg:w="11148811"/><text x="21.4709%" y="111.50"></text></g><g><title>shiro::engine::common::chess_move::Move::set_start_checked (11,148,811 samples, 0.02%)</title><rect x="21.2209%" y="85" width="0.0165%" height="15" fill="rgb(237,72,25)" fg:x="14380073394" fg:w="11148811"/><text x="21.4709%" y="95.50"></text></g><g><title>modular_bitfield::private::proc::write_specifier (11,148,811 samples, 0.02%)</title><rect x="21.2209%" y="69" width="0.0165%" height="15" fill="rgb(244,70,9)" fg:x="14380073394" fg:w="11148811"/><text x="21.4709%" y="79.50"></text></g><g><title>&lt;modular_bitfield::private::push_pop::PopBuffer&lt;u8&gt; as modular_bitfield::private::traits::PopBits&gt;::pop_bits (11,148,811 samples, 0.02%)</title><rect x="21.2209%" y="53" width="0.0165%" height="15" fill="rgb(217,125,39)" fg:x="14380073394" fg:w="11148811"/><text x="21.4709%" y="63.50"></text></g><g><title>core::num::&lt;impl u8&gt;::checked_shr (11,148,811 samples, 0.02%)</title><rect x="21.2209%" y="37" width="0.0165%" height="15" fill="rgb(235,36,10)" fg:x="14380073394" fg:w="11148811"/><text x="21.4709%" y="47.50"></text></g><g><title>&lt;modular_bitfield::specifiers::B6 as modular_bitfield::Specifier&gt;::into_bytes (11,145,598 samples, 0.02%)</title><rect x="21.2374%" y="69" width="0.0164%" height="15" fill="rgb(251,123,47)" fg:x="14391222205" fg:w="11145598"/><text x="21.4874%" y="79.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_moves_king_castle (161,220,915 samples, 0.24%)</title><rect x="21.0241%" y="133" width="0.2379%" height="15" fill="rgb(221,13,13)" fg:x="14246707419" fg:w="161220915"/><text x="21.2741%" y="143.50"></text></g><g><title>shiro::engine::common::chess_move::Move::with_target (16,706,129 samples, 0.02%)</title><rect x="21.2374%" y="117" width="0.0247%" height="15" fill="rgb(238,131,9)" fg:x="14391222205" fg:w="16706129"/><text x="21.4874%" y="127.50"></text></g><g><title>shiro::engine::common::chess_move::Move::set_target (16,706,129 samples, 0.02%)</title><rect x="21.2374%" y="101" width="0.0247%" height="15" fill="rgb(211,50,8)" fg:x="14391222205" fg:w="16706129"/><text x="21.4874%" y="111.50"></text></g><g><title>shiro::engine::common::chess_move::Move::set_target_checked (16,706,129 samples, 0.02%)</title><rect x="21.2374%" y="85" width="0.0247%" height="15" fill="rgb(245,182,24)" fg:x="14391222205" fg:w="16706129"/><text x="21.4874%" y="95.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::BitAnd&gt;::bitand (11,043,696 samples, 0.02%)</title><rect x="21.3285%" y="117" width="0.0163%" height="15" fill="rgb(242,14,37)" fg:x="14452979819" fg:w="11043696"/><text x="21.5785%" y="127.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitAnd&gt;::bitand (11,043,696 samples, 0.02%)</title><rect x="21.3285%" y="101" width="0.0163%" height="15" fill="rgb(246,228,12)" fg:x="14452979819" fg:w="11043696"/><text x="21.5785%" y="111.50"></text></g><g><title>core::cmp::PartialEq::ne (11,132,280 samples, 0.02%)</title><rect x="21.3448%" y="117" width="0.0164%" height="15" fill="rgb(213,55,15)" fg:x="14464023515" fg:w="11132280"/><text x="21.5948%" y="127.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::cmp::PartialEq&lt;u64&gt;&gt;::eq (11,132,280 samples, 0.02%)</title><rect x="21.3448%" y="101" width="0.0164%" height="15" fill="rgb(209,9,3)" fg:x="14464023515" fg:w="11132280"/><text x="21.5948%" y="111.50"></text></g><g><title>shiro::engine::common::chess_move::Move::with_target (27,839,852 samples, 0.04%)</title><rect x="21.3612%" y="117" width="0.0411%" height="15" fill="rgb(230,59,30)" fg:x="14475155795" fg:w="27839852"/><text x="21.6112%" y="127.50"></text></g><g><title>shiro::engine::common::chess_move::Move::set_target (27,839,852 samples, 0.04%)</title><rect x="21.3612%" y="101" width="0.0411%" height="15" fill="rgb(209,121,21)" fg:x="14475155795" fg:w="27839852"/><text x="21.6112%" y="111.50"></text></g><g><title>shiro::engine::common::chess_move::Move::set_target_checked (27,839,852 samples, 0.04%)</title><rect x="21.3612%" y="85" width="0.0411%" height="15" fill="rgb(220,109,13)" fg:x="14475155795" fg:w="27839852"/><text x="21.6112%" y="95.50"></text></g><g><title>modular_bitfield::private::proc::write_specifier (27,839,852 samples, 0.04%)</title><rect x="21.3612%" y="69" width="0.0411%" height="15" fill="rgb(232,18,1)" fg:x="14475155795" fg:w="27839852"/><text x="21.6112%" y="79.50"></text></g><g><title>shiro::engine::core::bitboard::Bitboard::pop_leftmost (73,417,713 samples, 0.11%)</title><rect x="21.4023%" y="117" width="0.1083%" height="15" fill="rgb(215,41,42)" fg:x="14502995647" fg:w="73417713"/><text x="21.6523%" y="127.50"></text></g><g><title>core::num::&lt;impl u64&gt;::leading_zeros (51,129,345 samples, 0.08%)</title><rect x="21.4352%" y="101" width="0.0755%" height="15" fill="rgb(224,123,36)" fg:x="14525284015" fg:w="51129345"/><text x="21.6852%" y="111.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_moves_king_normal (179,580,676 samples, 0.27%)</title><rect x="21.2620%" y="133" width="0.2650%" height="15" fill="rgb(240,125,3)" fg:x="14407928334" fg:w="179580676"/><text x="21.5120%" y="143.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_seen_by_enemy (11,095,650 samples, 0.02%)</title><rect x="21.5106%" y="117" width="0.0164%" height="15" fill="rgb(205,98,50)" fg:x="14576413360" fg:w="11095650"/><text x="21.7606%" y="127.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::BitAnd&gt;::bitand (33,371,203 samples, 0.05%)</title><rect x="21.5760%" y="117" width="0.0492%" height="15" fill="rgb(205,185,37)" fg:x="14620728154" fg:w="33371203"/><text x="21.8260%" y="127.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitAnd&gt;::bitand (33,371,203 samples, 0.05%)</title><rect x="21.5760%" y="101" width="0.0492%" height="15" fill="rgb(238,207,15)" fg:x="14620728154" fg:w="33371203"/><text x="21.8260%" y="111.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::BitOr&gt;::bitor (11,104,494 samples, 0.02%)</title><rect x="21.6253%" y="117" width="0.0164%" height="15" fill="rgb(213,199,42)" fg:x="14654099357" fg:w="11104494"/><text x="21.8753%" y="127.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitOr&gt;::bitor (11,104,494 samples, 0.02%)</title><rect x="21.6253%" y="101" width="0.0164%" height="15" fill="rgb(235,201,11)" fg:x="14654099357" fg:w="11104494"/><text x="21.8753%" y="111.50"></text></g><g><title>arrayvec::arrayvec::ArrayVec&lt;T,_&gt;::push_unchecked (27,645,461 samples, 0.04%)</title><rect x="21.6498%" y="117" width="0.0408%" height="15" fill="rgb(207,46,11)" fg:x="14670722389" fg:w="27645461"/><text x="21.8998%" y="127.50"></text></g><g><title>arrayvec::arrayvec_impl::ArrayVecImpl::push_unchecked (27,645,461 samples, 0.04%)</title><rect x="21.6498%" y="101" width="0.0408%" height="15" fill="rgb(241,35,35)" fg:x="14670722389" fg:w="27645461"/><text x="21.8998%" y="111.50"></text></g><g><title>shiro::engine::common::chess_move::Move::with_target (22,156,031 samples, 0.03%)</title><rect x="21.6906%" y="117" width="0.0327%" height="15" fill="rgb(243,32,47)" fg:x="14698367850" fg:w="22156031"/><text x="21.9406%" y="127.50"></text></g><g><title>shiro::engine::common::chess_move::Move::set_target (22,156,031 samples, 0.03%)</title><rect x="21.6906%" y="101" width="0.0327%" height="15" fill="rgb(247,202,23)" fg:x="14698367850" fg:w="22156031"/><text x="21.9406%" y="111.50"></text></g><g><title>shiro::engine::common::chess_move::Move::set_target_checked (22,156,031 samples, 0.03%)</title><rect x="21.6906%" y="85" width="0.0327%" height="15" fill="rgb(219,102,11)" fg:x="14698367850" fg:w="22156031"/><text x="21.9406%" y="95.50"></text></g><g><title>modular_bitfield::private::proc::write_specifier (22,156,031 samples, 0.03%)</title><rect x="21.6906%" y="69" width="0.0327%" height="15" fill="rgb(243,110,44)" fg:x="14698367850" fg:w="22156031"/><text x="21.9406%" y="79.50"></text></g><g><title>shiro::engine::core::bitboard::Bitboard::pop_leftmost (22,108,798 samples, 0.03%)</title><rect x="21.7315%" y="117" width="0.0326%" height="15" fill="rgb(222,74,54)" fg:x="14726053033" fg:w="22108798"/><text x="21.9815%" y="127.50"></text></g><g><title>core::num::&lt;impl u64&gt;::leading_zeros (22,108,798 samples, 0.03%)</title><rect x="21.7315%" y="101" width="0.0326%" height="15" fill="rgb(216,99,12)" fg:x="14726053033" fg:w="22108798"/><text x="21.9815%" y="111.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_moves_knight (166,185,034 samples, 0.25%)</title><rect x="21.5270%" y="133" width="0.2452%" height="15" fill="rgb(226,22,26)" fg:x="14587509010" fg:w="166185034"/><text x="21.7770%" y="143.50"></text></g><g><title>shiro::engine::common::chess_move::Move::with_start (11,106,058 samples, 0.02%)</title><rect x="21.8377%" y="117" width="0.0164%" height="15" fill="rgb(217,163,10)" fg:x="14798036711" fg:w="11106058"/><text x="22.0877%" y="127.50"></text></g><g><title>shiro::engine::common::chess_move::Move::set_start (11,106,058 samples, 0.02%)</title><rect x="21.8377%" y="101" width="0.0164%" height="15" fill="rgb(213,25,53)" fg:x="14798036711" fg:w="11106058"/><text x="22.0877%" y="111.50"></text></g><g><title>shiro::engine::common::chess_move::Move::set_start_checked (11,106,058 samples, 0.02%)</title><rect x="21.8377%" y="85" width="0.0164%" height="15" fill="rgb(252,105,26)" fg:x="14798036711" fg:w="11106058"/><text x="22.0877%" y="95.50"></text></g><g><title>shiro::engine::common::chess_move::Move::with_target (11,098,375 samples, 0.02%)</title><rect x="21.8541%" y="117" width="0.0164%" height="15" fill="rgb(220,39,43)" fg:x="14809142769" fg:w="11098375"/><text x="22.1041%" y="127.50"></text></g><g><title>shiro::engine::common::chess_move::Move::set_target (11,098,375 samples, 0.02%)</title><rect x="21.8541%" y="101" width="0.0164%" height="15" fill="rgb(229,68,48)" fg:x="14809142769" fg:w="11098375"/><text x="22.1041%" y="111.50"></text></g><g><title>shiro::engine::common::chess_move::Move::set_target_checked (11,098,375 samples, 0.02%)</title><rect x="21.8541%" y="85" width="0.0164%" height="15" fill="rgb(252,8,32)" fg:x="14809142769" fg:w="11098375"/><text x="22.1041%" y="95.50"></text></g><g><title>modular_bitfield::private::proc::write_specifier (11,098,375 samples, 0.02%)</title><rect x="21.8541%" y="69" width="0.0164%" height="15" fill="rgb(223,20,43)" fg:x="14809142769" fg:w="11098375"/><text x="22.1041%" y="79.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_moves_pawn_captures (83,180,861 samples, 0.12%)</title><rect x="21.7723%" y="133" width="0.1228%" height="15" fill="rgb(229,81,49)" fg:x="14753694044" fg:w="83180861"/><text x="22.0223%" y="143.50"></text></g><g><title>shiro::engine::core::bitboard::Bitboard::pop_leftmost (16,633,761 samples, 0.02%)</title><rect x="21.8705%" y="117" width="0.0245%" height="15" fill="rgb(236,28,36)" fg:x="14820241144" fg:w="16633761"/><text x="22.1205%" y="127.50"></text></g><g><title>core::num::&lt;impl u64&gt;::leading_zeros (11,101,885 samples, 0.02%)</title><rect x="21.8786%" y="101" width="0.0164%" height="15" fill="rgb(249,185,26)" fg:x="14825773020" fg:w="11101885"/><text x="22.1286%" y="111.50"></text></g><g><title>&lt;arrayvec::arrayvec::ArrayVec&lt;T,_&gt; as arrayvec::arrayvec_impl::ArrayVecImpl&gt;::len (41,472,476 samples, 0.06%)</title><rect x="22.1439%" y="85" width="0.0612%" height="15" fill="rgb(249,174,33)" fg:x="15005538770" fg:w="41472476"/><text x="22.3939%" y="95.50"></text></g><g><title>arrayvec::arrayvec::ArrayVec&lt;T,_&gt;::len (41,472,476 samples, 0.06%)</title><rect x="22.1439%" y="69" width="0.0612%" height="15" fill="rgb(233,201,37)" fg:x="15005538770" fg:w="41472476"/><text x="22.3939%" y="79.50"></text></g><g><title>arrayvec::arrayvec::ArrayVec&lt;T,_&gt;::push_unchecked (74,751,344 samples, 0.11%)</title><rect x="22.1193%" y="117" width="0.1103%" height="15" fill="rgb(221,78,26)" fg:x="14988887949" fg:w="74751344"/><text x="22.3693%" y="127.50"></text></g><g><title>arrayvec::arrayvec_impl::ArrayVecImpl::push_unchecked (74,751,344 samples, 0.11%)</title><rect x="22.1193%" y="101" width="0.1103%" height="15" fill="rgb(250,127,30)" fg:x="14988887949" fg:w="74751344"/><text x="22.3693%" y="111.50"></text></g><g><title>core::ptr::write (11,079,740 samples, 0.02%)</title><rect x="22.2133%" y="85" width="0.0164%" height="15" fill="rgb(230,49,44)" fg:x="15052559553" fg:w="11079740"/><text x="22.4633%" y="95.50"></text></g><g><title>core::cmp::PartialEq::ne (27,561,044 samples, 0.04%)</title><rect x="22.2297%" y="117" width="0.0407%" height="15" fill="rgb(229,67,23)" fg:x="15063639293" fg:w="27561044"/><text x="22.4797%" y="127.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::cmp::PartialEq&lt;u64&gt;&gt;::eq (27,561,044 samples, 0.04%)</title><rect x="22.2297%" y="101" width="0.0407%" height="15" fill="rgb(249,83,47)" fg:x="15063639293" fg:w="27561044"/><text x="22.4797%" y="111.50"></text></g><g><title>shiro::engine::common::chess_move::Move::with_start (16,643,988 samples, 0.02%)</title><rect x="22.2703%" y="117" width="0.0246%" height="15" fill="rgb(215,43,3)" fg:x="15091200337" fg:w="16643988"/><text x="22.5203%" y="127.50"></text></g><g><title>shiro::engine::common::chess_move::Move::set_start (16,643,988 samples, 0.02%)</title><rect x="22.2703%" y="101" width="0.0246%" height="15" fill="rgb(238,154,13)" fg:x="15091200337" fg:w="16643988"/><text x="22.5203%" y="111.50"></text></g><g><title>shiro::engine::common::chess_move::Move::set_start_checked (16,643,988 samples, 0.02%)</title><rect x="22.2703%" y="85" width="0.0246%" height="15" fill="rgb(219,56,2)" fg:x="15091200337" fg:w="16643988"/><text x="22.5203%" y="95.50"></text></g><g><title>&lt;modular_bitfield::specifiers::B6 as modular_bitfield::Specifier&gt;::into_bytes (16,643,988 samples, 0.02%)</title><rect x="22.2703%" y="69" width="0.0246%" height="15" fill="rgb(233,0,4)" fg:x="15091200337" fg:w="16643988"/><text x="22.5203%" y="79.50"></text></g><g><title>shiro::engine::common::chess_move::Move::with_target (16,652,609 samples, 0.02%)</title><rect x="22.2949%" y="117" width="0.0246%" height="15" fill="rgb(235,30,7)" fg:x="15107844325" fg:w="16652609"/><text x="22.5449%" y="127.50"></text></g><g><title>shiro::engine::common::chess_move::Move::set_target (16,652,609 samples, 0.02%)</title><rect x="22.2949%" y="101" width="0.0246%" height="15" fill="rgb(250,79,13)" fg:x="15107844325" fg:w="16652609"/><text x="22.5449%" y="111.50"></text></g><g><title>shiro::engine::common::chess_move::Move::set_target_checked (16,652,609 samples, 0.02%)</title><rect x="22.2949%" y="85" width="0.0246%" height="15" fill="rgb(211,146,34)" fg:x="15107844325" fg:w="16652609"/><text x="22.5449%" y="95.50"></text></g><g><title>modular_bitfield::private::proc::write_specifier (16,652,609 samples, 0.02%)</title><rect x="22.2949%" y="69" width="0.0246%" height="15" fill="rgb(228,22,38)" fg:x="15107844325" fg:w="16652609"/><text x="22.5449%" y="79.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_all_moves (4,523,811,204 samples, 6.68%)</title><rect x="15.8722%" y="149" width="6.6759%" height="15" fill="rgb(235,168,5)" fg:x="10755600259" fg:w="4523811204"/><text x="16.1222%" y="159.50">shiro::en..</text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_moves_pawn_pushes (442,536,558 samples, 0.65%)</title><rect x="21.8950%" y="133" width="0.6531%" height="15" fill="rgb(221,155,16)" fg:x="14836874905" fg:w="442536558"/><text x="22.1450%" y="143.50"></text></g><g><title>shiro::engine::core::bitboard::Bitboard::pop_leftmost (143,927,608 samples, 0.21%)</title><rect x="22.3357%" y="117" width="0.2124%" height="15" fill="rgb(215,215,53)" fg:x="15135483855" fg:w="143927608"/><text x="22.5857%" y="127.50"></text></g><g><title>core::num::&lt;impl u64&gt;::leading_zeros (60,896,580 samples, 0.09%)</title><rect x="22.4582%" y="101" width="0.0899%" height="15" fill="rgb(223,4,10)" fg:x="15218514883" fg:w="60896580"/><text x="22.7082%" y="111.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_seen_by_enemy (49,909,513 samples, 0.07%)</title><rect x="22.5481%" y="149" width="0.0737%" height="15" fill="rgb(234,103,6)" fg:x="15279411463" fg:w="49909513"/><text x="22.7981%" y="159.50"></text></g><g><title>core::cmp::PartialEq::ne (11,081,111 samples, 0.02%)</title><rect x="22.6054%" y="133" width="0.0164%" height="15" fill="rgb(227,97,0)" fg:x="15318239865" fg:w="11081111"/><text x="22.8554%" y="143.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::cmp::PartialEq&lt;u64&gt;&gt;::eq (11,081,111 samples, 0.02%)</title><rect x="22.6054%" y="117" width="0.0164%" height="15" fill="rgb(234,150,53)" fg:x="15318239865" fg:w="11081111"/><text x="22.8554%" y="127.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::BitAnd&gt;::bitand (11,118,804 samples, 0.02%)</title><rect x="23.1134%" y="101" width="0.0164%" height="15" fill="rgb(228,201,54)" fg:x="15662490694" fg:w="11118804"/><text x="23.3634%" y="111.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitAnd&gt;::bitand (11,118,804 samples, 0.02%)</title><rect x="23.1134%" y="85" width="0.0164%" height="15" fill="rgb(222,22,37)" fg:x="15662490694" fg:w="11118804"/><text x="23.3634%" y="95.50"></text></g><g><title>arrayvec::arrayvec::ArrayVec&lt;T,_&gt;::push_unchecked (16,625,445 samples, 0.02%)</title><rect x="23.1298%" y="101" width="0.0245%" height="15" fill="rgb(237,53,32)" fg:x="15673609498" fg:w="16625445"/><text x="23.3798%" y="111.50"></text></g><g><title>arrayvec::arrayvec_impl::ArrayVecImpl::push_unchecked (16,625,445 samples, 0.02%)</title><rect x="23.1298%" y="85" width="0.0245%" height="15" fill="rgb(233,25,53)" fg:x="15673609498" fg:w="16625445"/><text x="23.3798%" y="95.50"></text></g><g><title>core::cmp::PartialEq::ne (77,631,184 samples, 0.11%)</title><rect x="23.1543%" y="101" width="0.1146%" height="15" fill="rgb(210,40,34)" fg:x="15690234943" fg:w="77631184"/><text x="23.4043%" y="111.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::cmp::PartialEq&lt;u64&gt;&gt;::eq (77,631,184 samples, 0.11%)</title><rect x="23.1543%" y="85" width="0.1146%" height="15" fill="rgb(241,220,44)" fg:x="15690234943" fg:w="77631184"/><text x="23.4043%" y="95.50"></text></g><g><title>shiro::engine::common::chess_move::Move::with_target (105,449,009 samples, 0.16%)</title><rect x="23.2689%" y="101" width="0.1556%" height="15" fill="rgb(235,28,35)" fg:x="15767866127" fg:w="105449009"/><text x="23.5189%" y="111.50"></text></g><g><title>shiro::engine::common::chess_move::Move::set_target (105,449,009 samples, 0.16%)</title><rect x="23.2689%" y="85" width="0.1556%" height="15" fill="rgb(210,56,17)" fg:x="15767866127" fg:w="105449009"/><text x="23.5189%" y="95.50"></text></g><g><title>shiro::engine::common::chess_move::Move::set_target_checked (105,449,009 samples, 0.16%)</title><rect x="23.2689%" y="69" width="0.1556%" height="15" fill="rgb(224,130,29)" fg:x="15767866127" fg:w="105449009"/><text x="23.5189%" y="79.50"></text></g><g><title>modular_bitfield::private::proc::write_specifier (105,449,009 samples, 0.16%)</title><rect x="23.2689%" y="53" width="0.1556%" height="15" fill="rgb(235,212,8)" fg:x="15767866127" fg:w="105449009"/><text x="23.5189%" y="63.50"></text></g><g><title>shiro::engine::core::bitboard::Bitboard::leading_zeros (16,657,418 samples, 0.02%)</title><rect x="23.4245%" y="101" width="0.0246%" height="15" fill="rgb(223,33,50)" fg:x="15873315136" fg:w="16657418"/><text x="23.6745%" y="111.50"></text></g><g><title>core::num::&lt;impl u64&gt;::leading_zeros (16,657,418 samples, 0.02%)</title><rect x="23.4245%" y="85" width="0.0246%" height="15" fill="rgb(219,149,13)" fg:x="15873315136" fg:w="16657418"/><text x="23.6745%" y="95.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_moves_dg (327,311,989 samples, 0.48%)</title><rect x="23.0315%" y="117" width="0.4830%" height="15" fill="rgb(250,156,29)" fg:x="15607034430" fg:w="327311989"/><text x="23.2815%" y="127.50"></text></g><g><title>shiro::engine::core::bitboard::Bitboard::pop_leftmost (44,373,865 samples, 0.07%)</title><rect x="23.4491%" y="101" width="0.0655%" height="15" fill="rgb(216,193,19)" fg:x="15889972554" fg:w="44373865"/><text x="23.6991%" y="111.50"></text></g><g><title>core::num::&lt;impl u64&gt;::leading_zeros (16,644,050 samples, 0.02%)</title><rect x="23.4900%" y="85" width="0.0246%" height="15" fill="rgb(216,135,14)" fg:x="15917702369" fg:w="16644050"/><text x="23.7400%" y="95.50"></text></g><g><title>arrayvec::arrayvec::ArrayVec&lt;T,_&gt;::push_unchecked (91,659,205 samples, 0.14%)</title><rect x="23.6129%" y="101" width="0.1353%" height="15" fill="rgb(241,47,5)" fg:x="16000952327" fg:w="91659205"/><text x="23.8629%" y="111.50"></text></g><g><title>arrayvec::arrayvec_impl::ArrayVecImpl::push_unchecked (91,659,205 samples, 0.14%)</title><rect x="23.6129%" y="85" width="0.1353%" height="15" fill="rgb(233,42,35)" fg:x="16000952327" fg:w="91659205"/><text x="23.8629%" y="95.50"></text></g><g><title>core::ptr::write (55,541,309 samples, 0.08%)</title><rect x="23.6662%" y="69" width="0.0820%" height="15" fill="rgb(231,13,6)" fg:x="16037070223" fg:w="55541309"/><text x="23.9162%" y="79.50"></text></g><g><title>core::cmp::PartialEq::ne (88,811,259 samples, 0.13%)</title><rect x="23.7481%" y="101" width="0.1311%" height="15" fill="rgb(207,181,40)" fg:x="16092611532" fg:w="88811259"/><text x="23.9981%" y="111.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::cmp::PartialEq&lt;u64&gt;&gt;::eq (88,811,259 samples, 0.13%)</title><rect x="23.7481%" y="85" width="0.1311%" height="15" fill="rgb(254,173,49)" fg:x="16092611532" fg:w="88811259"/><text x="23.9981%" y="95.50"></text></g><g><title>shiro::engine::common::chess_move::Move::with_target (166,535,137 samples, 0.25%)</title><rect x="23.8792%" y="101" width="0.2458%" height="15" fill="rgb(221,1,38)" fg:x="16181422791" fg:w="166535137"/><text x="24.1292%" y="111.50"></text></g><g><title>shiro::engine::common::chess_move::Move::set_target (166,535,137 samples, 0.25%)</title><rect x="23.8792%" y="85" width="0.2458%" height="15" fill="rgb(206,124,46)" fg:x="16181422791" fg:w="166535137"/><text x="24.1292%" y="95.50"></text></g><g><title>shiro::engine::common::chess_move::Move::set_target_checked (166,535,137 samples, 0.25%)</title><rect x="23.8792%" y="69" width="0.2458%" height="15" fill="rgb(249,21,11)" fg:x="16181422791" fg:w="166535137"/><text x="24.1292%" y="79.50"></text></g><g><title>modular_bitfield::private::proc::write_specifier (166,535,137 samples, 0.25%)</title><rect x="23.8792%" y="53" width="0.2458%" height="15" fill="rgb(222,201,40)" fg:x="16181422791" fg:w="166535137"/><text x="24.1292%" y="63.50"></text></g><g><title>shiro::engine::core::bitboard::Bitboard::leading_zeros (27,766,133 samples, 0.04%)</title><rect x="24.1249%" y="101" width="0.0410%" height="15" fill="rgb(235,61,29)" fg:x="16347957928" fg:w="27766133"/><text x="24.3749%" y="111.50"></text></g><g><title>core::num::&lt;impl u64&gt;::leading_zeros (27,766,133 samples, 0.04%)</title><rect x="24.1249%" y="85" width="0.0410%" height="15" fill="rgb(219,207,3)" fg:x="16347957928" fg:w="27766133"/><text x="24.3749%" y="95.50"></text></g><g><title>shiro::engine::core::bitboard::Bitboard::pop_leftmost (231,857,518 samples, 0.34%)</title><rect x="24.1659%" y="101" width="0.3422%" height="15" fill="rgb(222,56,46)" fg:x="16375724061" fg:w="231857518"/><text x="24.4159%" y="111.50"></text></g><g><title>core::num::&lt;impl u64&gt;::leading_zeros (38,859,183 samples, 0.06%)</title><rect x="24.4507%" y="85" width="0.0573%" height="15" fill="rgb(239,76,54)" fg:x="16568722396" fg:w="38859183"/><text x="24.7007%" y="95.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_moves_hv (684,344,519 samples, 1.01%)</title><rect x="23.5146%" y="117" width="1.0099%" height="15" fill="rgb(231,124,27)" fg:x="15934346419" fg:w="684344519"/><text x="23.7646%" y="127.50"></text></g><g><title>shiro::engine::move_gen::masks::pext_hv_lookup (11,109,359 samples, 0.02%)</title><rect x="24.5081%" y="101" width="0.0164%" height="15" fill="rgb(249,195,6)" fg:x="16607581579" fg:w="11109359"/><text x="24.7581%" y="111.50"></text></g><g><title>core::cmp::PartialEq::ne (44,396,274 samples, 0.07%)</title><rect x="24.5818%" y="101" width="0.0655%" height="15" fill="rgb(237,174,47)" fg:x="16657557617" fg:w="44396274"/><text x="24.8318%" y="111.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::cmp::PartialEq&lt;u64&gt;&gt;::eq (44,396,274 samples, 0.07%)</title><rect x="24.5818%" y="85" width="0.0655%" height="15" fill="rgb(206,201,31)" fg:x="16657557617" fg:w="44396274"/><text x="24.8318%" y="95.50"></text></g><g><title>shiro::engine::common::chess_move::Move::with_target (66,661,202 samples, 0.10%)</title><rect x="24.6473%" y="101" width="0.0984%" height="15" fill="rgb(231,57,52)" fg:x="16701953891" fg:w="66661202"/><text x="24.8973%" y="111.50"></text></g><g><title>shiro::engine::common::chess_move::Move::set_target (66,661,202 samples, 0.10%)</title><rect x="24.6473%" y="85" width="0.0984%" height="15" fill="rgb(248,177,22)" fg:x="16701953891" fg:w="66661202"/><text x="24.8973%" y="95.50"></text></g><g><title>shiro::engine::common::chess_move::Move::set_target_checked (66,661,202 samples, 0.10%)</title><rect x="24.6473%" y="69" width="0.0984%" height="15" fill="rgb(215,211,37)" fg:x="16701953891" fg:w="66661202"/><text x="24.8973%" y="79.50"></text></g><g><title>modular_bitfield::private::proc::write_specifier (66,661,202 samples, 0.10%)</title><rect x="24.6473%" y="53" width="0.0984%" height="15" fill="rgb(241,128,51)" fg:x="16701953891" fg:w="66661202"/><text x="24.8973%" y="63.50"></text></g><g><title>shiro::engine::core::bitboard::Bitboard::pop_leftmost (33,304,819 samples, 0.05%)</title><rect x="24.7457%" y="101" width="0.0491%" height="15" fill="rgb(227,165,31)" fg:x="16768615093" fg:w="33304819"/><text x="24.9957%" y="111.50"></text></g><g><title>core::num::&lt;impl u64&gt;::leading_zeros (11,104,735 samples, 0.02%)</title><rect x="24.7785%" y="85" width="0.0164%" height="15" fill="rgb(228,167,24)" fg:x="16790815177" fg:w="11104735"/><text x="25.0285%" y="95.50"></text></g><g><title>core::cmp::PartialEq::ne (16,670,546 samples, 0.02%)</title><rect x="24.8194%" y="85" width="0.0246%" height="15" fill="rgb(228,143,12)" fg:x="16818574866" fg:w="16670546"/><text x="25.0694%" y="95.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::cmp::PartialEq&lt;u64&gt;&gt;::eq (16,670,546 samples, 0.02%)</title><rect x="24.8194%" y="69" width="0.0246%" height="15" fill="rgb(249,149,8)" fg:x="16818574866" fg:w="16670546"/><text x="25.0694%" y="79.50"></text></g><g><title>shiro::engine::core::bitboard::Bitboard::leading_zeros (11,094,415 samples, 0.02%)</title><rect x="24.8440%" y="85" width="0.0164%" height="15" fill="rgb(243,35,44)" fg:x="16835245412" fg:w="11094415"/><text x="25.0940%" y="95.50"></text></g><g><title>core::num::&lt;impl u64&gt;::leading_zeros (11,094,415 samples, 0.02%)</title><rect x="24.8440%" y="69" width="0.0164%" height="15" fill="rgb(246,89,9)" fg:x="16835245412" fg:w="11094415"/><text x="25.0940%" y="79.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_moves_king_normal (233,183,635 samples, 0.34%)</title><rect x="24.5327%" y="117" width="0.3441%" height="15" fill="rgb(233,213,13)" fg:x="16624242155" fg:w="233183635"/><text x="24.7827%" y="127.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_seen_by_enemy (55,505,878 samples, 0.08%)</title><rect x="24.7949%" y="101" width="0.0819%" height="15" fill="rgb(233,141,41)" fg:x="16801919912" fg:w="55505878"/><text x="25.0449%" y="111.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::BitOr&gt;::bitor (22,195,274 samples, 0.03%)</title><rect x="24.9177%" y="101" width="0.0328%" height="15" fill="rgb(239,167,4)" fg:x="16885136551" fg:w="22195274"/><text x="25.1677%" y="111.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitOr&gt;::bitor (22,195,274 samples, 0.03%)</title><rect x="24.9177%" y="85" width="0.0328%" height="15" fill="rgb(209,217,16)" fg:x="16885136551" fg:w="22195274"/><text x="25.1677%" y="95.50"></text></g><g><title>arrayvec::arrayvec::ArrayVec&lt;T,_&gt;::push_unchecked (27,751,637 samples, 0.04%)</title><rect x="24.9504%" y="101" width="0.0410%" height="15" fill="rgb(219,88,35)" fg:x="16907331825" fg:w="27751637"/><text x="25.2004%" y="111.50"></text></g><g><title>arrayvec::arrayvec_impl::ArrayVecImpl::push_unchecked (27,751,637 samples, 0.04%)</title><rect x="24.9504%" y="85" width="0.0410%" height="15" fill="rgb(220,193,23)" fg:x="16907331825" fg:w="27751637"/><text x="25.2004%" y="95.50"></text></g><g><title>core::cmp::PartialEq::ne (27,719,914 samples, 0.04%)</title><rect x="24.9914%" y="101" width="0.0409%" height="15" fill="rgb(230,90,52)" fg:x="16935083462" fg:w="27719914"/><text x="25.2414%" y="111.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::cmp::PartialEq&lt;u64&gt;&gt;::eq (27,719,914 samples, 0.04%)</title><rect x="24.9914%" y="85" width="0.0409%" height="15" fill="rgb(252,106,19)" fg:x="16935083462" fg:w="27719914"/><text x="25.2414%" y="95.50"></text></g><g><title>shiro::engine::common::chess_move::Move::with_target (77,624,518 samples, 0.11%)</title><rect x="25.0323%" y="101" width="0.1146%" height="15" fill="rgb(206,74,20)" fg:x="16962803376" fg:w="77624518"/><text x="25.2823%" y="111.50"></text></g><g><title>shiro::engine::common::chess_move::Move::set_target (77,624,518 samples, 0.11%)</title><rect x="25.0323%" y="85" width="0.1146%" height="15" fill="rgb(230,138,44)" fg:x="16962803376" fg:w="77624518"/><text x="25.2823%" y="95.50"></text></g><g><title>shiro::engine::common::chess_move::Move::set_target_checked (77,624,518 samples, 0.11%)</title><rect x="25.0323%" y="69" width="0.1146%" height="15" fill="rgb(235,182,43)" fg:x="16962803376" fg:w="77624518"/><text x="25.2823%" y="79.50"></text></g><g><title>modular_bitfield::private::proc::write_specifier (77,624,518 samples, 0.11%)</title><rect x="25.0323%" y="53" width="0.1146%" height="15" fill="rgb(242,16,51)" fg:x="16962803376" fg:w="77624518"/><text x="25.2823%" y="63.50"></text></g><g><title>shiro::engine::core::bitboard::Bitboard::leading_zeros (16,651,357 samples, 0.02%)</title><rect x="25.1468%" y="101" width="0.0246%" height="15" fill="rgb(248,9,4)" fg:x="17040427894" fg:w="16651357"/><text x="25.3968%" y="111.50"></text></g><g><title>core::num::&lt;impl u64&gt;::leading_zeros (16,651,357 samples, 0.02%)</title><rect x="25.1468%" y="85" width="0.0246%" height="15" fill="rgb(210,31,22)" fg:x="17040427894" fg:w="16651357"/><text x="25.3968%" y="95.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_moves_knight (277,242,166 samples, 0.41%)</title><rect x="24.8768%" y="117" width="0.4091%" height="15" fill="rgb(239,54,39)" fg:x="16857425790" fg:w="277242166"/><text x="25.1268%" y="127.50"></text></g><g><title>shiro::engine::core::bitboard::Bitboard::pop_leftmost (77,588,705 samples, 0.11%)</title><rect x="25.1714%" y="101" width="0.1145%" height="15" fill="rgb(230,99,41)" fg:x="17057079251" fg:w="77588705"/><text x="25.4214%" y="111.50"></text></g><g><title>core::num::&lt;impl u64&gt;::leading_zeros (55,424,248 samples, 0.08%)</title><rect x="25.2041%" y="85" width="0.0818%" height="15" fill="rgb(253,106,12)" fg:x="17079243708" fg:w="55424248"/><text x="25.4541%" y="95.50"></text></g><g><title>arrayvec::arrayvec::ArrayVec&lt;T,_&gt;::push_unchecked (16,647,070 samples, 0.02%)</title><rect x="25.3053%" y="101" width="0.0246%" height="15" fill="rgb(213,46,41)" fg:x="17147788669" fg:w="16647070"/><text x="25.5553%" y="111.50"></text></g><g><title>arrayvec::arrayvec_impl::ArrayVecImpl::push_unchecked (16,647,070 samples, 0.02%)</title><rect x="25.3053%" y="85" width="0.0246%" height="15" fill="rgb(215,133,35)" fg:x="17147788669" fg:w="16647070"/><text x="25.5553%" y="95.50"></text></g><g><title>[unknown] (17,181,011,549 samples, 25.35%)</title><rect x="0.0001%" y="165" width="25.3543%" height="15" fill="rgb(213,28,5)" fg:x="76052" fg:w="17181011549"/><text x="0.2501%" y="175.50">[unknown]</text></g><g><title>shiro::engine::move_gen::gen_moves (1,846,221,812 samples, 2.72%)</title><rect x="22.6299%" y="149" width="2.7245%" height="15" fill="rgb(215,77,49)" fg:x="15334865789" fg:w="1846221812"/><text x="22.8799%" y="159.50">sh..</text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_all_moves (1,590,689,332 samples, 2.35%)</title><rect x="23.0070%" y="133" width="2.3474%" height="15" fill="rgb(248,100,22)" fg:x="15590398269" fg:w="1590689332"/><text x="23.2570%" y="143.50">s..</text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_moves_pawn_captures (46,419,645 samples, 0.07%)</title><rect x="25.2859%" y="117" width="0.0685%" height="15" fill="rgb(208,67,9)" fg:x="17134667956" fg:w="46419645"/><text x="25.5359%" y="127.50"></text></g><g><title>shiro::engine::core::bitboard::Bitboard::pop_leftmost (11,099,252 samples, 0.02%)</title><rect x="25.3380%" y="101" width="0.0164%" height="15" fill="rgb(219,133,21)" fg:x="17169988349" fg:w="11099252"/><text x="25.5880%" y="111.50"></text></g><g><title>core::num::&lt;impl u64&gt;::leading_zeros (11,099,252 samples, 0.02%)</title><rect x="25.3380%" y="85" width="0.0164%" height="15" fill="rgb(246,46,29)" fg:x="17169988349" fg:w="11099252"/><text x="25.5880%" y="95.50"></text></g><g><title>core::core_arch::x86_64::bmi2::_pext_u64 (1,315,069,511 samples, 1.94%)</title><rect x="25.3544%" y="165" width="1.9407%" height="15" fill="rgb(246,185,52)" fg:x="17181087601" fg:w="1315069511"/><text x="25.6044%" y="175.50">c..</text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::BitAnd&gt;::bitand (11,064,884 samples, 0.02%)</title><rect x="27.5328%" y="133" width="0.0163%" height="15" fill="rgb(252,136,11)" fg:x="18657234720" fg:w="11064884"/><text x="27.7828%" y="143.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitAnd&gt;::bitand (11,064,884 samples, 0.02%)</title><rect x="27.5328%" y="117" width="0.0163%" height="15" fill="rgb(219,138,53)" fg:x="18657234720" fg:w="11064884"/><text x="27.7828%" y="127.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_moves_dg (61,020,428 samples, 0.09%)</title><rect x="27.5000%" y="149" width="0.0900%" height="15" fill="rgb(211,51,23)" fg:x="18635033540" fg:w="61020428"/><text x="27.7500%" y="159.50"></text></g><g><title>shiro::engine::core::bitboard::Bitboard::pop_leftmost (16,660,805 samples, 0.02%)</title><rect x="27.5655%" y="133" width="0.0246%" height="15" fill="rgb(247,221,28)" fg:x="18679393163" fg:w="16660805"/><text x="27.8155%" y="143.50"></text></g><g><title>arrayvec::arrayvec::ArrayVec&lt;T,_&gt;::push_unchecked (61,205,455 samples, 0.09%)</title><rect x="27.6393%" y="133" width="0.0903%" height="15" fill="rgb(251,222,45)" fg:x="18729414482" fg:w="61205455"/><text x="27.8893%" y="143.50"></text></g><g><title>arrayvec::arrayvec_impl::ArrayVecImpl::push_unchecked (61,205,455 samples, 0.09%)</title><rect x="27.6393%" y="117" width="0.0903%" height="15" fill="rgb(217,162,53)" fg:x="18729414482" fg:w="61205455"/><text x="27.8893%" y="127.50"></text></g><g><title>core::ptr::write (44,536,062 samples, 0.07%)</title><rect x="27.6639%" y="101" width="0.0657%" height="15" fill="rgb(229,93,14)" fg:x="18746083875" fg:w="44536062"/><text x="27.9139%" y="111.50"></text></g><g><title>core::cmp::PartialEq::ne (44,431,179 samples, 0.07%)</title><rect x="27.7296%" y="133" width="0.0656%" height="15" fill="rgb(209,67,49)" fg:x="18790619937" fg:w="44431179"/><text x="27.9796%" y="143.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::cmp::PartialEq&lt;u64&gt;&gt;::eq (44,431,179 samples, 0.07%)</title><rect x="27.7296%" y="117" width="0.0656%" height="15" fill="rgb(213,87,29)" fg:x="18790619937" fg:w="44431179"/><text x="27.9796%" y="127.50"></text></g><g><title>shiro::engine::common::chess_move::Move::with_target (55,573,592 samples, 0.08%)</title><rect x="27.7952%" y="133" width="0.0820%" height="15" fill="rgb(205,151,52)" fg:x="18835051116" fg:w="55573592"/><text x="28.0452%" y="143.50"></text></g><g><title>shiro::engine::common::chess_move::Move::set_target (55,573,592 samples, 0.08%)</title><rect x="27.7952%" y="117" width="0.0820%" height="15" fill="rgb(253,215,39)" fg:x="18835051116" fg:w="55573592"/><text x="28.0452%" y="127.50"></text></g><g><title>shiro::engine::common::chess_move::Move::set_target_checked (55,573,592 samples, 0.08%)</title><rect x="27.7952%" y="101" width="0.0820%" height="15" fill="rgb(221,220,41)" fg:x="18835051116" fg:w="55573592"/><text x="28.0452%" y="111.50"></text></g><g><title>modular_bitfield::private::proc::write_specifier (55,573,592 samples, 0.08%)</title><rect x="27.7952%" y="85" width="0.0820%" height="15" fill="rgb(218,133,21)" fg:x="18835051116" fg:w="55573592"/><text x="28.0452%" y="95.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_moves_hv (300,196,908 samples, 0.44%)</title><rect x="27.5901%" y="149" width="0.4430%" height="15" fill="rgb(221,193,43)" fg:x="18696053968" fg:w="300196908"/><text x="27.8401%" y="159.50"></text></g><g><title>shiro::engine::core::bitboard::Bitboard::pop_leftmost (100,062,411 samples, 0.15%)</title><rect x="27.8854%" y="133" width="0.1477%" height="15" fill="rgb(240,128,52)" fg:x="18896188465" fg:w="100062411"/><text x="28.1354%" y="143.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::BitAnd&gt;::bitand (11,077,809 samples, 0.02%)</title><rect x="28.0577%" y="133" width="0.0163%" height="15" fill="rgb(253,114,12)" fg:x="19012931485" fg:w="11077809"/><text x="28.3077%" y="143.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitAnd&gt;::bitand (11,077,809 samples, 0.02%)</title><rect x="28.0577%" y="117" width="0.0163%" height="15" fill="rgb(215,223,47)" fg:x="19012931485" fg:w="11077809"/><text x="28.3077%" y="127.50"></text></g><g><title>core::cmp::PartialEq::ne (22,173,250 samples, 0.03%)</title><rect x="28.0740%" y="133" width="0.0327%" height="15" fill="rgb(248,225,23)" fg:x="19024009294" fg:w="22173250"/><text x="28.3240%" y="143.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::cmp::PartialEq&lt;u64&gt;&gt;::eq (22,173,250 samples, 0.03%)</title><rect x="28.0740%" y="117" width="0.0327%" height="15" fill="rgb(250,108,0)" fg:x="19024009294" fg:w="22173250"/><text x="28.3240%" y="127.50"></text></g><g><title>shiro::engine::common::chess_move::Move::with_target (27,798,783 samples, 0.04%)</title><rect x="28.1068%" y="133" width="0.0410%" height="15" fill="rgb(228,208,7)" fg:x="19046182544" fg:w="27798783"/><text x="28.3568%" y="143.50"></text></g><g><title>shiro::engine::common::chess_move::Move::set_target (27,798,783 samples, 0.04%)</title><rect x="28.1068%" y="117" width="0.0410%" height="15" fill="rgb(244,45,10)" fg:x="19046182544" fg:w="27798783"/><text x="28.3568%" y="127.50"></text></g><g><title>shiro::engine::common::chess_move::Move::set_target_checked (27,798,783 samples, 0.04%)</title><rect x="28.1068%" y="101" width="0.0410%" height="15" fill="rgb(207,125,25)" fg:x="19046182544" fg:w="27798783"/><text x="28.3568%" y="111.50"></text></g><g><title>modular_bitfield::private::proc::write_specifier (27,798,783 samples, 0.04%)</title><rect x="28.1068%" y="85" width="0.0410%" height="15" fill="rgb(210,195,18)" fg:x="19046182544" fg:w="27798783"/><text x="28.3568%" y="95.50"></text></g><g><title>shiro::engine::core::bitboard::Bitboard::pop_leftmost (55,481,012 samples, 0.08%)</title><rect x="28.1478%" y="133" width="0.0819%" height="15" fill="rgb(249,80,12)" fg:x="19073981327" fg:w="55481012"/><text x="28.3978%" y="143.50"></text></g><g><title>core::num::&lt;impl u64&gt;::leading_zeros (49,928,580 samples, 0.07%)</title><rect x="28.1560%" y="117" width="0.0737%" height="15" fill="rgb(221,65,9)" fg:x="19079533759" fg:w="49928580"/><text x="28.4060%" y="127.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_moves_king_normal (144,321,694 samples, 0.21%)</title><rect x="28.0331%" y="149" width="0.2130%" height="15" fill="rgb(235,49,36)" fg:x="18996250876" fg:w="144321694"/><text x="28.2831%" y="159.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_seen_by_enemy (11,110,231 samples, 0.02%)</title><rect x="28.2296%" y="133" width="0.0164%" height="15" fill="rgb(225,32,20)" fg:x="19129462339" fg:w="11110231"/><text x="28.4796%" y="143.50"></text></g><g><title>arrayvec::arrayvec::ArrayVec&lt;T,_&gt;::push_unchecked (11,098,818 samples, 0.02%)</title><rect x="28.2870%" y="133" width="0.0164%" height="15" fill="rgb(215,141,46)" fg:x="19168309743" fg:w="11098818"/><text x="28.5370%" y="143.50"></text></g><g><title>arrayvec::arrayvec_impl::ArrayVecImpl::push_unchecked (11,098,818 samples, 0.02%)</title><rect x="28.2870%" y="117" width="0.0164%" height="15" fill="rgb(250,160,47)" fg:x="19168309743" fg:w="11098818"/><text x="28.5370%" y="127.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_moves_knight (56,087,113 samples, 0.08%)</title><rect x="28.2460%" y="149" width="0.0828%" height="15" fill="rgb(216,222,40)" fg:x="19140572570" fg:w="56087113"/><text x="28.4960%" y="159.50"></text></g><g><title>shiro::engine::core::bitboard::Bitboard::pop_leftmost (17,251,122 samples, 0.03%)</title><rect x="28.3034%" y="133" width="0.0255%" height="15" fill="rgb(234,217,39)" fg:x="19179408561" fg:w="17251122"/><text x="28.5534%" y="143.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::BitAnd&gt;::bitand (11,101,812 samples, 0.02%)</title><rect x="28.3288%" y="133" width="0.0164%" height="15" fill="rgb(207,178,40)" fg:x="19196659683" fg:w="11101812"/><text x="28.5788%" y="143.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitAnd&gt;::bitand (11,101,812 samples, 0.02%)</title><rect x="28.3288%" y="117" width="0.0164%" height="15" fill="rgb(221,136,13)" fg:x="19196659683" fg:w="11101812"/><text x="28.5788%" y="127.50"></text></g><g><title>core::cmp::PartialEq::ne (22,216,706 samples, 0.03%)</title><rect x="28.3860%" y="133" width="0.0328%" height="15" fill="rgb(249,199,10)" fg:x="19235433411" fg:w="22216706"/><text x="28.6360%" y="143.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::cmp::PartialEq&lt;u64&gt;&gt;::eq (22,216,706 samples, 0.03%)</title><rect x="28.3860%" y="117" width="0.0328%" height="15" fill="rgb(249,222,13)" fg:x="19235433411" fg:w="22216706"/><text x="28.6360%" y="127.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_moves_pawn_captures (72,083,350 samples, 0.11%)</title><rect x="28.3288%" y="149" width="0.1064%" height="15" fill="rgb(244,185,38)" fg:x="19196659683" fg:w="72083350"/><text x="28.5788%" y="159.50"></text></g><g><title>shiro::engine::core::bitboard::Bitboard::pop_leftmost (11,092,916 samples, 0.02%)</title><rect x="28.4188%" y="133" width="0.0164%" height="15" fill="rgb(236,202,9)" fg:x="19257650117" fg:w="11092916"/><text x="28.6688%" y="143.50"></text></g><g><title>core::num::&lt;impl u64&gt;::leading_zeros (11,092,916 samples, 0.02%)</title><rect x="28.4188%" y="117" width="0.0164%" height="15" fill="rgb(250,229,37)" fg:x="19257650117" fg:w="11092916"/><text x="28.6688%" y="127.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::BitAnd&gt;::bitand (16,553,375 samples, 0.02%)</title><rect x="28.5122%" y="133" width="0.0244%" height="15" fill="rgb(206,174,23)" fg:x="19320907456" fg:w="16553375"/><text x="28.7622%" y="143.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitAnd&gt;::bitand (16,553,375 samples, 0.02%)</title><rect x="28.5122%" y="117" width="0.0244%" height="15" fill="rgb(211,33,43)" fg:x="19320907456" fg:w="16553375"/><text x="28.7622%" y="127.50"></text></g><g><title>arrayvec::arrayvec::ArrayVec&lt;T,_&gt;::push_unchecked (11,082,853 samples, 0.02%)</title><rect x="28.5366%" y="133" width="0.0164%" height="15" fill="rgb(245,58,50)" fg:x="19337460831" fg:w="11082853"/><text x="28.7866%" y="143.50"></text></g><g><title>arrayvec::arrayvec_impl::ArrayVecImpl::push_unchecked (11,082,853 samples, 0.02%)</title><rect x="28.5366%" y="117" width="0.0164%" height="15" fill="rgb(244,68,36)" fg:x="19337460831" fg:w="11082853"/><text x="28.7866%" y="127.50"></text></g><g><title>shiro::engine::common::chess_move::Move::with_target (11,072,977 samples, 0.02%)</title><rect x="28.5612%" y="133" width="0.0163%" height="15" fill="rgb(232,229,15)" fg:x="19354100802" fg:w="11072977"/><text x="28.8112%" y="143.50"></text></g><g><title>shiro::engine::common::chess_move::Move::set_target (11,072,977 samples, 0.02%)</title><rect x="28.5612%" y="117" width="0.0163%" height="15" fill="rgb(254,30,23)" fg:x="19354100802" fg:w="11072977"/><text x="28.8112%" y="127.50"></text></g><g><title>shiro::engine::common::chess_move::Move::set_target_checked (11,072,977 samples, 0.02%)</title><rect x="28.5612%" y="101" width="0.0163%" height="15" fill="rgb(235,160,14)" fg:x="19354100802" fg:w="11072977"/><text x="28.8112%" y="111.50"></text></g><g><title>modular_bitfield::private::proc::write_specifier (11,072,977 samples, 0.02%)</title><rect x="28.5612%" y="85" width="0.0163%" height="15" fill="rgb(212,155,44)" fg:x="19354100802" fg:w="11072977"/><text x="28.8112%" y="95.50"></text></g><g><title>shiro::engine::common::constants::rank_from_pos (33,276,302 samples, 0.05%)</title><rect x="28.5775%" y="133" width="0.0491%" height="15" fill="rgb(226,2,50)" fg:x="19365173779" fg:w="33276302"/><text x="28.8275%" y="143.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_all_moves (907,848,800 samples, 1.34%)</title><rect x="27.2951%" y="165" width="1.3397%" height="15" fill="rgb(234,177,6)" fg:x="18496157112" fg:w="907848800"/><text x="27.5451%" y="175.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_moves_pawn_pushes (135,262,879 samples, 0.20%)</title><rect x="28.4352%" y="149" width="0.1996%" height="15" fill="rgb(217,24,9)" fg:x="19268743033" fg:w="135262879"/><text x="28.6852%" y="159.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::BitAnd&gt;::bitand (66,736,052 samples, 0.10%)</title><rect x="29.0036%" y="149" width="0.0985%" height="15" fill="rgb(220,13,46)" fg:x="19653889192" fg:w="66736052"/><text x="29.2536%" y="159.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitAnd&gt;::bitand (66,736,052 samples, 0.10%)</title><rect x="29.0036%" y="133" width="0.0985%" height="15" fill="rgb(239,221,27)" fg:x="19653889192" fg:w="66736052"/><text x="29.2536%" y="143.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::BitOrAssign&gt;::bitor_assign (128,539,591 samples, 0.19%)</title><rect x="29.1102%" y="149" width="0.1897%" height="15" fill="rgb(222,198,25)" fg:x="19726154999" fg:w="128539591"/><text x="29.3602%" y="159.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitOrAssign&gt;::bitor_assign (128,539,591 samples, 0.19%)</title><rect x="29.1102%" y="133" width="0.1897%" height="15" fill="rgb(211,99,13)" fg:x="19726154999" fg:w="128539591"/><text x="29.3602%" y="143.50"></text></g><g><title>core::cmp::PartialEq::ne (239,058,841 samples, 0.35%)</title><rect x="29.3081%" y="149" width="0.3528%" height="15" fill="rgb(232,111,31)" fg:x="19860252505" fg:w="239058841"/><text x="29.5581%" y="159.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::cmp::PartialEq&lt;u64&gt;&gt;::eq (239,058,841 samples, 0.35%)</title><rect x="29.3081%" y="133" width="0.3528%" height="15" fill="rgb(245,82,37)" fg:x="19860252505" fg:w="239058841"/><text x="29.5581%" y="143.50"></text></g><g><title>shiro::engine::core::bitboard::Bitboard::leading_zeros (121,943,228 samples, 0.18%)</title><rect x="29.6609%" y="149" width="0.1800%" height="15" fill="rgb(227,149,46)" fg:x="20099311346" fg:w="121943228"/><text x="29.9109%" y="159.50"></text></g><g><title>core::num::&lt;impl u64&gt;::leading_zeros (121,943,228 samples, 0.18%)</title><rect x="29.6609%" y="133" width="0.1800%" height="15" fill="rgb(218,36,50)" fg:x="20099311346" fg:w="121943228"/><text x="29.9109%" y="143.50"></text></g><g><title>shiro::engine::core::bitboard::Bitboard::toggle (133,075,927 samples, 0.20%)</title><rect x="29.8408%" y="149" width="0.1964%" height="15" fill="rgb(226,80,48)" fg:x="20221254574" fg:w="133075927"/><text x="30.0908%" y="159.50"></text></g><g><title>shiro::engine::core::bitboard::Bitboard::unbounded_shl (28,641,361 samples, 0.04%)</title><rect x="30.0372%" y="149" width="0.0423%" height="15" fill="rgb(238,224,15)" fg:x="20354330501" fg:w="28641361"/><text x="30.2872%" y="159.50"></text></g><g><title>core::num::&lt;impl u64&gt;::unbounded_shl (28,641,361 samples, 0.04%)</title><rect x="30.0372%" y="133" width="0.0423%" height="15" fill="rgb(241,136,10)" fg:x="20354330501" fg:w="28641361"/><text x="30.2872%" y="143.50"></text></g><g><title>core::num::&lt;impl u64&gt;::unchecked_shl (28,641,361 samples, 0.04%)</title><rect x="30.0372%" y="117" width="0.0423%" height="15" fill="rgb(208,32,45)" fg:x="20354330501" fg:w="28641361"/><text x="30.2872%" y="127.50"></text></g><g><title>shiro::engine::move_gen::masks::pext_dg_lookup (143,747,275 samples, 0.21%)</title><rect x="30.0877%" y="149" width="0.2121%" height="15" fill="rgb(207,135,9)" fg:x="20388544903" fg:w="143747275"/><text x="30.3377%" y="159.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_seen_by_enemy (1,300,120,118 samples, 1.92%)</title><rect x="28.6348%" y="165" width="1.9186%" height="15" fill="rgb(206,86,44)" fg:x="19404005912" fg:w="1300120118"/><text x="28.8848%" y="175.50">s..</text></g><g><title>shiro::engine::move_gen::masks::pext_hv_lookup (171,833,852 samples, 0.25%)</title><rect x="30.2998%" y="149" width="0.2536%" height="15" fill="rgb(245,177,15)" fg:x="20532292178" fg:w="171833852"/><text x="30.5498%" y="159.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::BitAnd&gt;::bitand (27,833,945 samples, 0.04%)</title><rect x="32.8657%" y="133" width="0.0411%" height="15" fill="rgb(206,64,50)" fg:x="22271010324" fg:w="27833945"/><text x="33.1157%" y="143.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitAnd&gt;::bitand (27,833,945 samples, 0.04%)</title><rect x="32.8657%" y="117" width="0.0411%" height="15" fill="rgb(234,36,40)" fg:x="22271010324" fg:w="27833945"/><text x="33.1157%" y="127.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::BitOrAssign&gt;::bitor_assign (16,656,738 samples, 0.02%)</title><rect x="32.9068%" y="133" width="0.0246%" height="15" fill="rgb(213,64,8)" fg:x="22298844269" fg:w="16656738"/><text x="33.1568%" y="143.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitOrAssign&gt;::bitor_assign (16,656,738 samples, 0.02%)</title><rect x="32.9068%" y="117" width="0.0246%" height="15" fill="rgb(210,75,36)" fg:x="22298844269" fg:w="16656738"/><text x="33.1568%" y="127.50"></text></g><g><title>core::num::&lt;impl u64&gt;::count_ones (11,100,706 samples, 0.02%)</title><rect x="32.9313%" y="133" width="0.0164%" height="15" fill="rgb(229,88,21)" fg:x="22315501007" fg:w="11100706"/><text x="33.1813%" y="143.50"></text></g><g><title>shiro::engine::core::bitboard::Bitboard::leading_zeros (38,835,091 samples, 0.06%)</title><rect x="32.9477%" y="133" width="0.0573%" height="15" fill="rgb(252,204,47)" fg:x="22326601713" fg:w="38835091"/><text x="33.1977%" y="143.50"></text></g><g><title>core::num::&lt;impl u64&gt;::leading_zeros (38,835,091 samples, 0.06%)</title><rect x="32.9477%" y="117" width="0.0573%" height="15" fill="rgb(208,77,27)" fg:x="22326601713" fg:w="38835091"/><text x="33.1977%" y="127.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::new (1,666,871,892 samples, 2.46%)</title><rect x="30.5534%" y="165" width="2.4598%" height="15" fill="rgb(221,76,26)" fg:x="20704126030" fg:w="1666871892"/><text x="30.8034%" y="175.50">sh..</text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_check_and_pin_masks (188,846,582 samples, 0.28%)</title><rect x="32.7346%" y="149" width="0.2787%" height="15" fill="rgb(225,139,18)" fg:x="22182151340" fg:w="188846582"/><text x="32.9846%" y="159.50"></text></g><g><title>shiro::engine::core::Flags::ep_rank (16,650,562 samples, 0.02%)</title><rect x="39.1958%" y="149" width="0.0246%" height="15" fill="rgb(230,137,11)" fg:x="26560562390" fg:w="16650562"/><text x="39.4458%" y="159.50"></text></g><g><title>shiro::engine::core::Flags::ep_rank_or_err (16,650,562 samples, 0.02%)</title><rect x="39.1958%" y="133" width="0.0246%" height="15" fill="rgb(212,28,1)" fg:x="26560562390" fg:w="16650562"/><text x="39.4458%" y="143.50"></text></g><g><title>modular_bitfield::private::proc::read_specifier (16,650,562 samples, 0.02%)</title><rect x="39.1958%" y="117" width="0.0246%" height="15" fill="rgb(248,164,17)" fg:x="26560562390" fg:w="16650562"/><text x="39.4458%" y="127.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::BitAnd&gt;::bitand (122,316,150 samples, 0.18%)</title><rect x="39.7654%" y="117" width="0.1805%" height="15" fill="rgb(222,171,42)" fg:x="26946533071" fg:w="122316150"/><text x="40.0154%" y="127.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitAnd&gt;::bitand (122,316,150 samples, 0.18%)</title><rect x="39.7654%" y="101" width="0.1805%" height="15" fill="rgb(243,84,45)" fg:x="26946533071" fg:w="122316150"/><text x="40.0154%" y="111.50"></text></g><g><title>arrayvec::arrayvec::ArrayVec&lt;T,_&gt;::push_unchecked (55,468,330 samples, 0.08%)</title><rect x="39.9541%" y="117" width="0.0819%" height="15" fill="rgb(252,49,23)" fg:x="27074370796" fg:w="55468330"/><text x="40.2041%" y="127.50"></text></g><g><title>arrayvec::arrayvec_impl::ArrayVecImpl::push_unchecked (55,468,330 samples, 0.08%)</title><rect x="39.9541%" y="101" width="0.0819%" height="15" fill="rgb(215,19,7)" fg:x="27074370796" fg:w="55468330"/><text x="40.2041%" y="111.50"></text></g><g><title>core::ptr::write (16,629,614 samples, 0.02%)</title><rect x="40.0114%" y="85" width="0.0245%" height="15" fill="rgb(238,81,41)" fg:x="27113209512" fg:w="16629614"/><text x="40.2614%" y="95.50"></text></g><g><title>core::cmp::PartialEq::ne (72,165,076 samples, 0.11%)</title><rect x="40.0359%" y="117" width="0.1065%" height="15" fill="rgb(210,199,37)" fg:x="27129839126" fg:w="72165076"/><text x="40.2859%" y="127.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::cmp::PartialEq&lt;u64&gt;&gt;::eq (72,165,076 samples, 0.11%)</title><rect x="40.0359%" y="101" width="0.1065%" height="15" fill="rgb(244,192,49)" fg:x="27129839126" fg:w="72165076"/><text x="40.2859%" y="111.50"></text></g><g><title>shiro::engine::common::chess_move::Move::with_target (88,763,147 samples, 0.13%)</title><rect x="40.1424%" y="117" width="0.1310%" height="15" fill="rgb(226,211,11)" fg:x="27202004202" fg:w="88763147"/><text x="40.3924%" y="127.50"></text></g><g><title>shiro::engine::common::chess_move::Move::set_target (88,763,147 samples, 0.13%)</title><rect x="40.1424%" y="101" width="0.1310%" height="15" fill="rgb(236,162,54)" fg:x="27202004202" fg:w="88763147"/><text x="40.3924%" y="111.50"></text></g><g><title>shiro::engine::common::chess_move::Move::set_target_checked (88,763,147 samples, 0.13%)</title><rect x="40.1424%" y="85" width="0.1310%" height="15" fill="rgb(220,229,9)" fg:x="27202004202" fg:w="88763147"/><text x="40.3924%" y="95.50"></text></g><g><title>modular_bitfield::private::proc::write_specifier (88,763,147 samples, 0.13%)</title><rect x="40.1424%" y="69" width="0.1310%" height="15" fill="rgb(250,87,22)" fg:x="27202004202" fg:w="88763147"/><text x="40.3924%" y="79.50"></text></g><g><title>shiro::engine::core::bitboard::Bitboard::pop_leftmost (138,573,428 samples, 0.20%)</title><rect x="40.2816%" y="117" width="0.2045%" height="15" fill="rgb(239,43,17)" fg:x="27296319301" fg:w="138573428"/><text x="40.5316%" y="127.50"></text></g><g><title>core::num::&lt;impl u64&gt;::leading_zeros (11,065,144 samples, 0.02%)</title><rect x="40.4698%" y="101" width="0.0163%" height="15" fill="rgb(231,177,25)" fg:x="27423827585" fg:w="11065144"/><text x="40.7198%" y="111.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_moves_dg (655,095,645 samples, 0.97%)</title><rect x="39.5521%" y="133" width="0.9667%" height="15" fill="rgb(219,179,1)" fg:x="26801994959" fg:w="655095645"/><text x="39.8021%" y="143.50"></text></g><g><title>shiro::engine::move_gen::masks::pext_dg_lookup (16,650,291 samples, 0.02%)</title><rect x="40.4943%" y="117" width="0.0246%" height="15" fill="rgb(238,219,53)" fg:x="27440440313" fg:w="16650291"/><text x="40.7443%" y="127.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_moves_enpassant (11,056,432 samples, 0.02%)</title><rect x="40.5189%" y="133" width="0.0163%" height="15" fill="rgb(232,167,36)" fg:x="27457090604" fg:w="11056432"/><text x="40.7689%" y="143.50"></text></g><g><title>arrayvec::arrayvec::ArrayVec&lt;T,_&gt;::push_unchecked (1,063,159,585 samples, 1.57%)</title><rect x="41.2907%" y="117" width="1.5689%" height="15" fill="rgb(244,19,51)" fg:x="27980085999" fg:w="1063159585"/><text x="41.5407%" y="127.50"></text></g><g><title>arrayvec::arrayvec_impl::ArrayVecImpl::push_unchecked (1,063,159,585 samples, 1.57%)</title><rect x="41.2907%" y="101" width="1.5689%" height="15" fill="rgb(224,6,22)" fg:x="27980085999" fg:w="1063159585"/><text x="41.5407%" y="111.50"></text></g><g><title>core::ptr::write (668,042,444 samples, 0.99%)</title><rect x="41.8737%" y="85" width="0.9858%" height="15" fill="rgb(224,145,5)" fg:x="28375203140" fg:w="668042444"/><text x="42.1237%" y="95.50"></text></g><g><title>core::cmp::PartialEq::ne (922,879,408 samples, 1.36%)</title><rect x="42.8596%" y="117" width="1.3619%" height="15" fill="rgb(234,130,49)" fg:x="29043245584" fg:w="922879408"/><text x="43.1096%" y="127.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::cmp::PartialEq&lt;u64&gt;&gt;::eq (922,879,408 samples, 1.36%)</title><rect x="42.8596%" y="101" width="1.3619%" height="15" fill="rgb(254,6,2)" fg:x="29043245584" fg:w="922879408"/><text x="43.1096%" y="111.50"></text></g><g><title>shiro::engine::common::chess_move::Move::with_target (1,642,591,375 samples, 2.42%)</title><rect x="44.2215%" y="117" width="2.4240%" height="15" fill="rgb(208,96,46)" fg:x="29966124992" fg:w="1642591375"/><text x="44.4715%" y="127.50">sh..</text></g><g><title>shiro::engine::common::chess_move::Move::set_target (1,642,591,375 samples, 2.42%)</title><rect x="44.2215%" y="101" width="2.4240%" height="15" fill="rgb(239,3,39)" fg:x="29966124992" fg:w="1642591375"/><text x="44.4715%" y="111.50">sh..</text></g><g><title>shiro::engine::common::chess_move::Move::set_target_checked (1,642,591,375 samples, 2.42%)</title><rect x="44.2215%" y="85" width="2.4240%" height="15" fill="rgb(233,210,1)" fg:x="29966124992" fg:w="1642591375"/><text x="44.4715%" y="95.50">sh..</text></g><g><title>modular_bitfield::private::proc::write_specifier (1,642,591,375 samples, 2.42%)</title><rect x="44.2215%" y="69" width="2.4240%" height="15" fill="rgb(244,137,37)" fg:x="29966124992" fg:w="1642591375"/><text x="44.4715%" y="79.50">mo..</text></g><g><title>shiro::engine::core::bitboard::Bitboard::leading_zeros (166,666,413 samples, 0.25%)</title><rect x="46.6455%" y="117" width="0.2460%" height="15" fill="rgb(240,136,2)" fg:x="31608716367" fg:w="166666413"/><text x="46.8955%" y="127.50"></text></g><g><title>core::num::&lt;impl u64&gt;::leading_zeros (166,666,413 samples, 0.25%)</title><rect x="46.6455%" y="101" width="0.2460%" height="15" fill="rgb(239,18,37)" fg:x="31608716367" fg:w="166666413"/><text x="46.8955%" y="111.50"></text></g><g><title>shiro::engine::core::bitboard::Bitboard::pop_leftmost (3,562,089,011 samples, 5.26%)</title><rect x="46.8914%" y="117" width="5.2566%" height="15" fill="rgb(218,185,22)" fg:x="31775382780" fg:w="3562089011"/><text x="47.1414%" y="127.50">shiro:..</text></g><g><title>core::num::&lt;impl u64&gt;::leading_zeros (233,588,849 samples, 0.34%)</title><rect x="51.8034%" y="101" width="0.3447%" height="15" fill="rgb(225,218,4)" fg:x="35103882942" fg:w="233588849"/><text x="52.0534%" y="111.50"></text></g><g><title>shiro::engine::core::bitboard::Bitboard::toggle (11,090,011 samples, 0.02%)</title><rect x="52.1481%" y="117" width="0.0164%" height="15" fill="rgb(230,182,32)" fg:x="35337471791" fg:w="11090011"/><text x="52.3981%" y="127.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_moves_hv (8,030,680,755 samples, 11.85%)</title><rect x="40.5352%" y="133" width="11.8510%" height="15" fill="rgb(242,56,43)" fg:x="27468147036" fg:w="8030680755"/><text x="40.7852%" y="143.50">shiro::engine::mov..</text></g><g><title>shiro::engine::move_gen::masks::pext_hv_lookup (150,265,989 samples, 0.22%)</title><rect x="52.1644%" y="117" width="0.2217%" height="15" fill="rgb(233,99,24)" fg:x="35348561802" fg:w="150265989"/><text x="52.4144%" y="127.50"></text></g><g><title>arrayvec::arrayvec::ArrayVec&lt;T,_&gt;::push_unchecked (11,135,192 samples, 0.02%)</title><rect x="52.4190%" y="117" width="0.0164%" height="15" fill="rgb(234,209,42)" fg:x="35521077927" fg:w="11135192"/><text x="52.6690%" y="127.50"></text></g><g><title>arrayvec::arrayvec_impl::ArrayVecImpl::push_unchecked (11,135,192 samples, 0.02%)</title><rect x="52.4190%" y="101" width="0.0164%" height="15" fill="rgb(227,7,12)" fg:x="35521077927" fg:w="11135192"/><text x="52.6690%" y="111.50"></text></g><g><title>&lt;arrayvec::arrayvec::ArrayVec&lt;T,_&gt; as arrayvec::arrayvec_impl::ArrayVecImpl&gt;::set_len (11,135,192 samples, 0.02%)</title><rect x="52.4190%" y="85" width="0.0164%" height="15" fill="rgb(245,203,43)" fg:x="35521077927" fg:w="11135192"/><text x="52.6690%" y="95.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::cmp::PartialEq&lt;u64&gt;&gt;::eq (11,088,402 samples, 0.02%)</title><rect x="52.4354%" y="101" width="0.0164%" height="15" fill="rgb(238,205,33)" fg:x="35532213119" fg:w="11088402"/><text x="52.6854%" y="111.50"></text></g><g><title>core::cmp::PartialEq::ne (50,026,674 samples, 0.07%)</title><rect x="52.4354%" y="117" width="0.0738%" height="15" fill="rgb(231,56,7)" fg:x="35532213119" fg:w="50026674"/><text x="52.6854%" y="127.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::cmp::PartialEq&gt;::eq (38,938,272 samples, 0.06%)</title><rect x="52.4518%" y="101" width="0.0575%" height="15" fill="rgb(244,186,29)" fg:x="35543301521" fg:w="38938272"/><text x="52.7018%" y="111.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_moves_king_castle (88,976,891 samples, 0.13%)</title><rect x="52.3862%" y="133" width="0.1313%" height="15" fill="rgb(234,111,31)" fg:x="35498827791" fg:w="88976891"/><text x="52.6362%" y="143.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::BitAnd&gt;::bitand (11,089,190 samples, 0.02%)</title><rect x="52.8128%" y="117" width="0.0164%" height="15" fill="rgb(241,149,10)" fg:x="35787890026" fg:w="11089190"/><text x="53.0628%" y="127.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitAnd&gt;::bitand (11,089,190 samples, 0.02%)</title><rect x="52.8128%" y="101" width="0.0164%" height="15" fill="rgb(249,206,44)" fg:x="35787890026" fg:w="11089190"/><text x="53.0628%" y="111.50"></text></g><g><title>arrayvec::arrayvec::ArrayVec&lt;T,_&gt;::push_unchecked (16,638,580 samples, 0.02%)</title><rect x="52.8291%" y="117" width="0.0246%" height="15" fill="rgb(251,153,30)" fg:x="35798979216" fg:w="16638580"/><text x="53.0791%" y="127.50"></text></g><g><title>arrayvec::arrayvec_impl::ArrayVecImpl::push_unchecked (16,638,580 samples, 0.02%)</title><rect x="52.8291%" y="101" width="0.0246%" height="15" fill="rgb(239,152,38)" fg:x="35798979216" fg:w="16638580"/><text x="53.0791%" y="111.50"></text></g><g><title>core::cmp::PartialEq::ne (127,743,723 samples, 0.19%)</title><rect x="52.8537%" y="117" width="0.1885%" height="15" fill="rgb(249,139,47)" fg:x="35815617796" fg:w="127743723"/><text x="53.1037%" y="127.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::cmp::PartialEq&lt;u64&gt;&gt;::eq (127,743,723 samples, 0.19%)</title><rect x="52.8537%" y="101" width="0.1885%" height="15" fill="rgb(244,64,35)" fg:x="35815617796" fg:w="127743723"/><text x="53.1037%" y="111.50"></text></g><g><title>shiro::engine::common::chess_move::Move::with_target (356,613,993 samples, 0.53%)</title><rect x="53.0422%" y="117" width="0.5263%" height="15" fill="rgb(216,46,15)" fg:x="35943361519" fg:w="356613993"/><text x="53.2922%" y="127.50"></text></g><g><title>shiro::engine::common::chess_move::Move::set_target (356,613,993 samples, 0.53%)</title><rect x="53.0422%" y="101" width="0.5263%" height="15" fill="rgb(250,74,19)" fg:x="35943361519" fg:w="356613993"/><text x="53.2922%" y="111.50"></text></g><g><title>shiro::engine::common::chess_move::Move::set_target_checked (356,613,993 samples, 0.53%)</title><rect x="53.0422%" y="85" width="0.5263%" height="15" fill="rgb(249,42,33)" fg:x="35943361519" fg:w="356613993"/><text x="53.2922%" y="95.50"></text></g><g><title>modular_bitfield::private::proc::write_specifier (356,613,993 samples, 0.53%)</title><rect x="53.0422%" y="69" width="0.5263%" height="15" fill="rgb(242,149,17)" fg:x="35943361519" fg:w="356613993"/><text x="53.2922%" y="79.50"></text></g><g><title>shiro::engine::core::bitboard::Bitboard::pop_leftmost (244,483,881 samples, 0.36%)</title><rect x="53.5684%" y="117" width="0.3608%" height="15" fill="rgb(244,29,21)" fg:x="36299975512" fg:w="244483881"/><text x="53.8184%" y="127.50"></text></g><g><title>core::num::&lt;impl u64&gt;::leading_zeros (161,154,174 samples, 0.24%)</title><rect x="53.6914%" y="101" width="0.2378%" height="15" fill="rgb(220,130,37)" fg:x="36383305219" fg:w="161154174"/><text x="53.9414%" y="111.50"></text></g><g><title>core::cmp::PartialEq::ne (167,000,875 samples, 0.25%)</title><rect x="53.9701%" y="101" width="0.2464%" height="15" fill="rgb(211,67,2)" fg:x="36572176758" fg:w="167000875"/><text x="54.2201%" y="111.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::cmp::PartialEq&lt;u64&gt;&gt;::eq (167,000,875 samples, 0.25%)</title><rect x="53.9701%" y="85" width="0.2464%" height="15" fill="rgb(235,68,52)" fg:x="36572176758" fg:w="167000875"/><text x="54.2201%" y="95.50"></text></g><g><title>shiro::engine::core::bitboard::Bitboard::leading_zeros (27,713,641 samples, 0.04%)</title><rect x="54.2166%" y="101" width="0.0409%" height="15" fill="rgb(246,142,3)" fg:x="36739177633" fg:w="27713641"/><text x="54.4666%" y="111.50"></text></g><g><title>core::num::&lt;impl u64&gt;::leading_zeros (27,713,641 samples, 0.04%)</title><rect x="54.2166%" y="85" width="0.0409%" height="15" fill="rgb(241,25,7)" fg:x="36739177633" fg:w="27713641"/><text x="54.4666%" y="95.50"></text></g><g><title>shiro::engine::core::bitboard::Bitboard::toggle (16,653,769 samples, 0.02%)</title><rect x="54.2575%" y="101" width="0.0246%" height="15" fill="rgb(242,119,39)" fg:x="36766891274" fg:w="16653769"/><text x="54.5075%" y="111.50"></text></g><g><title>shiro::engine::move_gen::masks::pext_dg_lookup (16,633,556 samples, 0.02%)</title><rect x="54.2903%" y="101" width="0.0245%" height="15" fill="rgb(241,98,45)" fg:x="36789119811" fg:w="16633556"/><text x="54.5403%" y="111.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_moves_king_normal (1,245,647,336 samples, 1.84%)</title><rect x="52.5175%" y="133" width="1.8382%" height="15" fill="rgb(254,28,30)" fg:x="35587804682" fg:w="1245647336"/><text x="52.7675%" y="143.50">s..</text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_seen_by_enemy (288,992,625 samples, 0.43%)</title><rect x="53.9292%" y="117" width="0.4265%" height="15" fill="rgb(241,142,54)" fg:x="36544459393" fg:w="288992625"/><text x="54.1792%" y="127.50"></text></g><g><title>shiro::engine::move_gen::masks::pext_hv_lookup (27,698,651 samples, 0.04%)</title><rect x="54.3148%" y="101" width="0.0409%" height="15" fill="rgb(222,85,15)" fg:x="36805753367" fg:w="27698651"/><text x="54.5648%" y="111.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::BitAnd&gt;::bitand (39,027,089 samples, 0.06%)</title><rect x="54.6098%" y="117" width="0.0576%" height="15" fill="rgb(210,85,47)" fg:x="37005664775" fg:w="39027089"/><text x="54.8598%" y="127.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitAnd&gt;::bitand (39,027,089 samples, 0.06%)</title><rect x="54.6098%" y="101" width="0.0576%" height="15" fill="rgb(224,206,25)" fg:x="37005664775" fg:w="39027089"/><text x="54.8598%" y="111.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::BitOr&gt;::bitor (78,074,337 samples, 0.12%)</title><rect x="54.6674%" y="117" width="0.1152%" height="15" fill="rgb(243,201,19)" fg:x="37044691864" fg:w="78074337"/><text x="54.9174%" y="127.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitOr&gt;::bitor (78,074,337 samples, 0.12%)</title><rect x="54.6674%" y="101" width="0.1152%" height="15" fill="rgb(236,59,4)" fg:x="37044691864" fg:w="78074337"/><text x="54.9174%" y="111.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::Not&gt;::not (22,156,123 samples, 0.03%)</title><rect x="54.7827%" y="117" width="0.0327%" height="15" fill="rgb(254,179,45)" fg:x="37122766201" fg:w="22156123"/><text x="55.0327%" y="127.50"></text></g><g><title>&lt;u64 as core::ops::bit::Not&gt;::not (22,156,123 samples, 0.03%)</title><rect x="54.7827%" y="101" width="0.0327%" height="15" fill="rgb(226,14,10)" fg:x="37122766201" fg:w="22156123"/><text x="55.0327%" y="111.50"></text></g><g><title>arrayvec::arrayvec::ArrayVec&lt;T,_&gt;::push_unchecked (33,264,497 samples, 0.05%)</title><rect x="54.8153%" y="117" width="0.0491%" height="15" fill="rgb(244,27,41)" fg:x="37144922324" fg:w="33264497"/><text x="55.0653%" y="127.50"></text></g><g><title>arrayvec::arrayvec_impl::ArrayVecImpl::push_unchecked (33,264,497 samples, 0.05%)</title><rect x="54.8153%" y="101" width="0.0491%" height="15" fill="rgb(235,35,32)" fg:x="37144922324" fg:w="33264497"/><text x="55.0653%" y="111.50"></text></g><g><title>core::cmp::PartialEq::ne (61,018,264 samples, 0.09%)</title><rect x="54.8644%" y="117" width="0.0900%" height="15" fill="rgb(218,68,31)" fg:x="37178186821" fg:w="61018264"/><text x="55.1144%" y="127.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::cmp::PartialEq&lt;u64&gt;&gt;::eq (61,018,264 samples, 0.09%)</title><rect x="54.8644%" y="101" width="0.0900%" height="15" fill="rgb(207,120,37)" fg:x="37178186821" fg:w="61018264"/><text x="55.1144%" y="111.50"></text></g><g><title>shiro::engine::common::chess_move::Move::with_target (66,549,473 samples, 0.10%)</title><rect x="54.9545%" y="117" width="0.0982%" height="15" fill="rgb(227,98,0)" fg:x="37239205085" fg:w="66549473"/><text x="55.2045%" y="127.50"></text></g><g><title>shiro::engine::common::chess_move::Move::set_target (66,549,473 samples, 0.10%)</title><rect x="54.9545%" y="101" width="0.0982%" height="15" fill="rgb(207,7,3)" fg:x="37239205085" fg:w="66549473"/><text x="55.2045%" y="111.50"></text></g><g><title>shiro::engine::common::chess_move::Move::set_target_checked (66,549,473 samples, 0.10%)</title><rect x="54.9545%" y="85" width="0.0982%" height="15" fill="rgb(206,98,19)" fg:x="37239205085" fg:w="66549473"/><text x="55.2045%" y="95.50"></text></g><g><title>modular_bitfield::private::proc::write_specifier (66,549,473 samples, 0.10%)</title><rect x="54.9545%" y="69" width="0.0982%" height="15" fill="rgb(217,5,26)" fg:x="37239205085" fg:w="66549473"/><text x="55.2045%" y="79.50"></text></g><g><title>shiro::engine::core::bitboard::Bitboard::leading_zeros (16,651,002 samples, 0.02%)</title><rect x="55.0527%" y="117" width="0.0246%" height="15" fill="rgb(235,190,38)" fg:x="37305754558" fg:w="16651002"/><text x="55.3027%" y="127.50"></text></g><g><title>core::num::&lt;impl u64&gt;::leading_zeros (16,651,002 samples, 0.02%)</title><rect x="55.0527%" y="101" width="0.0246%" height="15" fill="rgb(247,86,24)" fg:x="37305754558" fg:w="16651002"/><text x="55.3027%" y="111.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_moves_knight (527,770,157 samples, 0.78%)</title><rect x="54.3557%" y="133" width="0.7788%" height="15" fill="rgb(205,101,16)" fg:x="36833452018" fg:w="527770157"/><text x="54.6057%" y="143.50"></text></g><g><title>shiro::engine::core::bitboard::Bitboard::pop_leftmost (38,816,615 samples, 0.06%)</title><rect x="55.0773%" y="117" width="0.0573%" height="15" fill="rgb(246,168,33)" fg:x="37322405560" fg:w="38816615"/><text x="55.3273%" y="127.50"></text></g><g><title>core::num::&lt;impl u64&gt;::leading_zeros (16,636,375 samples, 0.02%)</title><rect x="55.1100%" y="101" width="0.0246%" height="15" fill="rgb(231,114,1)" fg:x="37344585800" fg:w="16636375"/><text x="55.3600%" y="111.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_moves_pawn_captures (33,301,515 samples, 0.05%)</title><rect x="55.1345%" y="133" width="0.0491%" height="15" fill="rgb(207,184,53)" fg:x="37361222175" fg:w="33301515"/><text x="55.3845%" y="143.50"></text></g><g><title>arrayvec::arrayvec::ArrayVec&lt;T,_&gt;::push_unchecked (15,316,396 samples, 0.02%)</title><rect x="55.2000%" y="117" width="0.0226%" height="15" fill="rgb(224,95,51)" fg:x="37405583042" fg:w="15316396"/><text x="55.4500%" y="127.50"></text></g><g><title>arrayvec::arrayvec_impl::ArrayVecImpl::push_unchecked (15,316,396 samples, 0.02%)</title><rect x="55.2000%" y="101" width="0.0226%" height="15" fill="rgb(212,188,45)" fg:x="37405583042" fg:w="15316396"/><text x="55.4500%" y="111.50"></text></g><g><title>&lt;arrayvec::arrayvec::ArrayVec&lt;T,_&gt; as arrayvec::arrayvec_impl::ArrayVecImpl&gt;::len (15,316,396 samples, 0.02%)</title><rect x="55.2000%" y="85" width="0.0226%" height="15" fill="rgb(223,154,38)" fg:x="37405583042" fg:w="15316396"/><text x="55.4500%" y="95.50"></text></g><g><title>arrayvec::arrayvec::ArrayVec&lt;T,_&gt;::len (15,316,396 samples, 0.02%)</title><rect x="55.2000%" y="69" width="0.0226%" height="15" fill="rgb(251,22,52)" fg:x="37405583042" fg:w="15316396"/><text x="55.4500%" y="79.50"></text></g><g><title>core::cmp::PartialEq::ne (16,582,376 samples, 0.02%)</title><rect x="55.2226%" y="117" width="0.0245%" height="15" fill="rgb(229,209,22)" fg:x="37420899438" fg:w="16582376"/><text x="55.4726%" y="127.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::cmp::PartialEq&lt;u64&gt;&gt;::eq (16,582,376 samples, 0.02%)</title><rect x="55.2226%" y="101" width="0.0245%" height="15" fill="rgb(234,138,34)" fg:x="37420899438" fg:w="16582376"/><text x="55.4726%" y="111.50"></text></g><g><title>shiro::engine::common::chess_move::Move::with_target (22,123,736 samples, 0.03%)</title><rect x="55.2471%" y="117" width="0.0326%" height="15" fill="rgb(212,95,11)" fg:x="37437481814" fg:w="22123736"/><text x="55.4971%" y="127.50"></text></g><g><title>shiro::engine::common::chess_move::Move::set_target (22,123,736 samples, 0.03%)</title><rect x="55.2471%" y="101" width="0.0326%" height="15" fill="rgb(240,179,47)" fg:x="37437481814" fg:w="22123736"/><text x="55.4971%" y="111.50"></text></g><g><title>shiro::engine::common::chess_move::Move::set_target_checked (22,123,736 samples, 0.03%)</title><rect x="55.2471%" y="85" width="0.0326%" height="15" fill="rgb(240,163,11)" fg:x="37437481814" fg:w="22123736"/><text x="55.4971%" y="95.50"></text></g><g><title>modular_bitfield::private::proc::write_specifier (22,123,736 samples, 0.03%)</title><rect x="55.2471%" y="69" width="0.0326%" height="15" fill="rgb(236,37,12)" fg:x="37437481814" fg:w="22123736"/><text x="55.4971%" y="79.50"></text></g><g><title>shiro::engine::move_gen::gen_moves (15,121,695,550 samples, 22.32%)</title><rect x="33.0132%" y="165" width="22.3153%" height="15" fill="rgb(232,164,16)" fg:x="22370997922" fg:w="15121695550"/><text x="33.2632%" y="175.50">shiro::engine::move_gen::gen_moves</text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_all_moves (10,915,480,520 samples, 16.11%)</title><rect x="39.2204%" y="149" width="16.1081%" height="15" fill="rgb(244,205,15)" fg:x="26577212952" fg:w="10915480520"/><text x="39.4704%" y="159.50">shiro::engine::move_gen::..</text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_moves_pawn_pushes (98,169,782 samples, 0.14%)</title><rect x="55.1837%" y="133" width="0.1449%" height="15" fill="rgb(223,117,47)" fg:x="37394523690" fg:w="98169782"/><text x="55.4337%" y="143.50"></text></g><g><title>shiro::engine::core::bitboard::Bitboard::pop_leftmost (27,558,377 samples, 0.04%)</title><rect x="55.2879%" y="117" width="0.0407%" height="15" fill="rgb(244,107,35)" fg:x="37465135095" fg:w="27558377"/><text x="55.5379%" y="127.50"></text></g><g><title>&lt;shiro::engine::core::BoardState as core::clone::Clone&gt;::clone (1,748,449,766 samples, 2.58%)</title><rect x="57.9252%" y="149" width="2.5802%" height="15" fill="rgb(205,140,8)" fg:x="39252295548" fg:w="1748449766"/><text x="58.1752%" y="159.50">&lt;s..</text></g><g><title>[libc.so.6] (1,748,449,766 samples, 2.58%)</title><rect x="57.9252%" y="133" width="2.5802%" height="15" fill="rgb(228,84,46)" fg:x="39252295548" fg:w="1748449766"/><text x="58.1752%" y="143.50">[l..</text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::BitAndAssign&gt;::bitand_assign (383,569,435 samples, 0.57%)</title><rect x="60.5136%" y="149" width="0.5660%" height="15" fill="rgb(254,188,9)" fg:x="41006292794" fg:w="383569435"/><text x="60.7636%" y="159.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitAndAssign&gt;::bitand_assign (383,569,435 samples, 0.57%)</title><rect x="60.5136%" y="133" width="0.5660%" height="15" fill="rgb(206,112,54)" fg:x="41006292794" fg:w="383569435"/><text x="60.7636%" y="143.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::BitOrAssign&gt;::bitor_assign (6,290,173,863 samples, 9.28%)</title><rect x="61.0797%" y="149" width="9.2825%" height="15" fill="rgb(216,84,49)" fg:x="41389862229" fg:w="6290173863"/><text x="61.3297%" y="159.50">&lt;shiro::engin..</text></g><g><title>&lt;u64 as core::ops::bit::BitOrAssign&gt;::bitor_assign (6,290,173,863 samples, 9.28%)</title><rect x="61.0797%" y="133" width="9.2825%" height="15" fill="rgb(214,194,35)" fg:x="41389862229" fg:w="6290173863"/><text x="61.3297%" y="143.50">&lt;u64 as core:..</text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::Not&gt;::not (27,738,768 samples, 0.04%)</title><rect x="70.3622%" y="149" width="0.0409%" height="15" fill="rgb(249,28,3)" fg:x="47680036092" fg:w="27738768"/><text x="70.6122%" y="159.50"></text></g><g><title>&lt;u64 as core::ops::bit::Not&gt;::not (27,738,768 samples, 0.04%)</title><rect x="70.3622%" y="133" width="0.0409%" height="15" fill="rgb(222,56,52)" fg:x="47680036092" fg:w="27738768"/><text x="70.6122%" y="143.50"></text></g><g><title>[libc.so.6] (6,391,536,296 samples, 9.43%)</title><rect x="70.4031%" y="149" width="9.4321%" height="15" fill="rgb(245,217,50)" fg:x="47707774860" fg:w="6391536296"/><text x="70.6531%" y="159.50">[libc.so.6]</text></g><g><title>shiro::engine::common::chess_move::Move::promo (49,914,342 samples, 0.07%)</title><rect x="79.8434%" y="149" width="0.0737%" height="15" fill="rgb(213,201,24)" fg:x="54104856562" fg:w="49914342"/><text x="80.0934%" y="159.50"></text></g><g><title>shiro::engine::common::chess_move::Move::promo_or_err (49,914,342 samples, 0.07%)</title><rect x="79.8434%" y="133" width="0.0737%" height="15" fill="rgb(248,116,28)" fg:x="54104856562" fg:w="49914342"/><text x="80.0934%" y="143.50"></text></g><g><title>modular_bitfield::private::proc::read_specifier (49,914,342 samples, 0.07%)</title><rect x="79.8434%" y="117" width="0.0737%" height="15" fill="rgb(219,72,43)" fg:x="54104856562" fg:w="49914342"/><text x="80.0934%" y="127.50"></text></g><g><title>shiro::engine::common::chess_move::Move::start (44,484,664 samples, 0.07%)</title><rect x="79.9171%" y="149" width="0.0656%" height="15" fill="rgb(209,138,14)" fg:x="54154770904" fg:w="44484664"/><text x="80.1671%" y="159.50"></text></g><g><title>shiro::engine::common::chess_move::Move::start_or_err (44,484,664 samples, 0.07%)</title><rect x="79.9171%" y="133" width="0.0656%" height="15" fill="rgb(222,18,33)" fg:x="54154770904" fg:w="44484664"/><text x="80.1671%" y="143.50"></text></g><g><title>modular_bitfield::private::proc::read_specifier (44,484,664 samples, 0.07%)</title><rect x="79.9171%" y="117" width="0.0656%" height="15" fill="rgb(213,199,7)" fg:x="54154770904" fg:w="44484664"/><text x="80.1671%" y="127.50"></text></g><g><title>&lt;modular_bitfield::private::push_pop::PushBuffer&lt;u8&gt; as modular_bitfield::private::traits::PushBits&gt;::push_bits (44,484,664 samples, 0.07%)</title><rect x="79.9171%" y="101" width="0.0656%" height="15" fill="rgb(250,110,10)" fg:x="54154770904" fg:w="44484664"/><text x="80.1671%" y="111.50"></text></g><g><title>shiro::engine::core::BoardState::get_color_bb_mut (22,281,187 samples, 0.03%)</title><rect x="79.9827%" y="149" width="0.0329%" height="15" fill="rgb(248,123,6)" fg:x="54199255568" fg:w="22281187"/><text x="80.2327%" y="159.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::expect (11,098,985 samples, 0.02%)</title><rect x="80.0402%" y="117" width="0.0164%" height="15" fill="rgb(206,91,31)" fg:x="54238224633" fg:w="11098985"/><text x="80.2902%" y="127.50"></text></g><g><title>shiro::engine::core::BoardState::get_peice_bb_mut (38,900,001 samples, 0.06%)</title><rect x="80.0156%" y="149" width="0.0574%" height="15" fill="rgb(211,154,13)" fg:x="54221536755" fg:w="38900001"/><text x="80.2656%" y="159.50"></text></g><g><title>shiro::engine::core::Piece::ptype (22,212,123 samples, 0.03%)</title><rect x="80.0402%" y="133" width="0.0328%" height="15" fill="rgb(225,148,7)" fg:x="54238224633" fg:w="22212123"/><text x="80.2902%" y="143.50"></text></g><g><title>shiro::engine::core::Piece::ptype_or_err (11,113,138 samples, 0.02%)</title><rect x="80.0566%" y="117" width="0.0164%" height="15" fill="rgb(220,160,43)" fg:x="54249323618" fg:w="11113138"/><text x="80.3066%" y="127.50"></text></g><g><title>shiro::engine::core::Flags::set_ep_rank (112,715,900 samples, 0.17%)</title><rect x="80.0730%" y="149" width="0.1663%" height="15" fill="rgb(213,52,39)" fg:x="54260436756" fg:w="112715900"/><text x="80.3230%" y="159.50"></text></g><g><title>shiro::engine::core::Flags::set_ep_rank_checked (112,715,900 samples, 0.17%)</title><rect x="80.0730%" y="133" width="0.1663%" height="15" fill="rgb(243,137,7)" fg:x="54260436756" fg:w="112715900"/><text x="80.3230%" y="143.50"></text></g><g><title>modular_bitfield::private::proc::write_specifier (112,715,900 samples, 0.17%)</title><rect x="80.0730%" y="117" width="0.1663%" height="15" fill="rgb(230,79,13)" fg:x="54260436756" fg:w="112715900"/><text x="80.3230%" y="127.50"></text></g><g><title>shiro::engine::core::Flags::set_turn (11,956,876,937 samples, 17.64%)</title><rect x="80.2393%" y="149" width="17.6450%" height="15" fill="rgb(247,105,23)" fg:x="54373152656" fg:w="11956876937"/><text x="80.4893%" y="159.50">shiro::engine::core::Flags:..</text></g><g><title>shiro::engine::core::Flags::set_turn_checked (11,956,876,937 samples, 17.64%)</title><rect x="80.2393%" y="133" width="17.6450%" height="15" fill="rgb(223,179,41)" fg:x="54373152656" fg:w="11956876937"/><text x="80.4893%" y="143.50">shiro::engine::core::Flags:..</text></g><g><title>modular_bitfield::private::proc::write_specifier (11,956,876,937 samples, 17.64%)</title><rect x="80.2393%" y="117" width="17.6450%" height="15" fill="rgb(218,9,34)" fg:x="54373152656" fg:w="11956876937"/><text x="80.4893%" y="127.50">modular_bitfield::private::..</text></g><g><title>shiro::engine::core::Flags::turn (72,214,830 samples, 0.11%)</title><rect x="97.8843%" y="149" width="0.1066%" height="15" fill="rgb(222,106,8)" fg:x="66330029593" fg:w="72214830"/><text x="98.1343%" y="159.50"></text></g><g><title>shiro::engine::core::Flags::turn_or_err (72,214,830 samples, 0.11%)</title><rect x="97.8843%" y="133" width="0.1066%" height="15" fill="rgb(211,220,0)" fg:x="66330029593" fg:w="72214830"/><text x="98.1343%" y="143.50"></text></g><g><title>modular_bitfield::private::proc::read_specifier (66,697,621 samples, 0.10%)</title><rect x="97.8924%" y="117" width="0.0984%" height="15" fill="rgb(229,52,16)" fg:x="66335546802" fg:w="66697621"/><text x="98.1424%" y="127.50"></text></g><g><title>&lt;modular_bitfield::private::push_pop::PushBuffer&lt;u8&gt; as modular_bitfield::private::traits::PushBits&gt;::push_bits (66,697,621 samples, 0.10%)</title><rect x="97.8924%" y="101" width="0.0984%" height="15" fill="rgb(212,155,18)" fg:x="66335546802" fg:w="66697621"/><text x="98.1424%" y="111.50"></text></g><g><title>shiro::engine::perft::make_move (28,948,447,498 samples, 42.72%)</title><rect x="55.3286%" y="165" width="42.7197%" height="15" fill="rgb(242,21,14)" fg:x="37492693472" fg:w="28948447498"/><text x="55.5786%" y="175.50">shiro::engine::perft::make_move</text></g><g><title>shiro::engine::core::Piece::ptype (38,896,547 samples, 0.06%)</title><rect x="97.9908%" y="149" width="0.0574%" height="15" fill="rgb(222,19,48)" fg:x="66402244423" fg:w="38896547"/><text x="98.2408%" y="159.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::expect (38,896,547 samples, 0.06%)</title><rect x="97.9908%" y="133" width="0.0574%" height="15" fill="rgb(232,45,27)" fg:x="66402244423" fg:w="38896547"/><text x="98.2408%" y="143.50"></text></g><g><title>&lt;arrayvec::arrayvec::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next (266,745,162 samples, 0.39%)</title><rect x="98.9668%" y="149" width="0.3936%" height="15" fill="rgb(249,103,42)" fg:x="67063623332" fg:w="266745162"/><text x="99.2168%" y="159.50"></text></g><g><title>arrayvec::arrayvec::ArrayVec&lt;T,_&gt;::len (38,839,573 samples, 0.06%)</title><rect x="99.3032%" y="133" width="0.0573%" height="15" fill="rgb(246,81,33)" fg:x="67291528921" fg:w="38839573"/><text x="99.5532%" y="143.50"></text></g><g><title>[libc.so.6] (388,909,265 samples, 0.57%)</title><rect x="99.3605%" y="149" width="0.5739%" height="15" fill="rgb(252,33,42)" fg:x="67330368494" fg:w="388909265"/><text x="99.6105%" y="159.50"></text></g><g><title>all (67,763,725,675 samples, 100%)</title><rect x="0.0000%" y="197" width="100.0000%" height="15" fill="rgb(209,212,41)" fg:x="0" fg:w="67763725675"/><text x="0.2500%" y="207.50"></text></g><g><title>game (67,763,725,675 samples, 100.00%)</title><rect x="0.0000%" y="181" width="100.0000%" height="15" fill="rgb(207,154,6)" fg:x="0" fg:w="67763725675"/><text x="0.2500%" y="191.50">game</text></g><g><title>shiro::engine::perft::perft_simple (1,322,584,705 samples, 1.95%)</title><rect x="98.0482%" y="165" width="1.9518%" height="15" fill="rgb(223,64,47)" fg:x="66441140970" fg:w="1322584705"/><text x="98.2982%" y="175.50">s..</text></g><g><title>core::ptr::drop_in_place&lt;arrayvec::arrayvec::ArrayVec&lt;shiro::engine::common::chess_move::Move,256_usize&gt;&gt; (44,447,916 samples, 0.07%)</title><rect x="99.9344%" y="149" width="0.0656%" height="15" fill="rgb(211,161,38)" fg:x="67719277759" fg:w="44447916"/><text x="100.1844%" y="159.50"></text></g><g><title>&lt;arrayvec::arrayvec::ArrayVec&lt;T,_&gt; as core::ops::drop::Drop&gt;::drop (44,447,916 samples, 0.07%)</title><rect x="99.9344%" y="133" width="0.0656%" height="15" fill="rgb(219,138,40)" fg:x="67719277759" fg:w="44447916"/><text x="100.1844%" y="143.50"></text></g><g><title>arrayvec::arrayvec::ArrayVec&lt;T,_&gt;::clear (44,447,916 samples, 0.07%)</title><rect x="99.9344%" y="117" width="0.0656%" height="15" fill="rgb(241,228,46)" fg:x="67719277759" fg:w="44447916"/><text x="100.1844%" y="127.50"></text></g><g><title>arrayvec::arrayvec_impl::ArrayVecImpl::clear (44,447,916 samples, 0.07%)</title><rect x="99.9344%" y="101" width="0.0656%" height="15" fill="rgb(223,209,38)" fg:x="67719277759" fg:w="44447916"/><text x="100.1844%" y="111.50"></text></g><g><title>arrayvec::arrayvec_impl::ArrayVecImpl::truncate (44,447,916 samples, 0.07%)</title><rect x="99.9344%" y="85" width="0.0656%" height="15" fill="rgb(236,164,45)" fg:x="67719277759" fg:w="44447916"/><text x="100.1844%" y="95.50"></text></g></svg></svg>