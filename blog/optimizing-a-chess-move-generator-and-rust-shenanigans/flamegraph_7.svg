<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="230" onload="init(evt)" viewBox="0 0 1200 230" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="230" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="213.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="213.00"> </text><svg id="frames" x="10" width="1180" total_samples="41704389203"><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::BitAnd&gt;::bitand (5,490,913 samples, 0.01%)</title><rect x="0.0344%" y="85" width="0.0132%" height="15" fill="rgb(227,0,7)" fg:x="14356327" fg:w="5490913"/><text x="0.2844%" y="95.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitAnd&gt;::bitand (5,490,913 samples, 0.01%)</title><rect x="0.0344%" y="69" width="0.0132%" height="15" fill="rgb(217,0,24)" fg:x="14356327" fg:w="5490913"/><text x="0.2844%" y="79.50"></text></g><g><title>shiro::engine::core::bitboard::Bitboard::pop_rightmost (11,017,347 samples, 0.03%)</title><rect x="0.0476%" y="85" width="0.0264%" height="15" fill="rgb(221,193,54)" fg:x="19847242" fg:w="11017347"/><text x="0.2976%" y="95.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::add_move (5,495,795 samples, 0.01%)</title><rect x="0.0740%" y="85" width="0.0132%" height="15" fill="rgb(248,212,6)" fg:x="30864589" fg:w="5495795"/><text x="0.3240%" y="95.50"></text></g><g><title>shiro::engine::common::movelist::MoveList::emplace_bytes (5,495,795 samples, 0.01%)</title><rect x="0.0740%" y="69" width="0.0132%" height="15" fill="rgb(208,68,35)" fg:x="30864589" fg:w="5495795"/><text x="0.3240%" y="79.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_moves_dg (57,632,382 samples, 0.14%)</title><rect x="0.0001%" y="101" width="0.1382%" height="15" fill="rgb(232,128,0)" fg:x="28909" fg:w="57632382"/><text x="0.2501%" y="111.50"></text></g><g><title>shiro::engine::move_gen::masks::pext_dg_lookup (21,300,907 samples, 0.05%)</title><rect x="0.0872%" y="85" width="0.0511%" height="15" fill="rgb(207,160,47)" fg:x="36360384" fg:w="21300907"/><text x="0.3372%" y="95.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (5,728,546 samples, 0.01%)</title><rect x="0.1245%" y="69" width="0.0137%" height="15" fill="rgb(228,23,34)" fg:x="51932745" fg:w="5728546"/><text x="0.3745%" y="79.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (5,728,546 samples, 0.01%)</title><rect x="0.1245%" y="53" width="0.0137%" height="15" fill="rgb(218,30,26)" fg:x="51932745" fg:w="5728546"/><text x="0.3745%" y="63.50"></text></g><g><title>core::slice::index::get_noubcheck (5,728,546 samples, 0.01%)</title><rect x="0.1245%" y="37" width="0.0137%" height="15" fill="rgb(220,122,19)" fg:x="51932745" fg:w="5728546"/><text x="0.3745%" y="47.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_moves_enpassant (5,497,429 samples, 0.01%)</title><rect x="0.1383%" y="101" width="0.0132%" height="15" fill="rgb(250,228,42)" fg:x="57661291" fg:w="5497429"/><text x="0.3883%" y="111.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::BitAnd&gt;::bitand (5,497,429 samples, 0.01%)</title><rect x="0.1383%" y="85" width="0.0132%" height="15" fill="rgb(240,193,28)" fg:x="57661291" fg:w="5497429"/><text x="0.3883%" y="95.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitAnd&gt;::bitand (5,497,429 samples, 0.01%)</title><rect x="0.1383%" y="69" width="0.0132%" height="15" fill="rgb(216,20,37)" fg:x="57661291" fg:w="5497429"/><text x="0.3883%" y="79.50"></text></g><g><title>shiro::engine::core::bitboard::Bitboard::pop_rightmost (5,517,172 samples, 0.01%)</title><rect x="0.1910%" y="85" width="0.0132%" height="15" fill="rgb(206,188,39)" fg:x="79639423" fg:w="5517172"/><text x="0.4410%" y="95.50"></text></g><g><title>core::num::&lt;impl u64&gt;::trailing_zeros (5,517,172 samples, 0.01%)</title><rect x="0.1910%" y="69" width="0.0132%" height="15" fill="rgb(217,207,13)" fg:x="79639423" fg:w="5517172"/><text x="0.4410%" y="79.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_moves_hv (32,979,404 samples, 0.08%)</title><rect x="0.1514%" y="101" width="0.0791%" height="15" fill="rgb(231,73,38)" fg:x="63158720" fg:w="32979404"/><text x="0.4014%" y="111.50"></text></g><g><title>shiro::engine::move_gen::masks::pext_hv_lookup (10,981,529 samples, 0.03%)</title><rect x="0.2042%" y="85" width="0.0263%" height="15" fill="rgb(225,20,46)" fg:x="85156595" fg:w="10981529"/><text x="0.4542%" y="95.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (10,981,529 samples, 0.03%)</title><rect x="0.2042%" y="69" width="0.0263%" height="15" fill="rgb(210,31,41)" fg:x="85156595" fg:w="10981529"/><text x="0.4542%" y="79.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (10,981,529 samples, 0.03%)</title><rect x="0.2042%" y="53" width="0.0263%" height="15" fill="rgb(221,200,47)" fg:x="85156595" fg:w="10981529"/><text x="0.4542%" y="63.50"></text></g><g><title>core::slice::index::get_noubcheck (10,981,529 samples, 0.03%)</title><rect x="0.2042%" y="37" width="0.0263%" height="15" fill="rgb(226,26,5)" fg:x="85156595" fg:w="10981529"/><text x="0.4542%" y="47.50"></text></g><g><title>core::cmp::PartialEq::ne (5,496,153 samples, 0.01%)</title><rect x="0.2305%" y="85" width="0.0132%" height="15" fill="rgb(249,33,26)" fg:x="96138124" fg:w="5496153"/><text x="0.4805%" y="95.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::cmp::PartialEq&lt;u64&gt;&gt;::eq (5,496,153 samples, 0.01%)</title><rect x="0.2305%" y="69" width="0.0132%" height="15" fill="rgb(235,183,28)" fg:x="96138124" fg:w="5496153"/><text x="0.4805%" y="79.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_moves_king_normal (27,298,223 samples, 0.07%)</title><rect x="0.2305%" y="101" width="0.0655%" height="15" fill="rgb(221,5,38)" fg:x="96138124" fg:w="27298223"/><text x="0.4805%" y="111.50"></text></g><g><title>shiro::engine::core::bitboard::Bitboard::pop_rightmost (21,802,070 samples, 0.05%)</title><rect x="0.2437%" y="85" width="0.0523%" height="15" fill="rgb(247,18,42)" fg:x="101634277" fg:w="21802070"/><text x="0.4937%" y="95.50"></text></g><g><title>core::num::&lt;impl u64&gt;::trailing_zeros (21,802,070 samples, 0.05%)</title><rect x="0.2437%" y="69" width="0.0523%" height="15" fill="rgb(241,131,45)" fg:x="101634277" fg:w="21802070"/><text x="0.4937%" y="79.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_moves_knight (16,522,808 samples, 0.04%)</title><rect x="0.2960%" y="101" width="0.0396%" height="15" fill="rgb(249,31,29)" fg:x="123436347" fg:w="16522808"/><text x="0.5460%" y="111.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::add_move (11,041,163 samples, 0.03%)</title><rect x="0.3091%" y="85" width="0.0265%" height="15" fill="rgb(225,111,53)" fg:x="128917992" fg:w="11041163"/><text x="0.5591%" y="95.50"></text></g><g><title>shiro::engine::common::movelist::MoveList::emplace_bytes (11,041,163 samples, 0.03%)</title><rect x="0.3091%" y="69" width="0.0265%" height="15" fill="rgb(238,160,17)" fg:x="128917992" fg:w="11041163"/><text x="0.5591%" y="79.50"></text></g><g><title>core::ptr::write (5,496,935 samples, 0.01%)</title><rect x="0.3224%" y="53" width="0.0132%" height="15" fill="rgb(214,148,48)" fg:x="134462220" fg:w="5496935"/><text x="0.5724%" y="63.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::BitXorAssign&gt;::bitxor_assign (5,489,184 samples, 0.01%)</title><rect x="0.3356%" y="85" width="0.0132%" height="15" fill="rgb(232,36,49)" fg:x="139959155" fg:w="5489184"/><text x="0.5856%" y="95.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitXorAssign&gt;::bitxor_assign (5,489,184 samples, 0.01%)</title><rect x="0.3356%" y="69" width="0.0132%" height="15" fill="rgb(209,103,24)" fg:x="139959155" fg:w="5489184"/><text x="0.5856%" y="79.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::Shr&lt;__RhsT&gt;&gt;::shr (7,691,876 samples, 0.02%)</title><rect x="0.3488%" y="85" width="0.0184%" height="15" fill="rgb(229,88,8)" fg:x="145448339" fg:w="7691876"/><text x="0.5988%" y="95.50"></text></g><g><title>&lt;u64 as core::ops::bit::Shr&lt;i32&gt;&gt;::shr (7,691,876 samples, 0.02%)</title><rect x="0.3488%" y="69" width="0.0184%" height="15" fill="rgb(213,181,19)" fg:x="145448339" fg:w="7691876"/><text x="0.5988%" y="79.50"></text></g><g><title>shiro::engine::core::bitboard::Bitboard::pop_rightmost (5,549,708 samples, 0.01%)</title><rect x="0.3672%" y="85" width="0.0133%" height="15" fill="rgb(254,191,54)" fg:x="153140215" fg:w="5549708"/><text x="0.6172%" y="95.50"></text></g><g><title>core::num::&lt;impl u64&gt;::trailing_zeros (5,549,708 samples, 0.01%)</title><rect x="0.3672%" y="69" width="0.0133%" height="15" fill="rgb(241,83,37)" fg:x="153140215" fg:w="5549708"/><text x="0.6172%" y="79.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_moves_pawn_captures (24,229,233 samples, 0.06%)</title><rect x="0.3356%" y="101" width="0.0581%" height="15" fill="rgb(233,36,39)" fg:x="139959155" fg:w="24229233"/><text x="0.5856%" y="111.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::add_move (5,498,465 samples, 0.01%)</title><rect x="0.3805%" y="85" width="0.0132%" height="15" fill="rgb(226,3,54)" fg:x="158689923" fg:w="5498465"/><text x="0.6305%" y="95.50"></text></g><g><title>shiro::engine::common::movelist::MoveList::emplace_bytes (5,498,465 samples, 0.01%)</title><rect x="0.3805%" y="69" width="0.0132%" height="15" fill="rgb(245,192,40)" fg:x="158689923" fg:w="5498465"/><text x="0.6305%" y="79.50"></text></g><g><title>[unknown] (175,146,813 samples, 0.42%)</title><rect x="0.0001%" y="133" width="0.4200%" height="15" fill="rgb(238,167,29)" fg:x="28909" fg:w="175146813"/><text x="0.2501%" y="143.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_all_moves (175,146,813 samples, 0.42%)</title><rect x="0.0001%" y="117" width="0.4200%" height="15" fill="rgb(232,182,51)" fg:x="28909" fg:w="175146813"/><text x="0.2501%" y="127.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_moves_pawn_pushes (10,987,334 samples, 0.03%)</title><rect x="0.3937%" y="101" width="0.0263%" height="15" fill="rgb(231,60,39)" fg:x="164188388" fg:w="10987334"/><text x="0.6437%" y="111.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::add_move (5,478,747 samples, 0.01%)</title><rect x="0.4069%" y="85" width="0.0131%" height="15" fill="rgb(208,69,12)" fg:x="169696975" fg:w="5478747"/><text x="0.6569%" y="95.50"></text></g><g><title>shiro::engine::common::movelist::MoveList::emplace_bytes (5,478,747 samples, 0.01%)</title><rect x="0.4069%" y="69" width="0.0131%" height="15" fill="rgb(235,93,37)" fg:x="169696975" fg:w="5478747"/><text x="0.6569%" y="79.50"></text></g><g><title>core::ptr::write (5,478,747 samples, 0.01%)</title><rect x="0.4069%" y="53" width="0.0131%" height="15" fill="rgb(213,116,39)" fg:x="169696975" fg:w="5478747"/><text x="0.6569%" y="63.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::BitAnd&gt;::bitand (135,370,698 samples, 0.32%)</title><rect x="1.1190%" y="101" width="0.3246%" height="15" fill="rgb(222,207,29)" fg:x="466665612" fg:w="135370698"/><text x="1.3690%" y="111.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitAnd&gt;::bitand (135,370,698 samples, 0.32%)</title><rect x="1.1190%" y="85" width="0.3246%" height="15" fill="rgb(206,96,30)" fg:x="466665612" fg:w="135370698"/><text x="1.3690%" y="95.50"></text></g><g><title>core::cmp::PartialEq::ne (38,399,870 samples, 0.09%)</title><rect x="1.4436%" y="101" width="0.0921%" height="15" fill="rgb(218,138,4)" fg:x="602036310" fg:w="38399870"/><text x="1.6936%" y="111.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::cmp::PartialEq&lt;u64&gt;&gt;::eq (38,399,870 samples, 0.09%)</title><rect x="1.4436%" y="85" width="0.0921%" height="15" fill="rgb(250,191,14)" fg:x="602036310" fg:w="38399870"/><text x="1.6936%" y="95.50"></text></g><g><title>shiro::engine::core::bitboard::Bitboard::pop_rightmost (86,025,268 samples, 0.21%)</title><rect x="1.5357%" y="101" width="0.2063%" height="15" fill="rgb(239,60,40)" fg:x="640436180" fg:w="86025268"/><text x="1.7857%" y="111.50"></text></g><g><title>core::num::&lt;impl u64&gt;::trailing_zeros (10,994,905 samples, 0.03%)</title><rect x="1.7156%" y="85" width="0.0264%" height="15" fill="rgb(206,27,48)" fg:x="715466543" fg:w="10994905"/><text x="1.9656%" y="95.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::add_move (137,125,540 samples, 0.33%)</title><rect x="1.7419%" y="101" width="0.3288%" height="15" fill="rgb(225,35,8)" fg:x="726461448" fg:w="137125540"/><text x="1.9919%" y="111.50"></text></g><g><title>shiro::engine::common::movelist::MoveList::emplace_bytes (137,125,540 samples, 0.33%)</title><rect x="1.7419%" y="85" width="0.3288%" height="15" fill="rgb(250,213,24)" fg:x="726461448" fg:w="137125540"/><text x="1.9919%" y="95.50"></text></g><g><title>core::ptr::write (32,955,381 samples, 0.08%)</title><rect x="1.9917%" y="69" width="0.0790%" height="15" fill="rgb(247,123,22)" fg:x="830631607" fg:w="32955381"/><text x="2.2417%" y="79.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_moves_dg (554,033,164 samples, 1.33%)</title><rect x="0.9264%" y="117" width="1.3285%" height="15" fill="rgb(231,138,38)" fg:x="386364541" fg:w="554033164"/><text x="1.1764%" y="127.50"></text></g><g><title>shiro::engine::move_gen::masks::pext_dg_lookup (76,810,717 samples, 0.18%)</title><rect x="2.0707%" y="101" width="0.1842%" height="15" fill="rgb(231,145,46)" fg:x="863586988" fg:w="76810717"/><text x="2.3207%" y="111.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (38,423,576 samples, 0.09%)</title><rect x="2.1628%" y="85" width="0.0921%" height="15" fill="rgb(251,118,11)" fg:x="901974129" fg:w="38423576"/><text x="2.4128%" y="95.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (38,423,576 samples, 0.09%)</title><rect x="2.1628%" y="69" width="0.0921%" height="15" fill="rgb(217,147,25)" fg:x="901974129" fg:w="38423576"/><text x="2.4128%" y="79.50"></text></g><g><title>core::slice::index::get_noubcheck (38,423,576 samples, 0.09%)</title><rect x="2.1628%" y="53" width="0.0921%" height="15" fill="rgb(247,81,37)" fg:x="901974129" fg:w="38423576"/><text x="2.4128%" y="63.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::BitAnd&gt;::bitand (27,375,465 samples, 0.07%)</title><rect x="3.5179%" y="101" width="0.0656%" height="15" fill="rgb(209,12,38)" fg:x="1467138536" fg:w="27375465"/><text x="3.7679%" y="111.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitAnd&gt;::bitand (27,375,465 samples, 0.07%)</title><rect x="3.5179%" y="85" width="0.0656%" height="15" fill="rgb(227,1,9)" fg:x="1467138536" fg:w="27375465"/><text x="3.7679%" y="95.50"></text></g><g><title>core::cmp::PartialEq::ne (419,462,708 samples, 1.01%)</title><rect x="3.5836%" y="101" width="1.0058%" height="15" fill="rgb(248,47,43)" fg:x="1494514001" fg:w="419462708"/><text x="3.8336%" y="111.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::cmp::PartialEq&lt;u64&gt;&gt;::eq (419,462,708 samples, 1.01%)</title><rect x="3.5836%" y="85" width="1.0058%" height="15" fill="rgb(221,10,30)" fg:x="1494514001" fg:w="419462708"/><text x="3.8336%" y="95.50"></text></g><g><title>shiro::engine::core::bitboard::Bitboard::pop_rightmost (492,940,066 samples, 1.18%)</title><rect x="4.5894%" y="101" width="1.1820%" height="15" fill="rgb(210,229,1)" fg:x="1913976709" fg:w="492940066"/><text x="4.8394%" y="111.50"></text></g><g><title>core::num::&lt;impl u64&gt;::trailing_zeros (38,316,673 samples, 0.09%)</title><rect x="5.6795%" y="85" width="0.0919%" height="15" fill="rgb(222,148,37)" fg:x="2368600102" fg:w="38316673"/><text x="5.9295%" y="95.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::add_move (1,981,898,650 samples, 4.75%)</title><rect x="5.7714%" y="101" width="4.7523%" height="15" fill="rgb(234,67,33)" fg:x="2406916775" fg:w="1981898650"/><text x="6.0214%" y="111.50">shiro:..</text></g><g><title>shiro::engine::common::movelist::MoveList::emplace_bytes (1,981,898,650 samples, 4.75%)</title><rect x="5.7714%" y="85" width="4.7523%" height="15" fill="rgb(247,98,35)" fg:x="2406916775" fg:w="1981898650"/><text x="6.0214%" y="95.50">shiro:..</text></g><g><title>core::ptr::write (419,360,379 samples, 1.01%)</title><rect x="9.5181%" y="69" width="1.0056%" height="15" fill="rgb(247,138,52)" fg:x="3969455046" fg:w="419360379"/><text x="9.7681%" y="79.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_moves_hv (3,655,252,207 samples, 8.76%)</title><rect x="2.2549%" y="117" width="8.7647%" height="15" fill="rgb(213,79,30)" fg:x="940397705" fg:w="3655252207"/><text x="2.5049%" y="127.50">shiro::engin..</text></g><g><title>shiro::engine::move_gen::masks::pext_hv_lookup (206,834,487 samples, 0.50%)</title><rect x="10.5236%" y="101" width="0.4960%" height="15" fill="rgb(246,177,23)" fg:x="4388815425" fg:w="206834487"/><text x="10.7736%" y="111.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (83,780,423 samples, 0.20%)</title><rect x="10.8187%" y="85" width="0.2009%" height="15" fill="rgb(230,62,27)" fg:x="4511869489" fg:w="83780423"/><text x="11.0687%" y="95.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (83,780,423 samples, 0.20%)</title><rect x="10.8187%" y="69" width="0.2009%" height="15" fill="rgb(216,154,8)" fg:x="4511869489" fg:w="83780423"/><text x="11.0687%" y="79.50"></text></g><g><title>core::slice::index::get_noubcheck (83,780,423 samples, 0.20%)</title><rect x="10.8187%" y="53" width="0.2009%" height="15" fill="rgb(244,35,45)" fg:x="4511869489" fg:w="83780423"/><text x="11.0687%" y="63.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_moves_king_castle (28,294,705 samples, 0.07%)</title><rect x="11.0196%" y="117" width="0.0678%" height="15" fill="rgb(251,115,12)" fg:x="4595649912" fg:w="28294705"/><text x="11.2696%" y="127.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::add_move (21,984,215 samples, 0.05%)</title><rect x="11.0347%" y="101" width="0.0527%" height="15" fill="rgb(240,54,50)" fg:x="4601960402" fg:w="21984215"/><text x="11.2847%" y="111.50"></text></g><g><title>shiro::engine::common::movelist::MoveList::emplace_bytes (21,984,215 samples, 0.05%)</title><rect x="11.0347%" y="85" width="0.0527%" height="15" fill="rgb(233,84,52)" fg:x="4601960402" fg:w="21984215"/><text x="11.2847%" y="95.50"></text></g><g><title>core::ptr::write (21,984,215 samples, 0.05%)</title><rect x="11.0347%" y="69" width="0.0527%" height="15" fill="rgb(207,117,47)" fg:x="4601960402" fg:w="21984215"/><text x="11.2847%" y="79.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::BitAnd&gt;::bitand (5,475,217 samples, 0.01%)</title><rect x="11.1005%" y="101" width="0.0131%" height="15" fill="rgb(249,43,39)" fg:x="4629416514" fg:w="5475217"/><text x="11.3505%" y="111.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitAnd&gt;::bitand (5,475,217 samples, 0.01%)</title><rect x="11.1005%" y="85" width="0.0131%" height="15" fill="rgb(209,38,44)" fg:x="4629416514" fg:w="5475217"/><text x="11.3505%" y="95.50"></text></g><g><title>core::cmp::PartialEq::ne (21,853,030 samples, 0.05%)</title><rect x="11.1137%" y="101" width="0.0524%" height="15" fill="rgb(236,212,23)" fg:x="4634891731" fg:w="21853030"/><text x="11.3637%" y="111.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::cmp::PartialEq&lt;u64&gt;&gt;::eq (21,853,030 samples, 0.05%)</title><rect x="11.1137%" y="85" width="0.0524%" height="15" fill="rgb(242,79,21)" fg:x="4634891731" fg:w="21853030"/><text x="11.3637%" y="95.50"></text></g><g><title>shiro::engine::core::bitboard::Bitboard::leading_zeros (66,053,118 samples, 0.16%)</title><rect x="11.1661%" y="101" width="0.1584%" height="15" fill="rgb(211,96,35)" fg:x="4656744761" fg:w="66053118"/><text x="11.4161%" y="111.50"></text></g><g><title>core::num::&lt;impl u64&gt;::leading_zeros (66,053,118 samples, 0.16%)</title><rect x="11.1661%" y="85" width="0.1584%" height="15" fill="rgb(253,215,40)" fg:x="4656744761" fg:w="66053118"/><text x="11.4161%" y="95.50"></text></g><g><title>shiro::engine::core::bitboard::Bitboard::pop_rightmost (2,965,460,375 samples, 7.11%)</title><rect x="11.3245%" y="101" width="7.1107%" height="15" fill="rgb(211,81,21)" fg:x="4722797879" fg:w="2965460375"/><text x="11.5745%" y="111.50">shiro::eng..</text></g><g><title>core::num::&lt;impl u64&gt;::trailing_zeros (2,915,497,608 samples, 6.99%)</title><rect x="11.4443%" y="85" width="6.9909%" height="15" fill="rgb(208,190,38)" fg:x="4772760646" fg:w="2915497608"/><text x="11.6943%" y="95.50">core::num..</text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_moves_king_normal (3,151,983,040 samples, 7.56%)</title><rect x="11.0874%" y="117" width="7.5579%" height="15" fill="rgb(235,213,38)" fg:x="4623944617" fg:w="3151983040"/><text x="11.3374%" y="127.50">shiro::eng..</text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::add_move (87,669,403 samples, 0.21%)</title><rect x="18.4351%" y="101" width="0.2102%" height="15" fill="rgb(237,122,38)" fg:x="7688258254" fg:w="87669403"/><text x="18.6851%" y="111.50"></text></g><g><title>shiro::engine::common::movelist::MoveList::emplace_bytes (87,669,403 samples, 0.21%)</title><rect x="18.4351%" y="85" width="0.2102%" height="15" fill="rgb(244,218,35)" fg:x="7688258254" fg:w="87669403"/><text x="18.6851%" y="95.50"></text></g><g><title>core::ptr::write (32,820,368 samples, 0.08%)</title><rect x="18.5666%" y="69" width="0.0787%" height="15" fill="rgb(240,68,47)" fg:x="7743107289" fg:w="32820368"/><text x="18.8166%" y="79.50"></text></g><g><title>core::cmp::PartialEq::ne (16,450,872 samples, 0.04%)</title><rect x="18.9257%" y="101" width="0.0394%" height="15" fill="rgb(210,16,53)" fg:x="7892862514" fg:w="16450872"/><text x="19.1757%" y="111.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::cmp::PartialEq&lt;u64&gt;&gt;::eq (16,450,872 samples, 0.04%)</title><rect x="18.9257%" y="85" width="0.0394%" height="15" fill="rgb(235,124,12)" fg:x="7892862514" fg:w="16450872"/><text x="19.1757%" y="95.50"></text></g><g><title>shiro::engine::core::bitboard::Bitboard::pop_rightmost (74,593,637 samples, 0.18%)</title><rect x="18.9652%" y="101" width="0.1789%" height="15" fill="rgb(224,169,11)" fg:x="7909313386" fg:w="74593637"/><text x="19.2152%" y="111.50"></text></g><g><title>core::num::&lt;impl u64&gt;::trailing_zeros (5,668,672 samples, 0.01%)</title><rect x="19.1305%" y="85" width="0.0136%" height="15" fill="rgb(250,166,2)" fg:x="7978238351" fg:w="5668672"/><text x="19.3805%" y="95.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::add_move (112,586,152 samples, 0.27%)</title><rect x="19.1440%" y="101" width="0.2700%" height="15" fill="rgb(242,216,29)" fg:x="7983907023" fg:w="112586152"/><text x="19.3940%" y="111.50"></text></g><g><title>shiro::engine::common::movelist::MoveList::emplace_bytes (112,586,152 samples, 0.27%)</title><rect x="19.1440%" y="85" width="0.2700%" height="15" fill="rgb(230,116,27)" fg:x="7983907023" fg:w="112586152"/><text x="19.3940%" y="95.50"></text></g><g><title>core::ptr::write (57,765,727 samples, 0.14%)</title><rect x="19.2755%" y="69" width="0.1385%" height="15" fill="rgb(228,99,48)" fg:x="8038727448" fg:w="57765727"/><text x="19.5255%" y="79.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_moves_knight (326,048,649 samples, 0.78%)</title><rect x="18.6453%" y="117" width="0.7818%" height="15" fill="rgb(253,11,6)" fg:x="7775927657" fg:w="326048649"/><text x="18.8953%" y="127.50"></text></g><g><title>shiro::engine::move_gen::masks::knight_lookup (5,483,131 samples, 0.01%)</title><rect x="19.4140%" y="101" width="0.0131%" height="15" fill="rgb(247,143,39)" fg:x="8096493175" fg:w="5483131"/><text x="19.6640%" y="111.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (5,483,131 samples, 0.01%)</title><rect x="19.4140%" y="85" width="0.0131%" height="15" fill="rgb(236,97,10)" fg:x="8096493175" fg:w="5483131"/><text x="19.6640%" y="95.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (5,483,131 samples, 0.01%)</title><rect x="19.4140%" y="69" width="0.0131%" height="15" fill="rgb(233,208,19)" fg:x="8096493175" fg:w="5483131"/><text x="19.6640%" y="79.50"></text></g><g><title>core::slice::index::get_noubcheck (5,483,131 samples, 0.01%)</title><rect x="19.4140%" y="53" width="0.0131%" height="15" fill="rgb(216,164,2)" fg:x="8096493175" fg:w="5483131"/><text x="19.6640%" y="63.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::BitAnd&gt;::bitand (16,459,609 samples, 0.04%)</title><rect x="19.4403%" y="101" width="0.0395%" height="15" fill="rgb(220,129,5)" fg:x="8107464990" fg:w="16459609"/><text x="19.6903%" y="111.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitAnd&gt;::bitand (16,459,609 samples, 0.04%)</title><rect x="19.4403%" y="85" width="0.0395%" height="15" fill="rgb(242,17,10)" fg:x="8107464990" fg:w="16459609"/><text x="19.6903%" y="95.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::BitOr&gt;::bitor (23,095,586 samples, 0.06%)</title><rect x="19.4798%" y="101" width="0.0554%" height="15" fill="rgb(242,107,0)" fg:x="8123924599" fg:w="23095586"/><text x="19.7298%" y="111.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitOr&gt;::bitor (23,095,586 samples, 0.06%)</title><rect x="19.4798%" y="85" width="0.0554%" height="15" fill="rgb(251,28,31)" fg:x="8123924599" fg:w="23095586"/><text x="19.7298%" y="95.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::BitXorAssign&gt;::bitxor_assign (5,432,198 samples, 0.01%)</title><rect x="19.5352%" y="101" width="0.0130%" height="15" fill="rgb(233,223,10)" fg:x="8147020185" fg:w="5432198"/><text x="19.7852%" y="111.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitXorAssign&gt;::bitxor_assign (5,432,198 samples, 0.01%)</title><rect x="19.5352%" y="85" width="0.0130%" height="15" fill="rgb(215,21,27)" fg:x="8147020185" fg:w="5432198"/><text x="19.7852%" y="95.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::Not&gt;::not (21,908,958 samples, 0.05%)</title><rect x="19.5482%" y="101" width="0.0525%" height="15" fill="rgb(232,23,21)" fg:x="8152452383" fg:w="21908958"/><text x="19.7982%" y="111.50"></text></g><g><title>&lt;u64 as core::ops::bit::Not&gt;::not (21,908,958 samples, 0.05%)</title><rect x="19.5482%" y="85" width="0.0525%" height="15" fill="rgb(244,5,23)" fg:x="8152452383" fg:w="21908958"/><text x="19.7982%" y="95.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::Shr&lt;__RhsT&gt;&gt;::shr (10,965,464 samples, 0.03%)</title><rect x="19.6007%" y="101" width="0.0263%" height="15" fill="rgb(226,81,46)" fg:x="8174361341" fg:w="10965464"/><text x="19.8507%" y="111.50"></text></g><g><title>&lt;u64 as core::ops::bit::Shr&lt;i32&gt;&gt;::shr (10,965,464 samples, 0.03%)</title><rect x="19.6007%" y="85" width="0.0263%" height="15" fill="rgb(247,70,30)" fg:x="8174361341" fg:w="10965464"/><text x="19.8507%" y="95.50"></text></g><g><title>core::cmp::PartialEq::ne (29,035,321 samples, 0.07%)</title><rect x="19.6270%" y="101" width="0.0696%" height="15" fill="rgb(212,68,19)" fg:x="8185326805" fg:w="29035321"/><text x="19.8770%" y="111.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::cmp::PartialEq&lt;u64&gt;&gt;::eq (29,035,321 samples, 0.07%)</title><rect x="19.6270%" y="85" width="0.0696%" height="15" fill="rgb(240,187,13)" fg:x="8185326805" fg:w="29035321"/><text x="19.8770%" y="95.50"></text></g><g><title>shiro::engine::core::bitboard::Bitboard::pop_rightmost (5,477,878 samples, 0.01%)</title><rect x="19.6966%" y="101" width="0.0131%" height="15" fill="rgb(223,113,26)" fg:x="8214362126" fg:w="5477878"/><text x="19.9466%" y="111.50"></text></g><g><title>core::num::&lt;impl u64&gt;::trailing_zeros (5,477,878 samples, 0.01%)</title><rect x="19.6966%" y="85" width="0.0131%" height="15" fill="rgb(206,192,2)" fg:x="8214362126" fg:w="5477878"/><text x="19.9466%" y="95.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::add_move (5,493,103 samples, 0.01%)</title><rect x="19.7098%" y="101" width="0.0132%" height="15" fill="rgb(241,108,4)" fg:x="8219840004" fg:w="5493103"/><text x="19.9598%" y="111.50"></text></g><g><title>shiro::engine::common::movelist::MoveList::emplace_bytes (5,493,103 samples, 0.01%)</title><rect x="19.7098%" y="85" width="0.0132%" height="15" fill="rgb(247,173,49)" fg:x="8219840004" fg:w="5493103"/><text x="19.9598%" y="95.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_moves_pawn_captures (139,805,945 samples, 0.34%)</title><rect x="19.4272%" y="117" width="0.3352%" height="15" fill="rgb(224,114,35)" fg:x="8101976306" fg:w="139805945"/><text x="19.6772%" y="127.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::add_promotions (16,449,144 samples, 0.04%)</title><rect x="19.7229%" y="101" width="0.0394%" height="15" fill="rgb(245,159,27)" fg:x="8225333107" fg:w="16449144"/><text x="19.9729%" y="111.50"></text></g><g><title>shiro::engine::common::movelist::MoveList::emplace_bytes (16,449,144 samples, 0.04%)</title><rect x="19.7229%" y="85" width="0.0394%" height="15" fill="rgb(245,172,44)" fg:x="8225333107" fg:w="16449144"/><text x="19.9729%" y="95.50"></text></g><g><title>core::ptr::write (16,449,144 samples, 0.04%)</title><rect x="19.7229%" y="69" width="0.0394%" height="15" fill="rgb(236,23,11)" fg:x="8225333107" fg:w="16449144"/><text x="19.9729%" y="79.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::BitAnd&gt;::bitand (44,991,392 samples, 0.11%)</title><rect x="19.8722%" y="101" width="0.1079%" height="15" fill="rgb(205,117,38)" fg:x="8287571748" fg:w="44991392"/><text x="20.1222%" y="111.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitAnd&gt;::bitand (44,991,392 samples, 0.11%)</title><rect x="19.8722%" y="85" width="0.1079%" height="15" fill="rgb(237,72,25)" fg:x="8287571748" fg:w="44991392"/><text x="20.1222%" y="95.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::BitAndAssign&gt;::bitand_assign (20,837,618 samples, 0.05%)</title><rect x="19.9801%" y="101" width="0.0500%" height="15" fill="rgb(244,70,9)" fg:x="8332563140" fg:w="20837618"/><text x="20.2301%" y="111.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitAndAssign&gt;::bitand_assign (20,837,618 samples, 0.05%)</title><rect x="19.9801%" y="85" width="0.0500%" height="15" fill="rgb(217,125,39)" fg:x="8332563140" fg:w="20837618"/><text x="20.2301%" y="95.50"></text></g><g><title>core::cmp::PartialEq::ne (10,981,260 samples, 0.03%)</title><rect x="20.0300%" y="101" width="0.0263%" height="15" fill="rgb(235,36,10)" fg:x="8353400758" fg:w="10981260"/><text x="20.2800%" y="111.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::cmp::PartialEq&lt;u64&gt;&gt;::eq (10,981,260 samples, 0.03%)</title><rect x="20.0300%" y="85" width="0.0263%" height="15" fill="rgb(251,123,47)" fg:x="8353400758" fg:w="10981260"/><text x="20.2800%" y="95.50"></text></g><g><title>shiro::engine::core::bitboard::Bitboard::pop_rightmost (94,736,392 samples, 0.23%)</title><rect x="20.0564%" y="101" width="0.2272%" height="15" fill="rgb(221,13,13)" fg:x="8364382018" fg:w="94736392"/><text x="20.3064%" y="111.50"></text></g><g><title>core::num::&lt;impl u64&gt;::trailing_zeros (83,690,822 samples, 0.20%)</title><rect x="20.0828%" y="85" width="0.2007%" height="15" fill="rgb(238,131,9)" fg:x="8375427588" fg:w="83690822"/><text x="20.3328%" y="95.50"></text></g><g><title>shiro::engine::core::bitboard::Bitboard::unbounded_shr (21,667,730 samples, 0.05%)</title><rect x="20.2835%" y="101" width="0.0520%" height="15" fill="rgb(211,50,8)" fg:x="8459118410" fg:w="21667730"/><text x="20.5335%" y="111.50"></text></g><g><title>core::num::&lt;impl u64&gt;::unbounded_shr (21,667,730 samples, 0.05%)</title><rect x="20.2835%" y="85" width="0.0520%" height="15" fill="rgb(245,182,24)" fg:x="8459118410" fg:w="21667730"/><text x="20.5335%" y="95.50"></text></g><g><title>core::num::&lt;impl u64&gt;::unchecked_shr (21,667,730 samples, 0.05%)</title><rect x="20.2835%" y="69" width="0.0520%" height="15" fill="rgb(242,14,37)" fg:x="8459118410" fg:w="21667730"/><text x="20.5335%" y="79.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::add_move (5,476,728 samples, 0.01%)</title><rect x="20.3355%" y="101" width="0.0131%" height="15" fill="rgb(246,228,12)" fg:x="8480786140" fg:w="5476728"/><text x="20.5855%" y="111.50"></text></g><g><title>shiro::engine::common::movelist::MoveList::emplace_bytes (5,476,728 samples, 0.01%)</title><rect x="20.3355%" y="85" width="0.0131%" height="15" fill="rgb(213,55,15)" fg:x="8480786140" fg:w="5476728"/><text x="20.5855%" y="95.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_all_moves (8,338,488,825 samples, 19.99%)</title><rect x="0.4200%" y="133" width="19.9943%" height="15" fill="rgb(209,9,3)" fg:x="175175722" fg:w="8338488825"/><text x="0.6700%" y="143.50">shiro::engine::move_gen::MoveGe..</text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_moves_pawn_pushes (271,882,296 samples, 0.65%)</title><rect x="19.7624%" y="117" width="0.6519%" height="15" fill="rgb(230,59,30)" fg:x="8241782251" fg:w="271882296"/><text x="20.0124%" y="127.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::add_promotions (27,401,679 samples, 0.07%)</title><rect x="20.3486%" y="101" width="0.0657%" height="15" fill="rgb(209,121,21)" fg:x="8486262868" fg:w="27401679"/><text x="20.5986%" y="111.50"></text></g><g><title>shiro::engine::common::movelist::MoveList::emplace_bytes (27,401,679 samples, 0.07%)</title><rect x="20.3486%" y="85" width="0.0657%" height="15" fill="rgb(220,109,13)" fg:x="8486262868" fg:w="27401679"/><text x="20.5986%" y="95.50"></text></g><g><title>core::ptr::write (10,968,439 samples, 0.03%)</title><rect x="20.3880%" y="69" width="0.0263%" height="15" fill="rgb(232,18,1)" fg:x="8502696108" fg:w="10968439"/><text x="20.6380%" y="79.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::new (5,497,402 samples, 0.01%)</title><rect x="20.4143%" y="133" width="0.0132%" height="15" fill="rgb(215,41,42)" fg:x="8513664547" fg:w="5497402"/><text x="20.6643%" y="143.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::BitAnd&gt;::bitand (5,480,971 samples, 0.01%)</title><rect x="20.5991%" y="85" width="0.0131%" height="15" fill="rgb(224,123,36)" fg:x="8590716064" fg:w="5480971"/><text x="20.8491%" y="95.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitAnd&gt;::bitand (5,480,971 samples, 0.01%)</title><rect x="20.5991%" y="69" width="0.0131%" height="15" fill="rgb(240,125,3)" fg:x="8590716064" fg:w="5480971"/><text x="20.8491%" y="79.50"></text></g><g><title>core::cmp::PartialEq::ne (5,472,381 samples, 0.01%)</title><rect x="20.6122%" y="85" width="0.0131%" height="15" fill="rgb(205,98,50)" fg:x="8596197035" fg:w="5472381"/><text x="20.8622%" y="95.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::cmp::PartialEq&lt;u64&gt;&gt;::eq (5,472,381 samples, 0.01%)</title><rect x="20.6122%" y="69" width="0.0131%" height="15" fill="rgb(205,185,37)" fg:x="8596197035" fg:w="5472381"/><text x="20.8622%" y="79.50"></text></g><g><title>shiro::engine::core::bitboard::Bitboard::pop_rightmost (5,480,646 samples, 0.01%)</title><rect x="20.6253%" y="85" width="0.0131%" height="15" fill="rgb(238,207,15)" fg:x="8601669416" fg:w="5480646"/><text x="20.8753%" y="95.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::add_move (16,418,997 samples, 0.04%)</title><rect x="20.6385%" y="85" width="0.0394%" height="15" fill="rgb(213,199,42)" fg:x="8607150062" fg:w="16418997"/><text x="20.8885%" y="95.50"></text></g><g><title>shiro::engine::common::movelist::MoveList::emplace_bytes (16,418,997 samples, 0.04%)</title><rect x="20.6385%" y="69" width="0.0394%" height="15" fill="rgb(235,201,11)" fg:x="8607150062" fg:w="16418997"/><text x="20.8885%" y="79.50"></text></g><g><title>core::ptr::write (5,476,655 samples, 0.01%)</title><rect x="20.6647%" y="53" width="0.0131%" height="15" fill="rgb(207,46,11)" fg:x="8618092404" fg:w="5476655"/><text x="20.9147%" y="63.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_moves_hv (49,478,933 samples, 0.12%)</title><rect x="20.5723%" y="101" width="0.1186%" height="15" fill="rgb(241,35,35)" fg:x="8579558691" fg:w="49478933"/><text x="20.8223%" y="111.50"></text></g><g><title>shiro::engine::move_gen::masks::pext_hv_lookup (5,468,565 samples, 0.01%)</title><rect x="20.6778%" y="85" width="0.0131%" height="15" fill="rgb(243,32,47)" fg:x="8623569059" fg:w="5468565"/><text x="20.9278%" y="95.50"></text></g><g><title>shiro::engine::core::bitboard::Bitboard::leading_zeros (5,493,564 samples, 0.01%)</title><rect x="20.6910%" y="85" width="0.0132%" height="15" fill="rgb(247,202,23)" fg:x="8629037624" fg:w="5493564"/><text x="20.9410%" y="95.50"></text></g><g><title>core::num::&lt;impl u64&gt;::leading_zeros (5,493,564 samples, 0.01%)</title><rect x="20.6910%" y="69" width="0.0132%" height="15" fill="rgb(219,102,11)" fg:x="8629037624" fg:w="5493564"/><text x="20.9410%" y="79.50"></text></g><g><title>shiro::engine::core::bitboard::Bitboard::pop_rightmost (10,963,729 samples, 0.03%)</title><rect x="20.7041%" y="85" width="0.0263%" height="15" fill="rgb(243,110,44)" fg:x="8634531188" fg:w="10963729"/><text x="20.9541%" y="95.50"></text></g><g><title>core::num::&lt;impl u64&gt;::trailing_zeros (5,478,740 samples, 0.01%)</title><rect x="20.7173%" y="69" width="0.0131%" height="15" fill="rgb(222,74,54)" fg:x="8640016177" fg:w="5478740"/><text x="20.9673%" y="79.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_moves_king_normal (21,942,302 samples, 0.05%)</title><rect x="20.6910%" y="101" width="0.0526%" height="15" fill="rgb(216,99,12)" fg:x="8629037624" fg:w="21942302"/><text x="20.9410%" y="111.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::add_move (5,485,009 samples, 0.01%)</title><rect x="20.7304%" y="85" width="0.0132%" height="15" fill="rgb(226,22,26)" fg:x="8645494917" fg:w="5485009"/><text x="20.9804%" y="95.50"></text></g><g><title>shiro::engine::common::movelist::MoveList::emplace_bytes (5,485,009 samples, 0.01%)</title><rect x="20.7304%" y="69" width="0.0132%" height="15" fill="rgb(217,163,10)" fg:x="8645494917" fg:w="5485009"/><text x="20.9804%" y="79.50"></text></g><g><title>core::cmp::PartialEq::ne (5,480,556 samples, 0.01%)</title><rect x="20.7436%" y="85" width="0.0131%" height="15" fill="rgb(213,25,53)" fg:x="8650979926" fg:w="5480556"/><text x="20.9936%" y="95.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::cmp::PartialEq&lt;u64&gt;&gt;::eq (5,480,556 samples, 0.01%)</title><rect x="20.7436%" y="69" width="0.0131%" height="15" fill="rgb(252,105,26)" fg:x="8650979926" fg:w="5480556"/><text x="20.9936%" y="79.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_moves_knight (10,965,416 samples, 0.03%)</title><rect x="20.7436%" y="101" width="0.0263%" height="15" fill="rgb(220,39,43)" fg:x="8650979926" fg:w="10965416"/><text x="20.9936%" y="111.50"></text></g><g><title>shiro::engine::core::bitboard::Bitboard::pop_rightmost (5,484,860 samples, 0.01%)</title><rect x="20.7567%" y="85" width="0.0132%" height="15" fill="rgb(229,68,48)" fg:x="8656460482" fg:w="5484860"/><text x="21.0067%" y="95.50"></text></g><g><title>core::cmp::PartialEq::ne (5,515,531 samples, 0.01%)</title><rect x="20.7830%" y="85" width="0.0132%" height="15" fill="rgb(252,8,32)" fg:x="8667421522" fg:w="5515531"/><text x="21.0330%" y="95.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::cmp::PartialEq&lt;u64&gt;&gt;::eq (5,515,531 samples, 0.01%)</title><rect x="20.7830%" y="69" width="0.0132%" height="15" fill="rgb(223,20,43)" fg:x="8667421522" fg:w="5515531"/><text x="21.0330%" y="79.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_all_moves (104,349,709 samples, 0.25%)</title><rect x="20.5592%" y="117" width="0.2502%" height="15" fill="rgb(229,81,49)" fg:x="8574075489" fg:w="104349709"/><text x="20.8092%" y="127.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_moves_pawn_pushes (16,479,856 samples, 0.04%)</title><rect x="20.7699%" y="101" width="0.0395%" height="15" fill="rgb(236,28,36)" fg:x="8661945342" fg:w="16479856"/><text x="21.0199%" y="111.50"></text></g><g><title>shiro::engine::core::bitboard::Bitboard::pop_rightmost (5,488,145 samples, 0.01%)</title><rect x="20.7962%" y="85" width="0.0132%" height="15" fill="rgb(249,185,26)" fg:x="8672937053" fg:w="5488145"/><text x="21.0462%" y="95.50"></text></g><g><title>core::num::&lt;impl u64&gt;::trailing_zeros (5,488,145 samples, 0.01%)</title><rect x="20.7962%" y="69" width="0.0132%" height="15" fill="rgb(249,174,33)" fg:x="8672937053" fg:w="5488145"/><text x="21.0462%" y="79.50"></text></g><g><title>[unknown] (8,689,374,023 samples, 20.84%)</title><rect x="0.0001%" y="149" width="20.8356%" height="15" fill="rgb(233,201,37)" fg:x="28909" fg:w="8689374023"/><text x="0.2501%" y="159.50">[unknown]</text></g><g><title>shiro::engine::move_gen::gen_moves (170,240,983 samples, 0.41%)</title><rect x="20.4275%" y="133" width="0.4082%" height="15" fill="rgb(221,78,26)" fg:x="8519161949" fg:w="170240983"/><text x="20.6775%" y="143.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::new (10,977,734 samples, 0.03%)</title><rect x="20.8094%" y="117" width="0.0263%" height="15" fill="rgb(250,127,30)" fg:x="8678425198" fg:w="10977734"/><text x="21.0594%" y="127.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::BitAnd&gt;::bitand (16,405,956 samples, 0.04%)</title><rect x="21.1211%" y="117" width="0.0393%" height="15" fill="rgb(230,49,44)" fg:x="8808427906" fg:w="16405956"/><text x="21.3711%" y="127.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitAnd&gt;::bitand (16,405,956 samples, 0.04%)</title><rect x="21.1211%" y="101" width="0.0393%" height="15" fill="rgb(229,67,23)" fg:x="8808427906" fg:w="16405956"/><text x="21.3711%" y="111.50"></text></g><g><title>core::cmp::PartialEq::ne (10,932,973 samples, 0.03%)</title><rect x="21.1604%" y="117" width="0.0262%" height="15" fill="rgb(249,83,47)" fg:x="8824833862" fg:w="10932973"/><text x="21.4104%" y="127.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::cmp::PartialEq&lt;u64&gt;&gt;::eq (10,932,973 samples, 0.03%)</title><rect x="21.1604%" y="101" width="0.0262%" height="15" fill="rgb(215,43,3)" fg:x="8824833862" fg:w="10932973"/><text x="21.4104%" y="111.50"></text></g><g><title>shiro::engine::core::bitboard::Bitboard::pop_rightmost (12,561,676 samples, 0.03%)</title><rect x="21.1867%" y="117" width="0.0301%" height="15" fill="rgb(238,154,13)" fg:x="8835766835" fg:w="12561676"/><text x="21.4367%" y="127.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_moves_dg (65,848,278 samples, 0.16%)</title><rect x="21.0852%" y="133" width="0.1579%" height="15" fill="rgb(219,56,2)" fg:x="8793467823" fg:w="65848278"/><text x="21.3352%" y="143.50"></text></g><g><title>shiro::engine::move_gen::masks::pext_dg_lookup (10,987,590 samples, 0.03%)</title><rect x="21.2168%" y="117" width="0.0263%" height="15" fill="rgb(233,0,4)" fg:x="8848328511" fg:w="10987590"/><text x="21.4668%" y="127.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::BitAnd&gt;::bitand (5,482,585 samples, 0.01%)</title><rect x="21.3350%" y="117" width="0.0131%" height="15" fill="rgb(235,30,7)" fg:x="8897637968" fg:w="5482585"/><text x="21.5850%" y="127.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitAnd&gt;::bitand (5,482,585 samples, 0.01%)</title><rect x="21.3350%" y="101" width="0.0131%" height="15" fill="rgb(250,79,13)" fg:x="8897637968" fg:w="5482585"/><text x="21.5850%" y="111.50"></text></g><g><title>core::cmp::PartialEq::ne (62,246,910 samples, 0.15%)</title><rect x="21.3482%" y="117" width="0.1493%" height="15" fill="rgb(211,146,34)" fg:x="8903120553" fg:w="62246910"/><text x="21.5982%" y="127.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::cmp::PartialEq&lt;u64&gt;&gt;::eq (62,246,910 samples, 0.15%)</title><rect x="21.3482%" y="101" width="0.1493%" height="15" fill="rgb(228,22,38)" fg:x="8903120553" fg:w="62246910"/><text x="21.5982%" y="111.50"></text></g><g><title>shiro::engine::core::bitboard::Bitboard::pop_rightmost (125,795,454 samples, 0.30%)</title><rect x="21.4974%" y="117" width="0.3016%" height="15" fill="rgb(235,168,5)" fg:x="8965367463" fg:w="125795454"/><text x="21.7474%" y="127.50"></text></g><g><title>core::num::&lt;impl u64&gt;::trailing_zeros (21,874,686 samples, 0.05%)</title><rect x="21.7466%" y="101" width="0.0525%" height="15" fill="rgb(221,155,16)" fg:x="9069288231" fg:w="21874686"/><text x="21.9966%" y="111.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::add_move (460,526,828 samples, 1.10%)</title><rect x="21.7991%" y="117" width="1.1043%" height="15" fill="rgb(215,215,53)" fg:x="9091162917" fg:w="460526828"/><text x="22.0491%" y="127.50"></text></g><g><title>shiro::engine::common::movelist::MoveList::emplace_bytes (460,526,828 samples, 1.10%)</title><rect x="21.7991%" y="101" width="1.1043%" height="15" fill="rgb(223,4,10)" fg:x="9091162917" fg:w="460526828"/><text x="22.0491%" y="111.50"></text></g><g><title>core::ptr::write (87,583,198 samples, 0.21%)</title><rect x="22.6933%" y="85" width="0.2100%" height="15" fill="rgb(234,103,6)" fg:x="9464106547" fg:w="87583198"/><text x="22.9433%" y="95.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_moves_hv (709,213,906 samples, 1.70%)</title><rect x="21.2431%" y="133" width="1.7006%" height="15" fill="rgb(227,97,0)" fg:x="8859316101" fg:w="709213906"/><text x="21.4931%" y="143.50"></text></g><g><title>shiro::engine::move_gen::masks::pext_hv_lookup (16,840,262 samples, 0.04%)</title><rect x="22.9033%" y="117" width="0.0404%" height="15" fill="rgb(234,150,53)" fg:x="9551689745" fg:w="16840262"/><text x="23.1533%" y="127.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (11,365,515 samples, 0.03%)</title><rect x="22.9164%" y="101" width="0.0273%" height="15" fill="rgb(228,201,54)" fg:x="9557164492" fg:w="11365515"/><text x="23.1664%" y="111.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (11,365,515 samples, 0.03%)</title><rect x="22.9164%" y="85" width="0.0273%" height="15" fill="rgb(222,22,37)" fg:x="9557164492" fg:w="11365515"/><text x="23.1664%" y="95.50"></text></g><g><title>core::slice::index::get_noubcheck (11,365,515 samples, 0.03%)</title><rect x="22.9164%" y="69" width="0.0273%" height="15" fill="rgb(237,53,32)" fg:x="9557164492" fg:w="11365515"/><text x="23.1664%" y="79.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_moves_king_castle (32,875,187 samples, 0.08%)</title><rect x="22.9437%" y="133" width="0.0788%" height="15" fill="rgb(233,25,53)" fg:x="9568530007" fg:w="32875187"/><text x="23.1937%" y="143.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::add_move (32,875,187 samples, 0.08%)</title><rect x="22.9437%" y="117" width="0.0788%" height="15" fill="rgb(210,40,34)" fg:x="9568530007" fg:w="32875187"/><text x="23.1937%" y="127.50"></text></g><g><title>shiro::engine::common::movelist::MoveList::emplace_bytes (27,407,482 samples, 0.07%)</title><rect x="22.9568%" y="101" width="0.0657%" height="15" fill="rgb(241,220,44)" fg:x="9573997712" fg:w="27407482"/><text x="23.2068%" y="111.50"></text></g><g><title>core::ptr::write (27,407,482 samples, 0.07%)</title><rect x="22.9568%" y="85" width="0.0657%" height="15" fill="rgb(235,28,35)" fg:x="9573997712" fg:w="27407482"/><text x="23.2068%" y="95.50"></text></g><g><title>core::cmp::PartialEq::ne (5,466,031 samples, 0.01%)</title><rect x="23.0356%" y="117" width="0.0131%" height="15" fill="rgb(210,56,17)" fg:x="9606874158" fg:w="5466031"/><text x="23.2856%" y="127.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::cmp::PartialEq&lt;u64&gt;&gt;::eq (5,466,031 samples, 0.01%)</title><rect x="23.0356%" y="101" width="0.0131%" height="15" fill="rgb(224,130,29)" fg:x="9606874158" fg:w="5466031"/><text x="23.2856%" y="111.50"></text></g><g><title>shiro::engine::core::bitboard::Bitboard::leading_zeros (38,309,168 samples, 0.09%)</title><rect x="23.0487%" y="117" width="0.0919%" height="15" fill="rgb(235,212,8)" fg:x="9612340189" fg:w="38309168"/><text x="23.2987%" y="127.50"></text></g><g><title>core::num::&lt;impl u64&gt;::leading_zeros (38,309,168 samples, 0.09%)</title><rect x="23.0487%" y="101" width="0.0919%" height="15" fill="rgb(223,33,50)" fg:x="9612340189" fg:w="38309168"/><text x="23.2987%" y="111.50"></text></g><g><title>shiro::engine::core::bitboard::Bitboard::pop_rightmost (942,612,329 samples, 2.26%)</title><rect x="23.1406%" y="117" width="2.2602%" height="15" fill="rgb(219,149,13)" fg:x="9650649357" fg:w="942612329"/><text x="23.3906%" y="127.50">s..</text></g><g><title>core::num::&lt;impl u64&gt;::trailing_zeros (931,679,663 samples, 2.23%)</title><rect x="23.1668%" y="101" width="2.2340%" height="15" fill="rgb(250,156,29)" fg:x="9661582023" fg:w="931679663"/><text x="23.4168%" y="111.50">c..</text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_moves_king_normal (1,019,226,454 samples, 2.44%)</title><rect x="23.0225%" y="133" width="2.4439%" height="15" fill="rgb(216,193,19)" fg:x="9601405194" fg:w="1019226454"/><text x="23.2725%" y="143.50">sh..</text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::add_move (27,369,962 samples, 0.07%)</title><rect x="25.4008%" y="117" width="0.0656%" height="15" fill="rgb(216,135,14)" fg:x="10593261686" fg:w="27369962"/><text x="25.6508%" y="127.50"></text></g><g><title>shiro::engine::common::movelist::MoveList::emplace_bytes (27,369,962 samples, 0.07%)</title><rect x="25.4008%" y="101" width="0.0656%" height="15" fill="rgb(241,47,5)" fg:x="10593261686" fg:w="27369962"/><text x="25.6508%" y="111.50"></text></g><g><title>core::ptr::write (5,476,365 samples, 0.01%)</title><rect x="25.4533%" y="85" width="0.0131%" height="15" fill="rgb(233,42,35)" fg:x="10615155283" fg:w="5476365"/><text x="25.7033%" y="95.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_moves_knight (21,911,272 samples, 0.05%)</title><rect x="25.4665%" y="133" width="0.0525%" height="15" fill="rgb(231,13,6)" fg:x="10620631648" fg:w="21911272"/><text x="25.7165%" y="143.50"></text></g><g><title>shiro::engine::core::bitboard::Bitboard::pop_rightmost (5,496,921 samples, 0.01%)</title><rect x="25.5058%" y="117" width="0.0132%" height="15" fill="rgb(207,181,40)" fg:x="10637045999" fg:w="5496921"/><text x="25.7558%" y="127.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::BitAnd&gt;::bitand (5,497,716 samples, 0.01%)</title><rect x="25.5190%" y="117" width="0.0132%" height="15" fill="rgb(254,173,49)" fg:x="10642542920" fg:w="5497716"/><text x="25.7690%" y="127.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitAnd&gt;::bitand (5,497,716 samples, 0.01%)</title><rect x="25.5190%" y="101" width="0.0132%" height="15" fill="rgb(221,1,38)" fg:x="10642542920" fg:w="5497716"/><text x="25.7690%" y="111.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::BitOr&gt;::bitor (5,471,894 samples, 0.01%)</title><rect x="25.5322%" y="117" width="0.0131%" height="15" fill="rgb(206,124,46)" fg:x="10648040636" fg:w="5471894"/><text x="25.7822%" y="127.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitOr&gt;::bitor (5,471,894 samples, 0.01%)</title><rect x="25.5322%" y="101" width="0.0131%" height="15" fill="rgb(249,21,11)" fg:x="10648040636" fg:w="5471894"/><text x="25.7822%" y="111.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::BitXorAssign&gt;::bitxor_assign (5,468,152 samples, 0.01%)</title><rect x="25.5453%" y="117" width="0.0131%" height="15" fill="rgb(222,201,40)" fg:x="10653512530" fg:w="5468152"/><text x="25.7953%" y="127.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitXorAssign&gt;::bitxor_assign (5,468,152 samples, 0.01%)</title><rect x="25.5453%" y="101" width="0.0131%" height="15" fill="rgb(235,61,29)" fg:x="10653512530" fg:w="5468152"/><text x="25.7953%" y="111.50"></text></g><g><title>shiro::engine::core::bitboard::Bitboard::pop_rightmost (5,496,357 samples, 0.01%)</title><rect x="25.5584%" y="117" width="0.0132%" height="15" fill="rgb(219,207,3)" fg:x="10658980682" fg:w="5496357"/><text x="25.8084%" y="127.50"></text></g><g><title>core::num::&lt;impl u64&gt;::trailing_zeros (5,496,357 samples, 0.01%)</title><rect x="25.5584%" y="101" width="0.0132%" height="15" fill="rgb(222,56,46)" fg:x="10658980682" fg:w="5496357"/><text x="25.8084%" y="111.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_moves_pawn_captures (27,434,143 samples, 0.07%)</title><rect x="25.5190%" y="133" width="0.0658%" height="15" fill="rgb(239,76,54)" fg:x="10642542920" fg:w="27434143"/><text x="25.7690%" y="143.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::add_move (5,500,024 samples, 0.01%)</title><rect x="25.5716%" y="117" width="0.0132%" height="15" fill="rgb(231,124,27)" fg:x="10664477039" fg:w="5500024"/><text x="25.8216%" y="127.50"></text></g><g><title>shiro::engine::common::movelist::MoveList::emplace_bytes (5,500,024 samples, 0.01%)</title><rect x="25.5716%" y="101" width="0.0132%" height="15" fill="rgb(249,195,6)" fg:x="10664477039" fg:w="5500024"/><text x="25.8216%" y="111.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::BitAnd&gt;::bitand (5,477,628 samples, 0.01%)</title><rect x="25.6110%" y="117" width="0.0131%" height="15" fill="rgb(237,174,47)" fg:x="10680928441" fg:w="5477628"/><text x="25.8610%" y="127.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitAnd&gt;::bitand (5,477,628 samples, 0.01%)</title><rect x="25.6110%" y="101" width="0.0131%" height="15" fill="rgb(206,201,31)" fg:x="10680928441" fg:w="5477628"/><text x="25.8610%" y="111.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_all_moves (2,002,503,022 samples, 4.80%)</title><rect x="20.8357%" y="149" width="4.8017%" height="15" fill="rgb(231,57,52)" fg:x="8689402932" fg:w="2002503022"/><text x="21.0857%" y="159.50">shiro:..</text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_moves_pawn_pushes (21,928,891 samples, 0.05%)</title><rect x="25.5848%" y="133" width="0.0526%" height="15" fill="rgb(248,177,22)" fg:x="10669977063" fg:w="21928891"/><text x="25.8348%" y="143.50"></text></g><g><title>shiro::engine::core::bitboard::Bitboard::pop_rightmost (5,499,885 samples, 0.01%)</title><rect x="25.6242%" y="117" width="0.0132%" height="15" fill="rgb(215,211,37)" fg:x="10686406069" fg:w="5499885"/><text x="25.8742%" y="127.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::BitAnd&gt;::bitand (100,150,368 samples, 0.24%)</title><rect x="26.6610%" y="133" width="0.2401%" height="15" fill="rgb(241,128,51)" fg:x="11118794343" fg:w="100150368"/><text x="26.9110%" y="143.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitAnd&gt;::bitand (100,150,368 samples, 0.24%)</title><rect x="26.6610%" y="117" width="0.2401%" height="15" fill="rgb(227,165,31)" fg:x="11118794343" fg:w="100150368"/><text x="26.9110%" y="127.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::BitOr&gt;::bitor (10,895,400 samples, 0.03%)</title><rect x="26.9011%" y="133" width="0.0261%" height="15" fill="rgb(228,167,24)" fg:x="11218944711" fg:w="10895400"/><text x="27.1511%" y="143.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitOr&gt;::bitor (10,895,400 samples, 0.03%)</title><rect x="26.9011%" y="117" width="0.0261%" height="15" fill="rgb(228,143,12)" fg:x="11218944711" fg:w="10895400"/><text x="27.1511%" y="127.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::Not&gt;::not (44,868,216 samples, 0.11%)</title><rect x="26.9272%" y="133" width="0.1076%" height="15" fill="rgb(249,149,8)" fg:x="11229840111" fg:w="44868216"/><text x="27.1772%" y="143.50"></text></g><g><title>&lt;u64 as core::ops::bit::Not&gt;::not (44,868,216 samples, 0.11%)</title><rect x="26.9272%" y="117" width="0.1076%" height="15" fill="rgb(243,35,44)" fg:x="11229840111" fg:w="44868216"/><text x="27.1772%" y="127.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::BitAnd&gt;::bitand (98,535,830 samples, 0.24%)</title><rect x="27.5602%" y="117" width="0.2363%" height="15" fill="rgb(246,89,9)" fg:x="11493811700" fg:w="98535830"/><text x="27.8102%" y="127.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitAnd&gt;::bitand (98,535,830 samples, 0.24%)</title><rect x="27.5602%" y="101" width="0.2363%" height="15" fill="rgb(233,213,13)" fg:x="11493811700" fg:w="98535830"/><text x="27.8102%" y="111.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::BitOr&gt;::bitor (21,902,296 samples, 0.05%)</title><rect x="27.7965%" y="117" width="0.0525%" height="15" fill="rgb(233,141,41)" fg:x="11592347530" fg:w="21902296"/><text x="28.0465%" y="127.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitOr&gt;::bitor (21,902,296 samples, 0.05%)</title><rect x="27.7965%" y="101" width="0.0525%" height="15" fill="rgb(239,167,4)" fg:x="11592347530" fg:w="21902296"/><text x="28.0465%" y="111.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::BitOrAssign&gt;::bitor_assign (16,439,944 samples, 0.04%)</title><rect x="27.8490%" y="117" width="0.0394%" height="15" fill="rgb(209,217,16)" fg:x="11614249826" fg:w="16439944"/><text x="28.0990%" y="127.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitOrAssign&gt;::bitor_assign (16,439,944 samples, 0.04%)</title><rect x="27.8490%" y="101" width="0.0394%" height="15" fill="rgb(219,88,35)" fg:x="11614249826" fg:w="16439944"/><text x="28.0990%" y="111.50"></text></g><g><title>core::cmp::PartialEq::ne (87,713,827 samples, 0.21%)</title><rect x="27.8884%" y="117" width="0.2103%" height="15" fill="rgb(220,193,23)" fg:x="11630689770" fg:w="87713827"/><text x="28.1384%" y="127.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::cmp::PartialEq&lt;u64&gt;&gt;::eq (87,713,827 samples, 0.21%)</title><rect x="27.8884%" y="101" width="0.2103%" height="15" fill="rgb(230,90,52)" fg:x="11630689770" fg:w="87713827"/><text x="28.1384%" y="111.50"></text></g><g><title>core::num::&lt;impl u64&gt;::count_ones (43,745,775 samples, 0.10%)</title><rect x="28.0987%" y="117" width="0.1049%" height="15" fill="rgb(252,106,19)" fg:x="11718403597" fg:w="43745775"/><text x="28.3487%" y="127.50"></text></g><g><title>shiro::engine::core::bitboard::Bitboard::pop_rightmost (21,920,512 samples, 0.05%)</title><rect x="28.2036%" y="117" width="0.0526%" height="15" fill="rgb(206,74,20)" fg:x="11762149372" fg:w="21920512"/><text x="28.4536%" y="127.50"></text></g><g><title>shiro::engine::core::bitboard::Bitboard::set (10,953,547 samples, 0.03%)</title><rect x="28.2562%" y="117" width="0.0263%" height="15" fill="rgb(230,138,44)" fg:x="11784069884" fg:w="10953547"/><text x="28.5062%" y="127.50"></text></g><g><title>shiro::engine::core::bitboard::Bitboard::unbounded_shl (21,908,103 samples, 0.05%)</title><rect x="28.2825%" y="117" width="0.0525%" height="15" fill="rgb(235,182,43)" fg:x="11795023431" fg:w="21908103"/><text x="28.5325%" y="127.50"></text></g><g><title>core::num::&lt;impl u64&gt;::unbounded_shl (21,908,103 samples, 0.05%)</title><rect x="28.2825%" y="101" width="0.0525%" height="15" fill="rgb(242,16,51)" fg:x="11795023431" fg:w="21908103"/><text x="28.5325%" y="111.50"></text></g><g><title>core::num::&lt;impl u64&gt;::unchecked_shl (21,908,103 samples, 0.05%)</title><rect x="28.2825%" y="85" width="0.0525%" height="15" fill="rgb(248,9,4)" fg:x="11795023431" fg:w="21908103"/><text x="28.5325%" y="95.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_check_and_pin_masks (547,721,474 samples, 1.31%)</title><rect x="27.0348%" y="133" width="1.3133%" height="15" fill="rgb(210,31,22)" fg:x="11274708327" fg:w="547721474"/><text x="27.2848%" y="143.50"></text></g><g><title>shiro::engine::core::bitboard::Bitboard::unbounded_shr (5,498,267 samples, 0.01%)</title><rect x="28.3350%" y="117" width="0.0132%" height="15" fill="rgb(239,54,39)" fg:x="11816931534" fg:w="5498267"/><text x="28.5850%" y="127.50"></text></g><g><title>core::num::&lt;impl u64&gt;::unbounded_shr (5,498,267 samples, 0.01%)</title><rect x="28.3350%" y="101" width="0.0132%" height="15" fill="rgb(230,99,41)" fg:x="11816931534" fg:w="5498267"/><text x="28.5850%" y="111.50"></text></g><g><title>core::num::&lt;impl u64&gt;::unchecked_shr (5,498,267 samples, 0.01%)</title><rect x="28.3350%" y="85" width="0.0132%" height="15" fill="rgb(253,106,12)" fg:x="11816931534" fg:w="5498267"/><text x="28.5850%" y="95.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::BitOrAssign&gt;::bitor_assign (29,743,788 samples, 0.07%)</title><rect x="28.3791%" y="117" width="0.0713%" height="15" fill="rgb(213,46,41)" fg:x="11835319176" fg:w="29743788"/><text x="28.6291%" y="127.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitOrAssign&gt;::bitor_assign (29,743,788 samples, 0.07%)</title><rect x="28.3791%" y="101" width="0.0713%" height="15" fill="rgb(215,133,35)" fg:x="11835319176" fg:w="29743788"/><text x="28.6291%" y="111.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::BitXor&gt;::bitxor (32,808,393 samples, 0.08%)</title><rect x="28.4504%" y="117" width="0.0787%" height="15" fill="rgb(213,28,5)" fg:x="11865062964" fg:w="32808393"/><text x="28.7004%" y="127.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitXor&gt;::bitxor (32,808,393 samples, 0.08%)</title><rect x="28.4504%" y="101" width="0.0787%" height="15" fill="rgb(215,77,49)" fg:x="11865062964" fg:w="32808393"/><text x="28.7004%" y="111.50"></text></g><g><title>[unknown] (5,474,315 samples, 0.01%)</title><rect x="28.5159%" y="85" width="0.0131%" height="15" fill="rgb(248,100,22)" fg:x="11892397042" fg:w="5474315"/><text x="28.7659%" y="95.50"></text></g><g><title>core::cmp::PartialEq::ne (654,950,173 samples, 1.57%)</title><rect x="28.5291%" y="117" width="1.5705%" height="15" fill="rgb(208,67,9)" fg:x="11897871357" fg:w="654950173"/><text x="28.7791%" y="127.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::cmp::PartialEq&lt;u64&gt;&gt;::eq (654,950,173 samples, 1.57%)</title><rect x="28.5291%" y="101" width="1.5705%" height="15" fill="rgb(219,133,21)" fg:x="11897871357" fg:w="654950173"/><text x="28.7791%" y="111.50"></text></g><g><title>[unknown] (5,435,478 samples, 0.01%)</title><rect x="30.0865%" y="85" width="0.0130%" height="15" fill="rgb(246,46,29)" fg:x="12547386052" fg:w="5435478"/><text x="30.3365%" y="95.50"></text></g><g><title>shiro::engine::core::bitboard::Bitboard::leading_zeros (27,368,823 samples, 0.07%)</title><rect x="30.0995%" y="117" width="0.0656%" height="15" fill="rgb(246,185,52)" fg:x="12552821530" fg:w="27368823"/><text x="30.3495%" y="127.50"></text></g><g><title>core::num::&lt;impl u64&gt;::leading_zeros (27,368,823 samples, 0.07%)</title><rect x="30.0995%" y="101" width="0.0656%" height="15" fill="rgb(252,136,11)" fg:x="12552821530" fg:w="27368823"/><text x="30.3495%" y="111.50"></text></g><g><title>shiro::engine::core::bitboard::Bitboard::pop_rightmost (43,901,471 samples, 0.11%)</title><rect x="30.1651%" y="117" width="0.1053%" height="15" fill="rgb(219,138,53)" fg:x="12580190353" fg:w="43901471"/><text x="30.4151%" y="127.50"></text></g><g><title>core::num::&lt;impl u64&gt;::trailing_zeros (5,500,624 samples, 0.01%)</title><rect x="30.2572%" y="101" width="0.0132%" height="15" fill="rgb(211,51,23)" fg:x="12618591200" fg:w="5500624"/><text x="30.5072%" y="111.50"></text></g><g><title>shiro::engine::core::bitboard::Bitboard::unbounded_shl (10,948,092 samples, 0.03%)</title><rect x="30.2704%" y="117" width="0.0263%" height="15" fill="rgb(247,221,28)" fg:x="12624091824" fg:w="10948092"/><text x="30.5204%" y="127.50"></text></g><g><title>core::num::&lt;impl u64&gt;::unbounded_shl (10,948,092 samples, 0.03%)</title><rect x="30.2704%" y="101" width="0.0263%" height="15" fill="rgb(251,222,45)" fg:x="12624091824" fg:w="10948092"/><text x="30.5204%" y="111.50"></text></g><g><title>core::num::&lt;impl u64&gt;::unchecked_shl (10,948,092 samples, 0.03%)</title><rect x="30.2704%" y="85" width="0.0263%" height="15" fill="rgb(217,162,53)" fg:x="12624091824" fg:w="10948092"/><text x="30.5204%" y="95.50"></text></g><g><title>shiro::engine::core::bitboard::Bitboard::unbounded_shr (10,968,967 samples, 0.03%)</title><rect x="30.2967%" y="117" width="0.0263%" height="15" fill="rgb(229,93,14)" fg:x="12635039916" fg:w="10968967"/><text x="30.5467%" y="127.50"></text></g><g><title>core::num::&lt;impl u64&gt;::unbounded_shr (10,968,967 samples, 0.03%)</title><rect x="30.2967%" y="101" width="0.0263%" height="15" fill="rgb(209,67,49)" fg:x="12635039916" fg:w="10968967"/><text x="30.5467%" y="111.50"></text></g><g><title>core::num::&lt;impl u64&gt;::unchecked_shr (10,968,967 samples, 0.03%)</title><rect x="30.2967%" y="85" width="0.0263%" height="15" fill="rgb(213,87,29)" fg:x="12635039916" fg:w="10968967"/><text x="30.5467%" y="95.50"></text></g><g><title>shiro::engine::move_gen::masks::king_lookup (32,879,516 samples, 0.08%)</title><rect x="30.3230%" y="117" width="0.0788%" height="15" fill="rgb(205,151,52)" fg:x="12646008883" fg:w="32879516"/><text x="30.5730%" y="127.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (32,879,516 samples, 0.08%)</title><rect x="30.3230%" y="101" width="0.0788%" height="15" fill="rgb(253,215,39)" fg:x="12646008883" fg:w="32879516"/><text x="30.5730%" y="111.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (32,879,516 samples, 0.08%)</title><rect x="30.3230%" y="85" width="0.0788%" height="15" fill="rgb(221,220,41)" fg:x="12646008883" fg:w="32879516"/><text x="30.5730%" y="95.50"></text></g><g><title>core::slice::index::get_noubcheck (32,879,516 samples, 0.08%)</title><rect x="30.3230%" y="69" width="0.0788%" height="15" fill="rgb(218,133,21)" fg:x="12646008883" fg:w="32879516"/><text x="30.5730%" y="79.50"></text></g><g><title>shiro::engine::move_gen::masks::pext_dg_lookup (21,973,897 samples, 0.05%)</title><rect x="30.4018%" y="117" width="0.0527%" height="15" fill="rgb(221,193,43)" fg:x="12678888399" fg:w="21973897"/><text x="30.6518%" y="127.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (21,973,897 samples, 0.05%)</title><rect x="30.4018%" y="101" width="0.0527%" height="15" fill="rgb(240,128,52)" fg:x="12678888399" fg:w="21973897"/><text x="30.6518%" y="111.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (21,973,897 samples, 0.05%)</title><rect x="30.4018%" y="85" width="0.0527%" height="15" fill="rgb(253,114,12)" fg:x="12678888399" fg:w="21973897"/><text x="30.6518%" y="95.50"></text></g><g><title>core::slice::index::get_noubcheck (21,973,897 samples, 0.05%)</title><rect x="30.4018%" y="69" width="0.0527%" height="15" fill="rgb(215,223,47)" fg:x="12678888399" fg:w="21973897"/><text x="30.6518%" y="79.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::new (2,277,918,442 samples, 5.46%)</title><rect x="25.6374%" y="149" width="5.4621%" height="15" fill="rgb(248,225,23)" fg:x="10691905954" fg:w="2277918442"/><text x="25.8874%" y="159.50">shiro::..</text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_seen_by_enemy (1,147,394,595 samples, 2.75%)</title><rect x="28.3482%" y="133" width="2.7513%" height="15" fill="rgb(250,108,0)" fg:x="11822429801" fg:w="1147394595"/><text x="28.5982%" y="143.50">sh..</text></g><g><title>shiro::engine::move_gen::masks::pext_hv_lookup (268,962,100 samples, 0.64%)</title><rect x="30.4545%" y="117" width="0.6449%" height="15" fill="rgb(228,208,7)" fg:x="12700862296" fg:w="268962100"/><text x="30.7045%" y="127.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (135,010,795 samples, 0.32%)</title><rect x="30.7757%" y="101" width="0.3237%" height="15" fill="rgb(244,45,10)" fg:x="12834813601" fg:w="135010795"/><text x="31.0257%" y="111.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (135,010,795 samples, 0.32%)</title><rect x="30.7757%" y="85" width="0.3237%" height="15" fill="rgb(207,125,25)" fg:x="12834813601" fg:w="135010795"/><text x="31.0257%" y="95.50"></text></g><g><title>core::slice::index::get_noubcheck (135,010,795 samples, 0.32%)</title><rect x="30.7757%" y="69" width="0.3237%" height="15" fill="rgb(210,195,18)" fg:x="12834813601" fg:w="135010795"/><text x="31.0257%" y="79.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::BitAnd&gt;::bitand (92,958,791 samples, 0.22%)</title><rect x="31.7485%" y="101" width="0.2229%" height="15" fill="rgb(249,80,12)" fg:x="13240505744" fg:w="92958791"/><text x="31.9985%" y="111.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitAnd&gt;::bitand (92,958,791 samples, 0.22%)</title><rect x="31.7485%" y="85" width="0.2229%" height="15" fill="rgb(221,65,9)" fg:x="13240505744" fg:w="92958791"/><text x="31.9985%" y="95.50"></text></g><g><title>core::cmp::PartialEq::ne (44,009,785 samples, 0.11%)</title><rect x="31.9714%" y="101" width="0.1055%" height="15" fill="rgb(235,49,36)" fg:x="13333464535" fg:w="44009785"/><text x="32.2214%" y="111.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::cmp::PartialEq&lt;u64&gt;&gt;::eq (44,009,785 samples, 0.11%)</title><rect x="31.9714%" y="85" width="0.1055%" height="15" fill="rgb(225,32,20)" fg:x="13333464535" fg:w="44009785"/><text x="32.2214%" y="95.50"></text></g><g><title>shiro::engine::core::bitboard::Bitboard::pop_rightmost (77,299,122 samples, 0.19%)</title><rect x="32.0769%" y="101" width="0.1854%" height="15" fill="rgb(215,141,46)" fg:x="13377474320" fg:w="77299122"/><text x="32.3269%" y="111.50"></text></g><g><title>core::num::&lt;impl u64&gt;::trailing_zeros (22,505,695 samples, 0.05%)</title><rect x="32.2083%" y="85" width="0.0540%" height="15" fill="rgb(250,160,47)" fg:x="13432267747" fg:w="22505695"/><text x="32.4583%" y="95.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::add_move (102,224,447 samples, 0.25%)</title><rect x="32.2622%" y="101" width="0.2451%" height="15" fill="rgb(216,222,40)" fg:x="13454773442" fg:w="102224447"/><text x="32.5122%" y="111.50"></text></g><g><title>shiro::engine::common::movelist::MoveList::emplace_bytes (102,224,447 samples, 0.25%)</title><rect x="32.2622%" y="85" width="0.2451%" height="15" fill="rgb(234,217,39)" fg:x="13454773442" fg:w="102224447"/><text x="32.5122%" y="95.50"></text></g><g><title>core::ptr::write (60,017,087 samples, 0.14%)</title><rect x="32.3635%" y="69" width="0.1439%" height="15" fill="rgb(207,178,40)" fg:x="13496980802" fg:w="60017087"/><text x="32.6135%" y="79.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_moves_dg (349,398,656 samples, 0.84%)</title><rect x="31.6959%" y="117" width="0.8378%" height="15" fill="rgb(221,136,13)" fg:x="13218575393" fg:w="349398656"/><text x="31.9459%" y="127.50"></text></g><g><title>shiro::engine::move_gen::masks::pext_dg_lookup (10,976,160 samples, 0.03%)</title><rect x="32.5074%" y="101" width="0.0263%" height="15" fill="rgb(249,199,10)" fg:x="13556997889" fg:w="10976160"/><text x="32.7574%" y="111.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (10,976,160 samples, 0.03%)</title><rect x="32.5074%" y="85" width="0.0263%" height="15" fill="rgb(249,222,13)" fg:x="13556997889" fg:w="10976160"/><text x="32.7574%" y="95.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (10,976,160 samples, 0.03%)</title><rect x="32.5074%" y="69" width="0.0263%" height="15" fill="rgb(244,185,38)" fg:x="13556997889" fg:w="10976160"/><text x="32.7574%" y="79.50"></text></g><g><title>core::slice::index::get_noubcheck (10,976,160 samples, 0.03%)</title><rect x="32.5074%" y="53" width="0.0263%" height="15" fill="rgb(236,202,9)" fg:x="13556997889" fg:w="10976160"/><text x="32.7574%" y="63.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::BitAnd&gt;::bitand (5,479,700 samples, 0.01%)</title><rect x="33.3148%" y="101" width="0.0131%" height="15" fill="rgb(250,229,37)" fg:x="13893724869" fg:w="5479700"/><text x="33.5648%" y="111.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitAnd&gt;::bitand (5,479,700 samples, 0.01%)</title><rect x="33.3148%" y="85" width="0.0131%" height="15" fill="rgb(206,174,23)" fg:x="13893724869" fg:w="5479700"/><text x="33.5648%" y="95.50"></text></g><g><title>core::cmp::PartialEq::ne (180,516,826 samples, 0.43%)</title><rect x="33.3279%" y="101" width="0.4328%" height="15" fill="rgb(211,33,43)" fg:x="13899204569" fg:w="180516826"/><text x="33.5779%" y="111.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::cmp::PartialEq&lt;u64&gt;&gt;::eq (180,516,826 samples, 0.43%)</title><rect x="33.3279%" y="85" width="0.4328%" height="15" fill="rgb(245,58,50)" fg:x="13899204569" fg:w="180516826"/><text x="33.5779%" y="95.50"></text></g><g><title>shiro::engine::core::bitboard::Bitboard::pop_rightmost (366,781,338 samples, 0.88%)</title><rect x="33.7608%" y="101" width="0.8795%" height="15" fill="rgb(244,68,36)" fg:x="14079721395" fg:w="366781338"/><text x="34.0108%" y="111.50"></text></g><g><title>core::num::&lt;impl u64&gt;::trailing_zeros (54,759,547 samples, 0.13%)</title><rect x="34.5089%" y="85" width="0.1313%" height="15" fill="rgb(232,229,15)" fg:x="14391743186" fg:w="54759547"/><text x="34.7589%" y="95.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::add_move (1,351,713,191 samples, 3.24%)</title><rect x="34.6402%" y="101" width="3.2412%" height="15" fill="rgb(254,30,23)" fg:x="14446502733" fg:w="1351713191"/><text x="34.8902%" y="111.50">shi..</text></g><g><title>shiro::engine::common::movelist::MoveList::emplace_bytes (1,351,713,191 samples, 3.24%)</title><rect x="34.6402%" y="85" width="3.2412%" height="15" fill="rgb(235,160,14)" fg:x="14446502733" fg:w="1351713191"/><text x="34.8902%" y="95.50">shi..</text></g><g><title>core::ptr::write (317,358,706 samples, 0.76%)</title><rect x="37.1205%" y="69" width="0.7610%" height="15" fill="rgb(212,155,44)" fg:x="15480857218" fg:w="317358706"/><text x="37.3705%" y="79.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_moves_hv (2,383,511,984 samples, 5.72%)</title><rect x="32.5337%" y="117" width="5.7153%" height="15" fill="rgb(226,2,50)" fg:x="13567974049" fg:w="2383511984"/><text x="32.7837%" y="127.50">shiro::..</text></g><g><title>shiro::engine::move_gen::masks::pext_hv_lookup (153,270,109 samples, 0.37%)</title><rect x="37.8814%" y="101" width="0.3675%" height="15" fill="rgb(234,177,6)" fg:x="15798215924" fg:w="153270109"/><text x="38.1314%" y="111.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (76,510,372 samples, 0.18%)</title><rect x="38.0655%" y="85" width="0.1835%" height="15" fill="rgb(217,24,9)" fg:x="15874975661" fg:w="76510372"/><text x="38.3155%" y="95.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (76,510,372 samples, 0.18%)</title><rect x="38.0655%" y="69" width="0.1835%" height="15" fill="rgb(220,13,46)" fg:x="15874975661" fg:w="76510372"/><text x="38.3155%" y="79.50"></text></g><g><title>core::slice::index::get_noubcheck (76,510,372 samples, 0.18%)</title><rect x="38.0655%" y="53" width="0.1835%" height="15" fill="rgb(239,221,27)" fg:x="15874975661" fg:w="76510372"/><text x="38.3155%" y="63.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::BitAnd&gt;::bitand (5,497,090 samples, 0.01%)</title><rect x="38.2621%" y="101" width="0.0132%" height="15" fill="rgb(222,198,25)" fg:x="15956986331" fg:w="5497090"/><text x="38.5121%" y="111.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitAnd&gt;::bitand (5,497,090 samples, 0.01%)</title><rect x="38.2621%" y="85" width="0.0132%" height="15" fill="rgb(211,99,13)" fg:x="15956986331" fg:w="5497090"/><text x="38.5121%" y="95.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_moves_king_castle (27,431,115 samples, 0.07%)</title><rect x="38.2489%" y="117" width="0.0658%" height="15" fill="rgb(232,111,31)" fg:x="15951486033" fg:w="27431115"/><text x="38.4989%" y="127.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::add_move (16,433,727 samples, 0.04%)</title><rect x="38.2753%" y="101" width="0.0394%" height="15" fill="rgb(245,82,37)" fg:x="15962483421" fg:w="16433727"/><text x="38.5253%" y="111.50"></text></g><g><title>shiro::engine::common::movelist::MoveList::emplace_bytes (16,433,727 samples, 0.04%)</title><rect x="38.2753%" y="85" width="0.0394%" height="15" fill="rgb(227,149,46)" fg:x="15962483421" fg:w="16433727"/><text x="38.5253%" y="95.50"></text></g><g><title>core::ptr::write (16,433,727 samples, 0.04%)</title><rect x="38.2753%" y="69" width="0.0394%" height="15" fill="rgb(218,36,50)" fg:x="15962483421" fg:w="16433727"/><text x="38.5253%" y="79.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::BitAnd&gt;::bitand (5,483,356 samples, 0.01%)</title><rect x="38.3672%" y="101" width="0.0131%" height="15" fill="rgb(226,80,48)" fg:x="16000787666" fg:w="5483356"/><text x="38.6172%" y="111.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitAnd&gt;::bitand (5,483,356 samples, 0.01%)</title><rect x="38.3672%" y="85" width="0.0131%" height="15" fill="rgb(238,224,15)" fg:x="16000787666" fg:w="5483356"/><text x="38.6172%" y="95.50"></text></g><g><title>core::cmp::PartialEq::ne (16,414,131 samples, 0.04%)</title><rect x="38.3803%" y="101" width="0.0394%" height="15" fill="rgb(241,136,10)" fg:x="16006271022" fg:w="16414131"/><text x="38.6303%" y="111.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::cmp::PartialEq&lt;u64&gt;&gt;::eq (16,414,131 samples, 0.04%)</title><rect x="38.3803%" y="85" width="0.0394%" height="15" fill="rgb(208,32,45)" fg:x="16006271022" fg:w="16414131"/><text x="38.6303%" y="95.50"></text></g><g><title>shiro::engine::core::bitboard::Bitboard::leading_zeros (16,443,223 samples, 0.04%)</title><rect x="38.4197%" y="101" width="0.0394%" height="15" fill="rgb(207,135,9)" fg:x="16022685153" fg:w="16443223"/><text x="38.6697%" y="111.50"></text></g><g><title>core::num::&lt;impl u64&gt;::leading_zeros (16,443,223 samples, 0.04%)</title><rect x="38.4197%" y="85" width="0.0394%" height="15" fill="rgb(206,86,44)" fg:x="16022685153" fg:w="16443223"/><text x="38.6697%" y="95.50"></text></g><g><title>shiro::engine::core::bitboard::Bitboard::pop_rightmost (3,136,644,740 samples, 7.52%)</title><rect x="38.4591%" y="101" width="7.5211%" height="15" fill="rgb(245,177,15)" fg:x="16039128376" fg:w="3136644740"/><text x="38.7091%" y="111.50">shiro::eng..</text></g><g><title>core::num::&lt;impl u64&gt;::trailing_zeros (3,060,039,986 samples, 7.34%)</title><rect x="38.6428%" y="85" width="7.3375%" height="15" fill="rgb(206,64,50)" fg:x="16115733130" fg:w="3060039986"/><text x="38.8928%" y="95.50">core::num:..</text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_moves_king_normal (3,328,341,453 samples, 7.98%)</title><rect x="38.3147%" y="117" width="7.9808%" height="15" fill="rgb(234,36,40)" fg:x="15978917148" fg:w="3328341453"/><text x="38.5647%" y="127.50">shiro::engi..</text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::add_move (131,485,485 samples, 0.32%)</title><rect x="45.9802%" y="101" width="0.3153%" height="15" fill="rgb(213,64,8)" fg:x="19175773116" fg:w="131485485"/><text x="46.2302%" y="111.50"></text></g><g><title>shiro::engine::common::movelist::MoveList::emplace_bytes (131,485,485 samples, 0.32%)</title><rect x="45.9802%" y="85" width="0.3153%" height="15" fill="rgb(210,75,36)" fg:x="19175773116" fg:w="131485485"/><text x="46.2302%" y="95.50"></text></g><g><title>core::ptr::write (38,275,443 samples, 0.09%)</title><rect x="46.2037%" y="69" width="0.0918%" height="15" fill="rgb(229,88,21)" fg:x="19268983158" fg:w="38275443"/><text x="46.4537%" y="79.50"></text></g><g><title>core::cmp::PartialEq::ne (32,913,513 samples, 0.08%)</title><rect x="46.4269%" y="101" width="0.0789%" height="15" fill="rgb(252,204,47)" fg:x="19362043695" fg:w="32913513"/><text x="46.6769%" y="111.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::cmp::PartialEq&lt;u64&gt;&gt;::eq (32,913,513 samples, 0.08%)</title><rect x="46.4269%" y="85" width="0.0789%" height="15" fill="rgb(208,77,27)" fg:x="19362043695" fg:w="32913513"/><text x="46.6769%" y="95.50"></text></g><g><title>shiro::engine::core::bitboard::Bitboard::pop_rightmost (65,851,957 samples, 0.16%)</title><rect x="46.5058%" y="101" width="0.1579%" height="15" fill="rgb(221,76,26)" fg:x="19394957208" fg:w="65851957"/><text x="46.7558%" y="111.50"></text></g><g><title>core::num::&lt;impl u64&gt;::trailing_zeros (10,980,857 samples, 0.03%)</title><rect x="46.6374%" y="85" width="0.0263%" height="15" fill="rgb(225,139,18)" fg:x="19449828308" fg:w="10980857"/><text x="46.8874%" y="95.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_moves_knight (307,254,428 samples, 0.74%)</title><rect x="46.2955%" y="117" width="0.7367%" height="15" fill="rgb(230,137,11)" fg:x="19307258601" fg:w="307254428"/><text x="46.5455%" y="127.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::add_move (153,703,864 samples, 0.37%)</title><rect x="46.6637%" y="101" width="0.3686%" height="15" fill="rgb(212,28,1)" fg:x="19460809165" fg:w="153703864"/><text x="46.9137%" y="111.50"></text></g><g><title>shiro::engine::common::movelist::MoveList::emplace_bytes (153,703,864 samples, 0.37%)</title><rect x="46.6637%" y="85" width="0.3686%" height="15" fill="rgb(248,164,17)" fg:x="19460809165" fg:w="153703864"/><text x="46.9137%" y="95.50"></text></g><g><title>core::ptr::write (54,899,638 samples, 0.13%)</title><rect x="46.9006%" y="69" width="0.1316%" height="15" fill="rgb(222,171,42)" fg:x="19559613391" fg:w="54899638"/><text x="47.1506%" y="79.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::BitAnd&gt;::bitand (16,458,928 samples, 0.04%)</title><rect x="47.0323%" y="101" width="0.0395%" height="15" fill="rgb(243,84,45)" fg:x="19614513029" fg:w="16458928"/><text x="47.2823%" y="111.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitAnd&gt;::bitand (16,458,928 samples, 0.04%)</title><rect x="47.0323%" y="85" width="0.0395%" height="15" fill="rgb(252,49,23)" fg:x="19614513029" fg:w="16458928"/><text x="47.2823%" y="95.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::BitOr&gt;::bitor (27,331,018 samples, 0.07%)</title><rect x="47.0717%" y="101" width="0.0655%" height="15" fill="rgb(215,19,7)" fg:x="19630971957" fg:w="27331018"/><text x="47.3217%" y="111.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitOr&gt;::bitor (27,331,018 samples, 0.07%)</title><rect x="47.0717%" y="85" width="0.0655%" height="15" fill="rgb(238,81,41)" fg:x="19630971957" fg:w="27331018"/><text x="47.3217%" y="95.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::BitXorAssign&gt;::bitxor_assign (16,417,370 samples, 0.04%)</title><rect x="47.1373%" y="101" width="0.0394%" height="15" fill="rgb(210,199,37)" fg:x="19658302975" fg:w="16417370"/><text x="47.3873%" y="111.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitXorAssign&gt;::bitxor_assign (16,417,370 samples, 0.04%)</title><rect x="47.1373%" y="85" width="0.0394%" height="15" fill="rgb(244,192,49)" fg:x="19658302975" fg:w="16417370"/><text x="47.3873%" y="95.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::Not&gt;::not (21,890,036 samples, 0.05%)</title><rect x="47.1766%" y="101" width="0.0525%" height="15" fill="rgb(226,211,11)" fg:x="19674720345" fg:w="21890036"/><text x="47.4266%" y="111.50"></text></g><g><title>&lt;u64 as core::ops::bit::Not&gt;::not (21,890,036 samples, 0.05%)</title><rect x="47.1766%" y="85" width="0.0525%" height="15" fill="rgb(236,162,54)" fg:x="19674720345" fg:w="21890036"/><text x="47.4266%" y="95.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::Shl&lt;__RhsT&gt;&gt;::shl (5,487,958 samples, 0.01%)</title><rect x="47.2291%" y="101" width="0.0132%" height="15" fill="rgb(220,229,9)" fg:x="19696610381" fg:w="5487958"/><text x="47.4791%" y="111.50"></text></g><g><title>&lt;u64 as core::ops::bit::Shl&lt;i32&gt;&gt;::shl (5,487,958 samples, 0.01%)</title><rect x="47.2291%" y="85" width="0.0132%" height="15" fill="rgb(250,87,22)" fg:x="19696610381" fg:w="5487958"/><text x="47.4791%" y="95.50"></text></g><g><title>shiro::engine::core::bitboard::Bitboard::pop_rightmost (16,473,503 samples, 0.04%)</title><rect x="47.2423%" y="101" width="0.0395%" height="15" fill="rgb(239,43,17)" fg:x="19702098339" fg:w="16473503"/><text x="47.4923%" y="111.50"></text></g><g><title>core::num::&lt;impl u64&gt;::trailing_zeros (10,976,840 samples, 0.03%)</title><rect x="47.2554%" y="85" width="0.0263%" height="15" fill="rgb(231,177,25)" fg:x="19707595002" fg:w="10976840"/><text x="47.5054%" y="95.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::add_move (38,461,162 samples, 0.09%)</title><rect x="47.2818%" y="101" width="0.0922%" height="15" fill="rgb(219,179,1)" fg:x="19718571842" fg:w="38461162"/><text x="47.5318%" y="111.50"></text></g><g><title>shiro::engine::common::movelist::MoveList::emplace_bytes (38,461,162 samples, 0.09%)</title><rect x="47.2818%" y="85" width="0.0922%" height="15" fill="rgb(238,219,53)" fg:x="19718571842" fg:w="38461162"/><text x="47.5318%" y="95.50"></text></g><g><title>core::ptr::write (16,487,923 samples, 0.04%)</title><rect x="47.3345%" y="69" width="0.0395%" height="15" fill="rgb(232,167,36)" fg:x="19740545081" fg:w="16487923"/><text x="47.5845%" y="79.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_moves_pawn_captures (158,952,308 samples, 0.38%)</title><rect x="47.0323%" y="117" width="0.3811%" height="15" fill="rgb(244,19,51)" fg:x="19614513029" fg:w="158952308"/><text x="47.2823%" y="127.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::add_promotions (16,432,333 samples, 0.04%)</title><rect x="47.3740%" y="101" width="0.0394%" height="15" fill="rgb(224,6,22)" fg:x="19757033004" fg:w="16432333"/><text x="47.6240%" y="111.50"></text></g><g><title>shiro::engine::common::movelist::MoveList::emplace_bytes (16,432,333 samples, 0.04%)</title><rect x="47.3740%" y="85" width="0.0394%" height="15" fill="rgb(224,145,5)" fg:x="19757033004" fg:w="16432333"/><text x="47.6240%" y="95.50"></text></g><g><title>core::ptr::write (10,951,455 samples, 0.03%)</title><rect x="47.3871%" y="69" width="0.0263%" height="15" fill="rgb(234,130,49)" fg:x="19762513882" fg:w="10951455"/><text x="47.6371%" y="79.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::BitAnd&gt;::bitand (38,382,380 samples, 0.09%)</title><rect x="47.4791%" y="101" width="0.0920%" height="15" fill="rgb(254,6,2)" fg:x="19800869317" fg:w="38382380"/><text x="47.7291%" y="111.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitAnd&gt;::bitand (38,382,380 samples, 0.09%)</title><rect x="47.4791%" y="85" width="0.0920%" height="15" fill="rgb(208,96,46)" fg:x="19800869317" fg:w="38382380"/><text x="47.7291%" y="95.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::BitAndAssign&gt;::bitand_assign (16,401,742 samples, 0.04%)</title><rect x="47.5711%" y="101" width="0.0393%" height="15" fill="rgb(239,3,39)" fg:x="19839251697" fg:w="16401742"/><text x="47.8211%" y="111.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitAndAssign&gt;::bitand_assign (16,401,742 samples, 0.04%)</title><rect x="47.5711%" y="85" width="0.0393%" height="15" fill="rgb(233,210,1)" fg:x="19839251697" fg:w="16401742"/><text x="47.8211%" y="95.50"></text></g><g><title>core::cmp::PartialEq::ne (5,482,809 samples, 0.01%)</title><rect x="47.6105%" y="101" width="0.0131%" height="15" fill="rgb(244,137,37)" fg:x="19855653439" fg:w="5482809"/><text x="47.8605%" y="111.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::cmp::PartialEq&lt;u64&gt;&gt;::eq (5,482,809 samples, 0.01%)</title><rect x="47.6105%" y="85" width="0.0131%" height="15" fill="rgb(240,136,2)" fg:x="19855653439" fg:w="5482809"/><text x="47.8605%" y="95.50"></text></g><g><title>shiro::engine::common::constants::rank_from_pos (10,937,442 samples, 0.03%)</title><rect x="47.6236%" y="101" width="0.0262%" height="15" fill="rgb(239,18,37)" fg:x="19861136248" fg:w="10937442"/><text x="47.8736%" y="111.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::Shr&lt;__RhsT&gt;&gt;::shr (10,937,442 samples, 0.03%)</title><rect x="47.6236%" y="85" width="0.0262%" height="15" fill="rgb(218,185,22)" fg:x="19861136248" fg:w="10937442"/><text x="47.8736%" y="95.50"></text></g><g><title>&lt;u64 as core::ops::bit::Shr&lt;usize&gt;&gt;::shr (10,937,442 samples, 0.03%)</title><rect x="47.6236%" y="69" width="0.0262%" height="15" fill="rgb(225,218,4)" fg:x="19861136248" fg:w="10937442"/><text x="47.8736%" y="79.50"></text></g><g><title>shiro::engine::core::bitboard::Bitboard::pop_rightmost (18,842,233 samples, 0.05%)</title><rect x="47.6498%" y="101" width="0.0452%" height="15" fill="rgb(230,182,32)" fg:x="19872073690" fg:w="18842233"/><text x="47.8998%" y="111.50"></text></g><g><title>shiro::engine::core::bitboard::Bitboard::unbounded_shl (27,406,658 samples, 0.07%)</title><rect x="47.6950%" y="101" width="0.0657%" height="15" fill="rgb(242,56,43)" fg:x="19890915923" fg:w="27406658"/><text x="47.9450%" y="111.50"></text></g><g><title>core::num::&lt;impl u64&gt;::unbounded_shl (27,406,658 samples, 0.07%)</title><rect x="47.6950%" y="85" width="0.0657%" height="15" fill="rgb(233,99,24)" fg:x="19890915923" fg:w="27406658"/><text x="47.9450%" y="95.50"></text></g><g><title>core::num::&lt;impl u64&gt;::unchecked_shl (27,406,658 samples, 0.07%)</title><rect x="47.6950%" y="69" width="0.0657%" height="15" fill="rgb(234,209,42)" fg:x="19890915923" fg:w="27406658"/><text x="47.9450%" y="79.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::add_move (5,479,636 samples, 0.01%)</title><rect x="47.7607%" y="101" width="0.0131%" height="15" fill="rgb(227,7,12)" fg:x="19918322581" fg:w="5479636"/><text x="48.0107%" y="111.50"></text></g><g><title>shiro::engine::common::movelist::MoveList::emplace_bytes (5,479,636 samples, 0.01%)</title><rect x="47.7607%" y="85" width="0.0131%" height="15" fill="rgb(245,203,43)" fg:x="19918322581" fg:w="5479636"/><text x="48.0107%" y="95.50"></text></g><g><title>core::ptr::write (5,479,636 samples, 0.01%)</title><rect x="47.7607%" y="69" width="0.0131%" height="15" fill="rgb(238,205,33)" fg:x="19918322581" fg:w="5479636"/><text x="48.0107%" y="79.50"></text></g><g><title>shiro::engine::move_gen::gen_moves (6,986,874,476 samples, 16.75%)</title><rect x="31.0994%" y="149" width="16.7533%" height="15" fill="rgb(231,56,7)" fg:x="12969824396" fg:w="6986874476"/><text x="31.3494%" y="159.50">shiro::engine::move_gen::g..</text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_all_moves (6,803,759,656 samples, 16.31%)</title><rect x="31.5385%" y="133" width="16.3143%" height="15" fill="rgb(244,186,29)" fg:x="13152939216" fg:w="6803759656"/><text x="31.7885%" y="143.50">shiro::engine::move_gen::..</text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::gen_moves_pawn_pushes (183,233,535 samples, 0.44%)</title><rect x="47.4134%" y="117" width="0.4394%" height="15" fill="rgb(234,111,31)" fg:x="19773465337" fg:w="183233535"/><text x="47.6634%" y="127.50"></text></g><g><title>shiro::engine::move_gen::MoveGen&lt;_,_,_,_,_,_&gt;::add_promotions (32,896,655 samples, 0.08%)</title><rect x="47.7739%" y="101" width="0.0789%" height="15" fill="rgb(241,149,10)" fg:x="19923802217" fg:w="32896655"/><text x="48.0239%" y="111.50"></text></g><g><title>shiro::engine::common::movelist::MoveList::emplace_bytes (32,896,655 samples, 0.08%)</title><rect x="47.7739%" y="85" width="0.0789%" height="15" fill="rgb(249,206,44)" fg:x="19923802217" fg:w="32896655"/><text x="48.0239%" y="95.50"></text></g><g><title>core::ptr::write (16,454,999 samples, 0.04%)</title><rect x="47.8133%" y="69" width="0.0395%" height="15" fill="rgb(251,153,30)" fg:x="19940243873" fg:w="16454999"/><text x="48.0633%" y="79.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::BitAndAssign&gt;::bitand_assign (49,332,731 samples, 0.12%)</title><rect x="91.3219%" y="133" width="0.1183%" height="15" fill="rgb(239,152,38)" fg:x="38085251508" fg:w="49332731"/><text x="91.5719%" y="143.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitAndAssign&gt;::bitand_assign (49,332,731 samples, 0.12%)</title><rect x="91.3219%" y="117" width="0.1183%" height="15" fill="rgb(249,139,47)" fg:x="38085251508" fg:w="49332731"/><text x="91.5719%" y="127.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::BitOrAssign&gt;::bitor_assign (333,933,356 samples, 0.80%)</title><rect x="91.4402%" y="133" width="0.8007%" height="15" fill="rgb(244,64,35)" fg:x="38134584239" fg:w="333933356"/><text x="91.6902%" y="143.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitOrAssign&gt;::bitor_assign (333,933,356 samples, 0.80%)</title><rect x="91.4402%" y="117" width="0.8007%" height="15" fill="rgb(216,46,15)" fg:x="38134584239" fg:w="333933356"/><text x="91.6902%" y="127.50"></text></g><g><title>&lt;shiro::engine::core::bitboard::Bitboard as core::ops::bit::Not&gt;::not (5,482,464 samples, 0.01%)</title><rect x="92.2409%" y="133" width="0.0131%" height="15" fill="rgb(250,74,19)" fg:x="38468517595" fg:w="5482464"/><text x="92.4909%" y="143.50"></text></g><g><title>&lt;u64 as core::ops::bit::Not&gt;::not (5,482,464 samples, 0.01%)</title><rect x="92.2409%" y="117" width="0.0131%" height="15" fill="rgb(249,42,33)" fg:x="38468517595" fg:w="5482464"/><text x="92.4909%" y="127.50"></text></g><g><title>shiro::engine::common::chess_move::Move::start (5,486,200 samples, 0.01%)</title><rect x="92.2541%" y="133" width="0.0132%" height="15" fill="rgb(242,149,17)" fg:x="38474000059" fg:w="5486200"/><text x="92.5041%" y="143.50"></text></g><g><title>shiro::engine::common::chess_move::Move::start_or_err (5,486,200 samples, 0.01%)</title><rect x="92.2541%" y="117" width="0.0132%" height="15" fill="rgb(244,29,21)" fg:x="38474000059" fg:w="5486200"/><text x="92.5041%" y="127.50"></text></g><g><title>modular_bitfield::private::proc::read_specifier (5,486,200 samples, 0.01%)</title><rect x="92.2541%" y="101" width="0.0132%" height="15" fill="rgb(220,130,37)" fg:x="38474000059" fg:w="5486200"/><text x="92.5041%" y="111.50"></text></g><g><title>&lt;modular_bitfield::private::push_pop::PushBuffer&lt;u8&gt; as modular_bitfield::private::traits::PushBits&gt;::push_bits (5,486,200 samples, 0.01%)</title><rect x="92.2541%" y="85" width="0.0132%" height="15" fill="rgb(211,67,2)" fg:x="38474000059" fg:w="5486200"/><text x="92.5041%" y="95.50"></text></g><g><title>shiro::engine::core::BoardState::get_peice_bb_mut (5,482,391 samples, 0.01%)</title><rect x="92.2672%" y="133" width="0.0131%" height="15" fill="rgb(235,68,52)" fg:x="38479486259" fg:w="5482391"/><text x="92.5172%" y="143.50"></text></g><g><title>shiro::engine::core::Piece::ptype (5,482,391 samples, 0.01%)</title><rect x="92.2672%" y="117" width="0.0131%" height="15" fill="rgb(246,142,3)" fg:x="38479486259" fg:w="5482391"/><text x="92.5172%" y="127.50"></text></g><g><title>shiro::engine::core::Piece::ptype_or_err (5,482,391 samples, 0.01%)</title><rect x="92.2672%" y="101" width="0.0131%" height="15" fill="rgb(241,25,7)" fg:x="38479486259" fg:w="5482391"/><text x="92.5172%" y="111.50"></text></g><g><title>&lt;shiro::engine::core::PieceType as modular_bitfield::Specifier&gt;::from_bytes (5,482,391 samples, 0.01%)</title><rect x="92.2672%" y="85" width="0.0131%" height="15" fill="rgb(242,119,39)" fg:x="38479486259" fg:w="5482391"/><text x="92.5172%" y="95.50"></text></g><g><title>shiro::engine::core::Flags::set_w_castle_q (5,486,125 samples, 0.01%)</title><rect x="92.2804%" y="133" width="0.0132%" height="15" fill="rgb(241,98,45)" fg:x="38484968650" fg:w="5486125"/><text x="92.5304%" y="143.50"></text></g><g><title>shiro::engine::core::Flags::set_w_castle_q_checked (5,486,125 samples, 0.01%)</title><rect x="92.2804%" y="117" width="0.0132%" height="15" fill="rgb(254,28,30)" fg:x="38484968650" fg:w="5486125"/><text x="92.5304%" y="127.50"></text></g><g><title>modular_bitfield::private::proc::write_specifier (5,486,125 samples, 0.01%)</title><rect x="92.2804%" y="101" width="0.0132%" height="15" fill="rgb(241,142,54)" fg:x="38484968650" fg:w="5486125"/><text x="92.5304%" y="111.50"></text></g><g><title>shiro::engine::core::Piece::ptype (27,369,596 samples, 0.07%)</title><rect x="92.2935%" y="133" width="0.0656%" height="15" fill="rgb(222,85,15)" fg:x="38490454775" fg:w="27369596"/><text x="92.5435%" y="143.50"></text></g><g><title>shiro::engine::core::Piece::ptype_or_err (27,369,596 samples, 0.07%)</title><rect x="92.2935%" y="117" width="0.0656%" height="15" fill="rgb(210,85,47)" fg:x="38490454775" fg:w="27369596"/><text x="92.5435%" y="127.50"></text></g><g><title>modular_bitfield::private::proc::read_specifier (27,369,596 samples, 0.07%)</title><rect x="92.2935%" y="101" width="0.0656%" height="15" fill="rgb(224,206,25)" fg:x="38490454775" fg:w="27369596"/><text x="92.5435%" y="111.50"></text></g><g><title>&lt;modular_bitfield::private::push_pop::PushBuffer&lt;u8&gt; as modular_bitfield::private::traits::PushBits&gt;::push_bits (27,369,596 samples, 0.07%)</title><rect x="92.2935%" y="85" width="0.0656%" height="15" fill="rgb(243,201,19)" fg:x="38490454775" fg:w="27369596"/><text x="92.5435%" y="95.50"></text></g><g><title>shiro::engine::perft::make_move (18,566,584,788 samples, 44.52%)</title><rect x="47.8528%" y="149" width="44.5195%" height="15" fill="rgb(236,59,4)" fg:x="19956698872" fg:w="18566584788"/><text x="48.1028%" y="159.50">shiro::engine::perft::make_move</text></g><g><title>shiro::engine::core::Piece::with_color (5,459,289 samples, 0.01%)</title><rect x="92.3592%" y="133" width="0.0131%" height="15" fill="rgb(254,179,45)" fg:x="38517824371" fg:w="5459289"/><text x="92.6092%" y="143.50"></text></g><g><title>shiro::engine::core::Piece::set_color (5,459,289 samples, 0.01%)</title><rect x="92.3592%" y="117" width="0.0131%" height="15" fill="rgb(226,14,10)" fg:x="38517824371" fg:w="5459289"/><text x="92.6092%" y="127.50"></text></g><g><title>shiro::engine::core::Piece::set_color_checked (5,459,289 samples, 0.01%)</title><rect x="92.3592%" y="101" width="0.0131%" height="15" fill="rgb(244,27,41)" fg:x="38517824371" fg:w="5459289"/><text x="92.6092%" y="111.50"></text></g><g><title>modular_bitfield::private::proc::write_specifier (5,459,289 samples, 0.01%)</title><rect x="92.3592%" y="85" width="0.0131%" height="15" fill="rgb(235,35,32)" fg:x="38517824371" fg:w="5459289"/><text x="92.6092%" y="95.50"></text></g><g><title>shiro::engine::common::movelist::MoveList::get (82,148,525 samples, 0.20%)</title><rect x="94.2031%" y="117" width="0.1970%" height="15" fill="rgb(218,68,31)" fg:x="39286807292" fg:w="82148525"/><text x="94.4531%" y="127.50"></text></g><g><title>&lt;shiro::engine::common::movelist::MoveListIter as core::iter::traits::iterator::Iterator&gt;::next (197,064,466 samples, 0.47%)</title><rect x="93.9932%" y="133" width="0.4725%" height="15" fill="rgb(207,120,37)" fg:x="39199270374" fg:w="197064466"/><text x="94.2432%" y="143.50"></text></g><g><title>shiro::engine::common::movelist::MoveList::len (27,379,023 samples, 0.07%)</title><rect x="94.4000%" y="117" width="0.0657%" height="15" fill="rgb(227,98,0)" fg:x="39368955817" fg:w="27379023"/><text x="94.6500%" y="127.50"></text></g><g><title>&lt;shiro::engine::core::BoardState as core::clone::Clone&gt;::clone (1,877,825,007 samples, 4.50%)</title><rect x="94.4657%" y="133" width="4.5027%" height="15" fill="rgb(207,7,3)" fg:x="39396334840" fg:w="1877825007"/><text x="94.7157%" y="143.50">&lt;shir..</text></g><g><title>[libc.so.6] (1,801,128,691 samples, 4.32%)</title><rect x="94.6496%" y="117" width="4.3188%" height="15" fill="rgb(206,98,19)" fg:x="39473031156" fg:w="1801128691"/><text x="94.8996%" y="127.50">[libc..</text></g><g><title>shiro::engine::common::movelist::MoveList::new (320,713,812 samples, 0.77%)</title><rect x="98.9684%" y="133" width="0.7690%" height="15" fill="rgb(217,5,26)" fg:x="41274159847" fg:w="320713812"/><text x="99.2184%" y="143.50"></text></g><g><title>[libc.so.6] (320,713,812 samples, 0.77%)</title><rect x="98.9684%" y="117" width="0.7690%" height="15" fill="rgb(235,190,38)" fg:x="41274159847" fg:w="320713812"/><text x="99.2184%" y="127.50"></text></g><g><title>all (41,704,389,203 samples, 100%)</title><rect x="0.0000%" y="181" width="100.0000%" height="15" fill="rgb(247,86,24)" fg:x="0" fg:w="41704389203"/><text x="0.2500%" y="191.50"></text></g><g><title>game (41,704,389,203 samples, 100.00%)</title><rect x="0.0000%" y="165" width="100.0000%" height="15" fill="rgb(205,101,16)" fg:x="0" fg:w="41704389203"/><text x="0.2500%" y="175.50">game</text></g><g><title>shiro::engine::perft::perft_simple (3,181,105,543 samples, 7.63%)</title><rect x="92.3723%" y="149" width="7.6277%" height="15" fill="rgb(246,168,33)" fg:x="38523283660" fg:w="3181105543"/><text x="92.6223%" y="159.50">shiro::eng..</text></g><g><title>shiro::engine::move_gen::gen_moves (109,515,544 samples, 0.26%)</title><rect x="99.7374%" y="133" width="0.2626%" height="15" fill="rgb(231,114,1)" fg:x="41594873659" fg:w="109515544"/><text x="99.9874%" y="143.50"></text></g></svg></svg>